Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% (97261)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 140
% Passive clauses: 1203
% Generated clauses: 11755
% Final active clauses: 128
% Final passive clauses: 916
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 853
% Trivial inequalities: 86
% Fw subsumption resolutions: 1557
% Fw demodulations: 1707
% Bw demodulations: 11
% 
% Simple tautologies: 237
% Equational tautologies: 19
% Forward subsumptions: 5453
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 243
% Forward superposition: 4448
% Backward superposition: 2558
% Self superposition: 80
% Equality factoring: 32
% Equality resolution: 27
% 
% Split clauses: 397
% Split components: 799
% SAT solver clauses: 781
% SAT solver unit clauses: 16
% SAT solver binary clauses: 114
% 
% Sat splits: 397
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 781
% TWLsolver calls for satisfiability: 161
% 
% Memory used [KB]: 9338
% Time elapsed: 0.609 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordProps
% (97279)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 1190
% Generated clauses: 11396
% Final active clauses: 116
% Final passive clauses: 919
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 413
% Trivial inequalities: 65
% Fw subsumption resolutions: 291
% Fw demodulations: 1037
% Bw demodulations: 139
% Condensations: 615
% 
% Simple tautologies: 54
% Equational tautologies: 22
% Forward subsumptions: 5648
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 9
% 
% Binary resolution: 83
% Forward superposition: 4301
% Backward superposition: 2850
% Self superposition: 135
% Equality factoring: 34
% Equality resolution: 8
% 
% Split clauses: 107
% Split components: 233
% SAT solver clauses: 2082
% SAT solver unit clauses: 57
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 107
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 2081
% TWLsolver calls for satisfiability: 1032
% 
% Memory used [KB]: 28016
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordProps
% (97302)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 403
% Passive clauses: 5677
% Generated clauses: 66054
% Final active clauses: 50
% Final passive clauses: 389
% Input formulas: 21
% Initial clauses: 39
% Discarded non-redundant clauses: 1508
% 
% Duplicate literals: 4355
% Trivial inequalities: 285
% Fw subsumption resolutions: 3777
% Fw demodulations: 10693
% Bw demodulations: 2998
% Condensations: 5655
% Global subsumptions: 123
% 
% Simple tautologies: 540
% Equational tautologies: 782
% Forward subsumptions: 33097
% Fw demodulations to eq. taut.: 45
% Bw demodulations to eq. taut.: 124
% 
% Unit resulting resolution: 3071
% Forward superposition: 18379
% Backward superposition: 11712
% Self superposition: 286
% Equality factoring: 150
% Equality resolution: 46
% 
% Split clauses: 255
% Split components: 521
% SAT solver clauses: 6457
% SAT solver unit clauses: 76
% SAT solver binary clauses: 380
% 
% Sat splits: 255
% Sat splitting refutations: 145
% 
% Memory used [KB]: 85840
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f5464,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f121,f137,f156,f167,f158,f178,f182,f194,f204,f210,f211,f226,f240,f244,f164,f162,f160,f248,f352,f225,f139,f379,f383,f462,f734,f744,f740,f738,f736,f819,f829,f838,f196,f854,f864,f860,f858,f856,f902,f903,f933,f937,f975,f135,f1274,f1288,f1275,f1290,f1337,f1341,f1355,f136,f1342,f1356,f1289,f1429,f1439,f1449,f1450,f1435,f1433,f1431,f1454,f1445,f1443,f1441,f1509,f1510,f1671,f1721,f1730,f1734,f1738,f1727,f1725,f1723,f1754,f1755,f1797,f1783,f1810,f1814,f1818,f1827,f1843,f1821,f197,f1850,f1848,f1846,f1852,f1855,f1859,f200,f198,f1876,f1862,f1778,f1879,f1883,f1887,f825,f823,f821,f1906,f1892,f1807,f1909,f1913,f1917,f1933,f1934,f1954,f1776,f1935,f1956,f1805,f1996,f1997,f2077,f2081,f2083,f2085,f2086,f2079,f2089,f2096,f2114,f2116,f2121,f2118,f2123,f2128,f2141,f2145,f2147,f2151,f2156,f2159,f2163,f1865,f1860,f2169,f2167,f2165,f2172,f2174,f2178,f2179,f2180,f2182,f2183,f2185,f2186,f2188,f2193,f2197,f2200,f2201,f143,f141,f2222,f2225,f2226,f2228,f2229,f2224,f2246,f2255,f2259,f2263,f2252,f2250,f2248,f2280,f2283,f2284,f2286,f2287,f2282,f2327,f2328,f2347,f2348,f1774,f2459,f2460,f2489,f2490,f2491,f2150,f2492,f2144,f2509,f2512,f2513,f2516,f2511,f2578,f2581,f2582,f2585,f2580,f2589,f1952,f1772,f2604,f2607,f2608,f2611,f2606,f2628,f2631,f2632,f2635,f2630,f2651,f2653,f2658,f2655,f2660,f2701,f2702,f2768,f2784,f2091,f2787,f2093,f2098,f2807,f2816,f2820,f2824,f2813,f2811,f2809,f2864,f2865,f2976,f2992,f2995,f2996,f2999,f2994,f3016,f3019,f3020,f3023,f3018,f3091,f2584,f3092,f3093,f2998,f3095,f2515,f3096,f2610,f3097,f3022,f3116,f3119,f3122,f3123,f3118,f3124,f3121,f3142,f3145,f3148,f3149,f3144,f3150,f3147,f3168,f3171,f3174,f3175,f3176,f3173,f3194,f3197,f3200,f3201,f3202,f3199,f3220,f3223,f3226,f3227,f3228,f3225,f3246,f3249,f3252,f3253,f3254,f3251,f3272,f3275,f3278,f3279,f3280,f3277,f3298,f3301,f3304,f3305,f3306,f3303,f3324,f3327,f3330,f3331,f3332,f3329,f3350,f3353,f3356,f3357,f3358,f3355,f3376,f3379,f3382,f3383,f3384,f3381,f3402,f3405,f3408,f3409,f3410,f3407,f3428,f3431,f3434,f3435,f3436,f3433,f3454,f3457,f3460,f3461,f3462,f3459,f3480,f3483,f3486,f3487,f3488,f3485,f3549,f3196,f3550,f3430,f3551,f3248,f3552,f2634,f3553,f3456,f3556,f3300,f3557,f3378,f3560,f3326,f3561,f3404,f3562,f3170,f3565,f3352,f3566,f3482,f3568,f3222,f3569,f3274,f3588,f3591,f3592,f3595,f3596,f3590,f3597,f3594,f3616,f3619,f3620,f3623,f3624,f3618,f3625,f3622,f3644,f3647,f3648,f3651,f3652,f3646,f3653,f3650,f3672,f3675,f3676,f3679,f3680,f3674,f3681,f3678,f3700,f3703,f3704,f3707,f3708,f3702,f3709,f3706,f3728,f3731,f3732,f3735,f3736,f3730,f3737,f3734,f3756,f3759,f3760,f3763,f3764,f3758,f3765,f3762,f3784,f3787,f3788,f3791,f3792,f3786,f3793,f3790,f3812,f3815,f3816,f3819,f3820,f3814,f3821,f3818,f3840,f3843,f3844,f3847,f3848,f3842,f3849,f3846,f3868,f3871,f3872,f3875,f3876,f3870,f3877,f3874,f3896,f3899,f3900,f3903,f3904,f3898,f3905,f3902,f3924,f3927,f3928,f3931,f3932,f3926,f3933,f3930,f3952,f3955,f3956,f3959,f3960,f3954,f3961,f3958,f3980,f3983,f3984,f3987,f3988,f3982,f3989,f3986,f4038,f1801,f4059,f4043,f4069,f4044,f4071,f4067,f4075,f4078,f4082,f4086,f4065,f4063,f4061,f4095,f1803,f4112,f4115,f4116,f4119,f4120,f4114,f4121,f4118,f4140,f4143,f4144,f4147,f4148,f4142,f4149,f4146,f4168,f4171,f4172,f4175,f4176,f4170,f4177,f4174,f4194,f4204,f4214,f4217,f4221,f1338,f4222,f4200,f4198,f4196,f4226,f4210,f4208,f4206,f4245,f4248,f4249,f4252,f4253,f4247,f4254,f4251,f4273,f4276,f4277,f4280,f4281,f4275,f4282,f4279,f4301,f4304,f4305,f4308,f4309,f4303,f4310,f4307,f4329,f4332,f4333,f4336,f4337,f4331,f4338,f4335,f4357,f4360,f4361,f4364,f4365,f4359,f4366,f4363,f4387,f4390,f4391,f4394,f4395,f4389,f4396,f4393,f4415,f4418,f4419,f4422,f4423,f4417,f4424,f4421,f4443,f4446,f4447,f4450,f4451,f4445,f4452,f4449,f4471,f4474,f4475,f4478,f4479,f4473,f4480,f4477,f4499,f4502,f4503,f4506,f4507,f4501,f4508,f4505,f4604,f2082,f4632,f4635,f4636,f4639,f4640,f4634,f4641,f4638,f4660,f4663,f4664,f4667,f4668,f4662,f4669,f4666,f4688,f4691,f4692,f4695,f4696,f4690,f4697,f4694,f4716,f4719,f4720,f4723,f4724,f4718,f4725,f4722,f4744,f4747,f4748,f4751,f4752,f4746,f4753,f4750,f4772,f4775,f4776,f4779,f4780,f4774,f4781,f4778,f4800,f4803,f4804,f4807,f4808,f4802,f4809,f4806,f4828,f4831,f4832,f4835,f4836,f4830,f4837,f4834,f4856,f4859,f4860,f4863,f4864,f4858,f4865,f4862,f4884,f4887,f4888,f4891,f4892,f4886,f4893,f4890,f4912,f4915,f4916,f4919,f4920,f4914,f4921,f4918,f4940,f4943,f4944,f4947,f4948,f4942,f4949,f4946,f4968,f4971,f4972,f4975,f4976,f4970,f4977,f4974,f4996,f4999,f5000,f5003,f5004,f4998,f5005,f5002,f5024,f5027,f5028,f5031,f5032,f5026,f5033,f5030,f5083,f1799,f2080,f5101,f5104,f5105,f2142,f5108,f2146,f5109,f5103,f5110,f5107,f2148,f5157,f5268,f5269,f5446,f5447])).
fof(f5447,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl108)),
  inference(subsumption_resolution,[],[f5407,f308])).
fof(f308,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(forward_demodulation,[],[f307,f105])).
fof(f105,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) )),
  inference(resolution,[],[f72,f97])).
fof(f97,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X39] : (s(bool,'T_0') = s(bool,X39) <=> p(s(bool,X39)))),
  file('thm.wordProps.inst_ok_less_ind','thm.bool.EQ_CLAUSES|split|1')).
fof(f72,plain,(
  ( ! [X17] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X17))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X28,X29,X30,X31,X32] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X28))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X29),s('type.num.num',X30),s('type.num.num',X31),s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),X32)))))))))) & ! [X23,X24,X25,X26,X27] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X23))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X24),s('type.num.num',X25),s('type.num.num',X26),s('type.num.num',X27)))))))) & ! [X18,X19,X20,X21,X22] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X18))),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X19),s('type.num.num',X20),s('type.asm.addr'(sK0),'const.asm.Addr_2'(s('type.num.num',X21),s('type.fcp.cart'(bool,sK0),X22)))))))) & ! [X17] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X17))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) & ! [X14,X15,X16] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X14))),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X15),s('type.fcp.cart'(bool,sK0),X16)))))) & ! [X9,X10,X11,X12,X13] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X9))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',X13)))))))))) & ! [X4,X5,X6,X7,X8] : p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))))))) & ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f55])).
fof(f55,plain,(
  ? [X0,X1] : (! [X28,X29,X30,X31,X32] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X28))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X29),s('type.num.num',X30),s('type.num.num',X31),s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X32)))))))))) & ! [X23,X24,X25,X26,X27] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X23))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X24),s('type.num.num',X25),s('type.num.num',X26),s('type.num.num',X27)))))))) & ! [X18,X19,X20,X21,X22] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X18))),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X19),s('type.num.num',X20),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X21),s('type.fcp.cart'(bool,X0),X22)))))))) & ! [X17] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X17))),s('type.asm.inst'(X0),'const.asm.Skip_0')))) & ! [X14,X15,X16] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X14))),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X15),s('type.fcp.cart'(bool,X0),X16)))))) & ! [X9,X10,X11,X12,X13] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X9))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X13)))))))))) & ! [X4,X5,X6,X7,X8] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X4))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))))))) & ? [X2,X3] : ~p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X2))),s('type.asm.inst'(X0),X3)))))),
  inference(rectify,[],[f51])).
fof(f51,plain,(
  ? [X0,X1] : (! [X26,X27,X28,X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X26))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X30)))))))))) & ! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X21))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.num.num',X25)))))))) & ! [X16,X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X16))),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X17),s('type.num.num',X18),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X0),X20)))))))) & ! [X15] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X15))),s('type.asm.inst'(X0),'const.asm.Skip_0')))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X12))),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X13),s('type.fcp.cart'(bool,X0),X14)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X7))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X11)))))))))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X2))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6)))))))) & ? [X31,X32] : ~p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X31))),s('type.asm.inst'(X0),X32)))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ? [X0,X1] : ((! [X26,X27,X28,X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X26))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X30)))))))))) & ! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X21))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.num.num',X25)))))))) & ! [X16,X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X16))),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X17),s('type.num.num',X18),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X0),X20)))))))) & ! [X15] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X15))),s('type.asm.inst'(X0),'const.asm.Skip_0')))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X12))),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X13),s('type.fcp.cart'(bool,X0),X14)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X7))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X11)))))))))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X2))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6))))))))) & ? [X31,X32] : ~p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X31))),s('type.asm.inst'(X0),X32)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1] : ((! [X26,X27,X28,X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X26))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X30)))))))))) & ! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X21))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.num.num',X25)))))))) & ! [X16,X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X16))),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X17),s('type.num.num',X18),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X0),X20)))))))) & ! [X15] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X15))),s('type.asm.inst'(X0),'const.asm.Skip_0')))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X12))),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X13),s('type.fcp.cart'(bool,X0),X14)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X7))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X11)))))))))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X2))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6))))))))) => ! [X31,X32] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X31))),s('type.asm.inst'(X0),X32)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1] : ((! [X26,X27,X28,X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X26))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X30)))))))))) & ! [X21,X22,X23,X24,X25] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X21))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X22),s('type.num.num',X23),s('type.num.num',X24),s('type.num.num',X25)))))))) & ! [X16,X17,X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X16))),s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X17),s('type.num.num',X18),s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X0),X20)))))))) & ! [X15] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X15))),s('type.asm.inst'(X0),'const.asm.Skip_0')))) & ! [X12,X13,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X12))),s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X13),s('type.fcp.cart'(bool,X0),X14)))))) & ! [X7,X8,X9,X10,X11] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X7))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X8),s('type.num.num',X9),s('type.num.num',X10),s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X11)))))))))) & ! [X2,X3,X4,X5,X6] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X2))),s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5),s('type.num.num',X6))))))))) => ! [X31,X32] : p(s(bool,happ(s(fun('type.asm.inst'(X0),bool),happ(s(fun('type.asm.asm_config'(X0),fun('type.asm.inst'(X0),bool)),X1),s('type.asm.asm_config'(X0),X31))),s('type.asm.inst'(X0),X32)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(X6),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X6),X12)))))))))) & ! [X8,X13,X10,X11,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X14)))))))) & ! [X8,X15,X16,X17,X12] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X15),s('type.num.num',X16),s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X17),s('type.fcp.cart'(bool,X6),X12)))))))) & ! [X18] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Skip_0')))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X6),X20)))))) & ! [X18,X21,X22,X23,X24] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(X6),'const.asm.Reg_1'(s('type.num.num',X24)))))))))) & ! [X18,X25,X26,X27,X28] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.num.num',X28))))))))) => ! [X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X29))),s('type.asm.inst'(X6),X30)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9,X10,X11,X12] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(X6),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X6),X12)))))))))) & ! [X8,X13,X10,X11,X14] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X13),s('type.num.num',X10),s('type.num.num',X11),s('type.num.num',X14)))))))) & ! [X8,X15,X16,X17,X12] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X8))),s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X15),s('type.num.num',X16),s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X17),s('type.fcp.cart'(bool,X6),X12)))))))) & ! [X18] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Skip_0')))) & ! [X18,X19,X20] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X19),s('type.fcp.cart'(bool,X6),X20)))))) & ! [X18,X21,X22,X23,X24] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(X6),'const.asm.Reg_1'(s('type.num.num',X24)))))))))) & ! [X18,X25,X26,X27,X28] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X18))),s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.num.num',X28))))))))) => ! [X29,X30] : p(s(bool,happ(s(fun('type.asm.inst'(X6),bool),happ(s(fun('type.asm.asm_config'(X6),fun('type.asm.inst'(X6),bool)),X7),s('type.asm.asm_config'(X6),X29))),s('type.asm.inst'(X6),X30)))))),
  file('thm.wordProps.inst_ok_less_ind','thm.wordProps.inst_ok_less_ind')).
fof(f307,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X9))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) )),
  inference(subsumption_resolution,[],[f282,f99])).
fof(f99,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.wordProps.inst_ok_less_ind',aHL_TRUTH)).
fof(f282,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X9))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) )),
  inference(superposition,[],[f90,f105])).
fof(f90,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X39] : (s(bool,'F_0') = s(bool,X39) <=> ~p(s(bool,X39)))),
  file('thm.wordProps.inst_ok_less_ind','thm.bool.EQ_CLAUSES|split|3')).
fof(f5407,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl75 | $spl97 | $spl108)),
  inference(backward_demodulation,[],[f5389,f126])).
fof(f126,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK3)))),
  inference(resolution,[],[f76,f93])).
fof(f93,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X39] : (s(bool,'F_0') = s(bool,X39) <=> ~p(s(bool,X39)))),
  file('thm.wordProps.inst_ok_less_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f76,plain,(
  ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK3))))),
  inference(cnf_transformation,[],[f56])).
fof(f5389,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl6 | $spl75 | $spl97 | $spl108)),
  inference(forward_demodulation,[],[f5388,f141])).
fof(f5388,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) ) | ($spl75 | $spl97 | $spl108)),
  inference(subsumption_resolution,[],[f5387,f1951])).
fof(f1951,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | $spl97),
  inference(cnf_transformation,[],[f1951_D])).
fof(f1951_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f5387,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | ($spl75 | $spl108)),
  inference(subsumption_resolution,[],[f5345,f1773])).
fof(f1773,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | $spl75),
  inference(cnf_transformation,[],[f1773_D])).
fof(f1773_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f5345,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | $spl108),
  inference(superposition,[],[f2210,f84])).
fof(f84,plain,(
  ( ! [X0,X1] : (s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',sK41(X1,X0)),s('type.num.num',sK42(X1,X0)),s('type.num.num',sK43(X1,X0)),s('type.num.num',sK44(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',sK37(X1,X0)),s('type.num.num',sK38(X1,X0)),s('type.num.num',sK39(X1,X0)),s('type.num.num',sK40(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',sK33(X1,X0)),s('type.num.num',sK34(X1,X0)),s('type.num.num',sK35(X1,X0)),s('type.asm.reg_imm'(X0),sK36(X1,X0))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : (s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',sK33(X1,X0)),s('type.num.num',sK34(X1,X0)),s('type.num.num',sK35(X1,X0)),s('type.asm.reg_imm'(X0),sK36(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',sK37(X1,X0)),s('type.num.num',sK38(X1,X0)),s('type.num.num',sK39(X1,X0)),s('type.num.num',sK40(X1,X0)))) | s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',sK41(X1,X0)),s('type.num.num',sK42(X1,X0)),s('type.num.num',sK43(X1,X0)),s('type.num.num',sK44(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44])],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (? [X10,X11,X12,X13] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),X13))) | ? [X6,X7,X8,X9] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))) | ? [X2,X3,X4,X5] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1] : (? [X10,X11,X12,X13] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(X0),X13))) | ? [X6,X7,X8,X9] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.Shift_4'(s('type.asm.shift',X6),s('type.num.num',X7),s('type.num.num',X8),s('type.num.num',X9))) | ? [X2,X3,X4,X5] : s('type.asm.arith'(X0),X1) = s('type.asm.arith'(X0),'const.asm.AddCarry_4'(s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.num.num',X5))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X32] : (? [X9,X14,X33,X16] : s('type.asm.arith'(X6),X32) = s('type.asm.arith'(X6),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X14),s('type.num.num',X33),s('type.asm.reg_imm'(X6),X16))) | ? [X34,X14,X33,X35] : s('type.asm.arith'(X6),X32) = s('type.asm.arith'(X6),'const.asm.Shift_4'(s('type.asm.shift',X34),s('type.num.num',X14),s('type.num.num',X33),s('type.num.num',X35))) | ? [X14,X33,X35,X36] : s('type.asm.arith'(X6),X32) = s('type.asm.arith'(X6),'const.asm.AddCarry_4'(s('type.num.num',X14),s('type.num.num',X33),s('type.num.num',X35),s('type.num.num',X36))))),
  file('thm.wordProps.inst_ok_less_ind','thm.asm.arith_nchotomy')).
fof(f2210,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X1),s('type.num.num',X2),s('type.num.num',X3),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl108),
  inference(superposition,[],[f692,f2085])).
fof(f692,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X1),s('type.num.num',X2),s('type.num.num',X3),s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),X4)))))))))) )),
  inference(resolution,[],[f69,f97])).
fof(f69,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X28))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X29),s('type.num.num',X30),s('type.num.num',X31),s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),X32))))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f5446,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl108)),
  inference(trivial_inequality_removal,[],[f5415])).
fof(f5415,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl75 | $spl97 | $spl108)),
  inference(superposition,[],[f124,f5389])).
fof(f124,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK3)))),
  inference(resolution,[],[f76,f96])).
fof(f96,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f68])).
fof(f5269,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl126)),
  inference(subsumption_resolution,[],[f5229,f308])).
fof(f5229,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl75 | $spl97 | $spl126)),
  inference(backward_demodulation,[],[f5211,f126])).
fof(f5211,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl6 | $spl75 | $spl97 | $spl126)),
  inference(forward_demodulation,[],[f5210,f141])).
fof(f5210,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) ) | ($spl75 | $spl97 | $spl126)),
  inference(subsumption_resolution,[],[f5209,f1951])).
fof(f5209,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | ($spl75 | $spl126)),
  inference(subsumption_resolution,[],[f5167,f1773])).
fof(f5167,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | $spl126),
  inference(superposition,[],[f2146,f84])).
fof(f5268,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl126)),
  inference(trivial_inequality_removal,[],[f5237])).
fof(f5237,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl75 | $spl97 | $spl126)),
  inference(superposition,[],[f124,f5211])).
fof(f5157,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl122)),
  inference(trivial_inequality_removal,[],[f5147])).
fof(f5147,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl6 | $spl75 | $spl97 | $spl122)),
  inference(superposition,[],[f5139,f126])).
fof(f5139,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl6 | $spl75 | $spl97 | $spl122)),
  inference(forward_demodulation,[],[f5138,f141])).
fof(f5138,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) ) | ($spl75 | $spl97 | $spl122)),
  inference(subsumption_resolution,[],[f5137,f1951])).
fof(f5137,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | ($spl75 | $spl122)),
  inference(subsumption_resolution,[],[f5122,f1773])).
fof(f5122,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | $spl122),
  inference(superposition,[],[f2142,f84])).
fof(f2148,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl128),
  inference(cnf_transformation,[],[f2148_D])).
fof(f2148_D,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f5107,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl450),
  inference(cnf_transformation,[],[f5107_D])).
fof(f5107_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f5110,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5092,f3902])).
fof(f5092,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f708,f3902])).
fof(f708,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.asm.reg_imm'(sK0),X0)))))))) | s('type.asm.reg_imm'(sK0),X0) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(X0,sK0))))) )),
  inference(superposition,[],[f69,f85])).
fof(f85,plain,(
  ( ! [X0,X1] : (s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),sK46(X1,X0)))) | s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',sK45(X1,X0))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : (s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',sK45(X1,X0)))) | s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),sK46(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46])],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (? [X3] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X3))) | ? [X2] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X2))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (? [X3] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Reg_1'(s('type.num.num',X3))) | ? [X2] : s('type.asm.reg_imm'(X0),X1) = s('type.asm.reg_imm'(X0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X0),X2))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X31] : (? [X14] : s('type.asm.reg_imm'(X6),X31) = s('type.asm.reg_imm'(X6),'const.asm.Reg_1'(s('type.num.num',X14))) | ? [X8] : s('type.asm.reg_imm'(X6),X31) = s('type.asm.reg_imm'(X6),'const.asm.Imm_1'(s('type.fcp.cart'(bool,X6),X8))))),
  file('thm.wordProps.inst_ok_less_ind','thm.asm.reg_imm_nchotomy')).
fof(f5103,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl448),
  inference(cnf_transformation,[],[f5103_D])).
fof(f5103_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl448),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl448])])).
fof(f5109,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5091,f3902])).
fof(f5091,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f620,f3902])).
fof(f620,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.asm.reg_imm'(sK0),X0)))))))) | s('type.asm.reg_imm'(sK0),X0) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(X0,sK0))))) )),
  inference(superposition,[],[f74,f85])).
fof(f74,plain,(
  ( ! [X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X9))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X10),s('type.num.num',X11),s('type.num.num',X12),s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',X13))))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f2146,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl126),
  inference(cnf_transformation,[],[f2146_D])).
fof(f2146_D,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f5108,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5090,f3902])).
fof(f5090,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f1134,f3902])).
fof(f1134,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.asm.reg_imm'(sK0),X0))))))) | s('type.asm.reg_imm'(sK0),X0) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(X0,sK0))))) )),
  inference(superposition,[],[f692,f85])).
fof(f2142,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl122),
  inference(cnf_transformation,[],[f2142_D])).
fof(f2142_D,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f5105,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5089,f3902])).
fof(f5089,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f1214,f3902])).
fof(f1214,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X11))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X12),s('type.num.num',X13),s('type.num.num',X14),s('type.asm.reg_imm'(sK0),X10))))))) | s('type.asm.reg_imm'(sK0),X10) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(X10,sK0))))) )),
  inference(resolution,[],[f708,f92])).
fof(f92,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f5104,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5088,f3902])).
fof(f5088,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f1072,f3902])).
fof(f1072,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X2),s('type.num.num',X3),s('type.num.num',X4),s('type.asm.reg_imm'(sK0),X0))))))) | s('type.asm.reg_imm'(sK0),X0) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(X0,sK0))))) )),
  inference(superposition,[],[f605,f85])).
fof(f605,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X1),s('type.num.num',X2),s('type.num.num',X3),s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',X4)))))))))) )),
  inference(resolution,[],[f74,f97])).
fof(f5101,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl298),
  inference(forward_demodulation,[],[f5087,f3902])).
fof(f5087,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl298),
  inference(superposition,[],[f1245,f3902])).
fof(f1245,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X11))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X12),s('type.num.num',X13),s('type.num.num',X14),s('type.asm.reg_imm'(sK0),X10))))))) | s('type.asm.reg_imm'(sK0),X10) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(X10,sK0))))) )),
  inference(resolution,[],[f620,f92])).
fof(f2080,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl104),
  inference(cnf_transformation,[],[f2080_D])).
fof(f2080_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f1799,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl80),
  inference(cnf_transformation,[],[f1799_D])).
fof(f1799_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f5083,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl11 | $spl32 | $spl83)),
  inference(forward_demodulation,[],[f5082,f823])).
fof(f5082,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | ($spl11 | $spl32 | $spl83)),
  inference(subsumption_resolution,[],[f5081,f157])).
fof(f157,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),sK3) | $spl11),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),sK3) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f5081,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | ($spl32 | $spl83)),
  inference(forward_demodulation,[],[f5080,f823])).
fof(f5080,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | ($spl32 | $spl83)),
  inference(subsumption_resolution,[],[f5079,f1800])).
fof(f1800,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl83),
  inference(cnf_transformation,[],[f1800_D])).
fof(f1800_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f5079,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f5044,f823])).
fof(f5044,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f1298,f823])).
fof(f1298,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X9))),s('type.asm.inst'(sK0),X8))) | s('type.asm.inst'(sK0),X8) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(X8,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),X8) | s('type.asm.inst'(sK0),X8) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X8,sK0)),s('type.num.num',sK51(X8,sK0)),s('type.asm.addr'(sK0),sK52(X8,sK0))))) )),
  inference(resolution,[],[f341,f92])).
fof(f341,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),X0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X0,sK0)),s('type.num.num',sK51(X0,sK0)),s('type.asm.addr'(sK0),sK52(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(X0,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),X0)) )),
  inference(superposition,[],[f73,f86])).
fof(f86,plain,(
  ( ! [X0,X1] : (s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X1,X0)),s('type.num.num',sK51(X1,X0)),s('type.asm.addr'(X0),sK52(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),sK49(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',sK47(X1,X0)),s('type.fcp.cart'(bool,X0),sK48(X1,X0)))) | s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',sK47(X1,X0)),s('type.fcp.cart'(bool,X0),sK48(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),sK49(X1,X0)))) | s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X1,X0)),s('type.num.num',sK51(X1,X0)),s('type.asm.addr'(X0),sK52(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK47,sK48,sK49,sK50,sK51,sK52])],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | ? [X6,X7] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X6),s('type.fcp.cart'(bool,X0),X7))) | ? [X5] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),X5))) | ? [X2,X3,X4] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X2),s('type.num.num',X3),s('type.asm.addr'(X0),X4))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1] : (s('type.asm.inst'(X0),'const.asm.Skip_0') = s('type.asm.inst'(X0),X1) | ? [X6,X7] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Const_2'(s('type.num.num',X6),s('type.fcp.cart'(bool,X0),X7))) | ? [X5] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Arith_1'(s('type.asm.arith'(X0),X5))) | ? [X2,X3,X4] : s('type.asm.inst'(X0),X1) = s('type.asm.inst'(X0),'const.asm.Mem_3'(s('type.asm.mem_op',X2),s('type.num.num',X3),s('type.asm.addr'(X0),X4))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X37] : (s('type.asm.inst'(X6),'const.asm.Skip_0') = s('type.asm.inst'(X6),X37) | ? [X14,X8] : s('type.asm.inst'(X6),X37) = s('type.asm.inst'(X6),'const.asm.Const_2'(s('type.num.num',X14),s('type.fcp.cart'(bool,X6),X8))) | ? [X38] : s('type.asm.inst'(X6),X37) = s('type.asm.inst'(X6),'const.asm.Arith_1'(s('type.asm.arith'(X6),X38))) | ? [X15,X14,X38] : s('type.asm.inst'(X6),X37) = s('type.asm.inst'(X6),'const.asm.Mem_3'(s('type.asm.mem_op',X15),s('type.num.num',X14),s('type.asm.addr'(X6),X38))))),
  file('thm.wordProps.inst_ok_less_ind','thm.asm.inst_nchotomy')).
fof(f73,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X14))),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X15),s('type.fcp.cart'(bool,sK0),X16))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f5030,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl446),
  inference(cnf_transformation,[],[f5030_D])).
fof(f5030_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f5033,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5015,f3730])).
fof(f5015,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f708,f3730])).
fof(f5026,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl444),
  inference(cnf_transformation,[],[f5026_D])).
fof(f5026_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f5032,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5014,f3730])).
fof(f5014,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f620,f3730])).
fof(f5031,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5013,f3730])).
fof(f5013,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f1134,f3730])).
fof(f5028,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5012,f3730])).
fof(f5012,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f1214,f3730])).
fof(f5027,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5011,f3730])).
fof(f5011,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f1072,f3730])).
fof(f5024,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl272),
  inference(forward_demodulation,[],[f5010,f3730])).
fof(f5010,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl272),
  inference(superposition,[],[f1245,f3730])).
fof(f5002,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl442),
  inference(cnf_transformation,[],[f5002_D])).
fof(f5002_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f5005,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4987,f3702])).
fof(f4987,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f708,f3702])).
fof(f4998,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl440),
  inference(cnf_transformation,[],[f4998_D])).
fof(f4998_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f5004,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4986,f3702])).
fof(f4986,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f620,f3702])).
fof(f5003,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4985,f3702])).
fof(f4985,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f1134,f3702])).
fof(f5000,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4984,f3702])).
fof(f4984,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f1214,f3702])).
fof(f4999,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4983,f3702])).
fof(f4983,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f1072,f3702])).
fof(f4996,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl268),
  inference(forward_demodulation,[],[f4982,f3702])).
fof(f4982,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl268),
  inference(superposition,[],[f1245,f3702])).
fof(f4974,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl438),
  inference(cnf_transformation,[],[f4974_D])).
fof(f4974_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f4977,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4959,f3674])).
fof(f4959,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f708,f3674])).
fof(f4970,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl436),
  inference(cnf_transformation,[],[f4970_D])).
fof(f4970_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f4976,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4958,f3674])).
fof(f4958,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f620,f3674])).
fof(f4975,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4957,f3674])).
fof(f4957,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f1134,f3674])).
fof(f4972,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4956,f3674])).
fof(f4956,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f1214,f3674])).
fof(f4971,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4955,f3674])).
fof(f4955,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f1072,f3674])).
fof(f4968,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl264),
  inference(forward_demodulation,[],[f4954,f3674])).
fof(f4954,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl264),
  inference(superposition,[],[f1245,f3674])).
fof(f4946,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl434),
  inference(cnf_transformation,[],[f4946_D])).
fof(f4946_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f4949,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4931,f3646])).
fof(f4931,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f708,f3646])).
fof(f4942,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl432),
  inference(cnf_transformation,[],[f4942_D])).
fof(f4942_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f4948,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4930,f3646])).
fof(f4930,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f620,f3646])).
fof(f4947,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4929,f3646])).
fof(f4929,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f1134,f3646])).
fof(f4944,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4928,f3646])).
fof(f4928,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f1214,f3646])).
fof(f4943,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4927,f3646])).
fof(f4927,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f1072,f3646])).
fof(f4940,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl260),
  inference(forward_demodulation,[],[f4926,f3646])).
fof(f4926,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl260),
  inference(superposition,[],[f1245,f3646])).
fof(f4918,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl430),
  inference(cnf_transformation,[],[f4918_D])).
fof(f4918_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f4921,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4903,f3874])).
fof(f4903,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f708,f3874])).
fof(f4914,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl428),
  inference(cnf_transformation,[],[f4914_D])).
fof(f4914_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f4920,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4902,f3874])).
fof(f4902,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f620,f3874])).
fof(f4919,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4901,f3874])).
fof(f4901,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f1134,f3874])).
fof(f4916,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4900,f3874])).
fof(f4900,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f1214,f3874])).
fof(f4915,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4899,f3874])).
fof(f4899,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f1072,f3874])).
fof(f4912,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl294),
  inference(forward_demodulation,[],[f4898,f3874])).
fof(f4898,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl294),
  inference(superposition,[],[f1245,f3874])).
fof(f4890,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl426),
  inference(cnf_transformation,[],[f4890_D])).
fof(f4890_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f4893,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4875,f3846])).
fof(f4875,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f708,f3846])).
fof(f4886,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl424),
  inference(cnf_transformation,[],[f4886_D])).
fof(f4886_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f4892,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4874,f3846])).
fof(f4874,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f620,f3846])).
fof(f4891,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4873,f3846])).
fof(f4873,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f1134,f3846])).
fof(f4888,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4872,f3846])).
fof(f4872,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f1214,f3846])).
fof(f4887,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4871,f3846])).
fof(f4871,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f1072,f3846])).
fof(f4884,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl290),
  inference(forward_demodulation,[],[f4870,f3846])).
fof(f4870,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl290),
  inference(superposition,[],[f1245,f3846])).
fof(f4862,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl422),
  inference(cnf_transformation,[],[f4862_D])).
fof(f4862_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f4865,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4847,f3818])).
fof(f4847,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f708,f3818])).
fof(f4858,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl420),
  inference(cnf_transformation,[],[f4858_D])).
fof(f4858_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f4864,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4846,f3818])).
fof(f4846,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f620,f3818])).
fof(f4863,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4845,f3818])).
fof(f4845,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f1134,f3818])).
fof(f4860,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4844,f3818])).
fof(f4844,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f1214,f3818])).
fof(f4859,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4843,f3818])).
fof(f4843,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f1072,f3818])).
fof(f4856,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl286),
  inference(forward_demodulation,[],[f4842,f3818])).
fof(f4842,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl286),
  inference(superposition,[],[f1245,f3818])).
fof(f4834,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl418),
  inference(cnf_transformation,[],[f4834_D])).
fof(f4834_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f4837,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4819,f3790])).
fof(f4819,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f708,f3790])).
fof(f4830,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl416),
  inference(cnf_transformation,[],[f4830_D])).
fof(f4830_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f4836,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4818,f3790])).
fof(f4818,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f620,f3790])).
fof(f4835,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4817,f3790])).
fof(f4817,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f1134,f3790])).
fof(f4832,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4816,f3790])).
fof(f4816,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f1214,f3790])).
fof(f4831,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4815,f3790])).
fof(f4815,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f1072,f3790])).
fof(f4828,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl282),
  inference(forward_demodulation,[],[f4814,f3790])).
fof(f4814,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl282),
  inference(superposition,[],[f1245,f3790])).
fof(f4806,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl414),
  inference(cnf_transformation,[],[f4806_D])).
fof(f4806_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f4809,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4791,f3762])).
fof(f4791,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f708,f3762])).
fof(f4802,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl412),
  inference(cnf_transformation,[],[f4802_D])).
fof(f4802_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f4808,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4790,f3762])).
fof(f4790,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f620,f3762])).
fof(f4807,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4789,f3762])).
fof(f4789,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f1134,f3762])).
fof(f4804,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4788,f3762])).
fof(f4788,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f1214,f3762])).
fof(f4803,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4787,f3762])).
fof(f4787,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f1072,f3762])).
fof(f4800,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl278),
  inference(forward_demodulation,[],[f4786,f3762])).
fof(f4786,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl278),
  inference(superposition,[],[f1245,f3762])).
fof(f4778,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl410),
  inference(cnf_transformation,[],[f4778_D])).
fof(f4778_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f4781,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4763,f3618])).
fof(f4763,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f708,f3618])).
fof(f4774,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl408),
  inference(cnf_transformation,[],[f4774_D])).
fof(f4774_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f4780,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4762,f3618])).
fof(f4762,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f620,f3618])).
fof(f4779,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4761,f3618])).
fof(f4761,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f1134,f3618])).
fof(f4776,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4760,f3618])).
fof(f4760,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f1214,f3618])).
fof(f4775,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4759,f3618])).
fof(f4759,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f1072,f3618])).
fof(f4772,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl256),
  inference(forward_demodulation,[],[f4758,f3618])).
fof(f4758,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl256),
  inference(superposition,[],[f1245,f3618])).
fof(f4750,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl406),
  inference(cnf_transformation,[],[f4750_D])).
fof(f4750_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f4753,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4735,f3734])).
fof(f4735,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f708,f3734])).
fof(f4746,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl404),
  inference(cnf_transformation,[],[f4746_D])).
fof(f4746_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f4752,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4734,f3734])).
fof(f4734,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f620,f3734])).
fof(f4751,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4733,f3734])).
fof(f4733,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f1134,f3734])).
fof(f4748,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4732,f3734])).
fof(f4732,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f1214,f3734])).
fof(f4747,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4731,f3734])).
fof(f4731,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f1072,f3734])).
fof(f4744,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl274),
  inference(forward_demodulation,[],[f4730,f3734])).
fof(f4730,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl274),
  inference(superposition,[],[f1245,f3734])).
fof(f4722,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl402),
  inference(cnf_transformation,[],[f4722_D])).
fof(f4722_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f4725,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4707,f3706])).
fof(f4707,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f708,f3706])).
fof(f4718,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl400),
  inference(cnf_transformation,[],[f4718_D])).
fof(f4718_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f4724,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4706,f3706])).
fof(f4706,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f620,f3706])).
fof(f4723,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4705,f3706])).
fof(f4705,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f1134,f3706])).
fof(f4720,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4704,f3706])).
fof(f4704,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f1214,f3706])).
fof(f4719,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4703,f3706])).
fof(f4703,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f1072,f3706])).
fof(f4716,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl270),
  inference(forward_demodulation,[],[f4702,f3706])).
fof(f4702,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl270),
  inference(superposition,[],[f1245,f3706])).
fof(f4694,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl398),
  inference(cnf_transformation,[],[f4694_D])).
fof(f4694_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f4697,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4679,f3678])).
fof(f4679,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f708,f3678])).
fof(f4690,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl396),
  inference(cnf_transformation,[],[f4690_D])).
fof(f4690_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f4696,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4678,f3678])).
fof(f4678,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f620,f3678])).
fof(f4695,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4677,f3678])).
fof(f4677,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f1134,f3678])).
fof(f4692,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4676,f3678])).
fof(f4676,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f1214,f3678])).
fof(f4691,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4675,f3678])).
fof(f4675,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f1072,f3678])).
fof(f4688,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl266),
  inference(forward_demodulation,[],[f4674,f3678])).
fof(f4674,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl266),
  inference(superposition,[],[f1245,f3678])).
fof(f4666,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl394),
  inference(cnf_transformation,[],[f4666_D])).
fof(f4666_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f4669,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4651,f3650])).
fof(f4651,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f708,f3650])).
fof(f4662,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl392),
  inference(cnf_transformation,[],[f4662_D])).
fof(f4662_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f4668,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4650,f3650])).
fof(f4650,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f620,f3650])).
fof(f4667,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4649,f3650])).
fof(f4649,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f1134,f3650])).
fof(f4664,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4648,f3650])).
fof(f4648,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f1214,f3650])).
fof(f4663,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4647,f3650])).
fof(f4647,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f1072,f3650])).
fof(f4660,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl262),
  inference(forward_demodulation,[],[f4646,f3650])).
fof(f4646,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl262),
  inference(superposition,[],[f1245,f3650])).
fof(f4638,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl390),
  inference(cnf_transformation,[],[f4638_D])).
fof(f4638_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f4641,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4623,f3590])).
fof(f4623,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f708,f3590])).
fof(f4634,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl388),
  inference(cnf_transformation,[],[f4634_D])).
fof(f4634_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f4640,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4622,f3590])).
fof(f4622,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f620,f3590])).
fof(f4639,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4621,f3590])).
fof(f4621,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f1134,f3590])).
fof(f4636,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4620,f3590])).
fof(f4620,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f1214,f3590])).
fof(f4635,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4619,f3590])).
fof(f4619,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f1072,f3590])).
fof(f4632,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl252),
  inference(forward_demodulation,[],[f4618,f3590])).
fof(f4618,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl252),
  inference(superposition,[],[f1245,f3590])).
fof(f2082,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) ) | $spl106),
  inference(cnf_transformation,[],[f2082_D])).
fof(f2082_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f4604,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl11 | $spl32 | $spl83)),
  inference(subsumption_resolution,[],[f4603,f157])).
fof(f4603,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl32 | $spl83)),
  inference(forward_demodulation,[],[f4602,f823])).
fof(f4602,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | ($spl32 | $spl83)),
  inference(subsumption_resolution,[],[f4601,f1800])).
fof(f4601,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f4600,f823])).
fof(f4600,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f4519,f823])).
fof(f4519,plain,(
  ( ! [X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f558,f823])).
fof(f558,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),X0))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X0,sK0)),s('type.num.num',sK51(X0,sK0)),s('type.asm.addr'(sK0),sK52(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(X0,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),X0)) )),
  inference(superposition,[],[f329,f86])).
fof(f329,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',X1),s('type.fcp.cart'(bool,sK0),X2)))))) )),
  inference(resolution,[],[f73,f97])).
fof(f4505,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl386),
  inference(cnf_transformation,[],[f4505_D])).
fof(f4505_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f4508,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4490,f3482])).
fof(f4490,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f708,f3482])).
fof(f4501,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl384),
  inference(cnf_transformation,[],[f4501_D])).
fof(f4501_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f4507,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4489,f3482])).
fof(f4489,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f620,f3482])).
fof(f4506,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4488,f3482])).
fof(f4488,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f1134,f3482])).
fof(f4503,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4487,f3482])).
fof(f4487,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f1214,f3482])).
fof(f4502,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4486,f3482])).
fof(f4486,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f1072,f3482])).
fof(f4499,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl248),
  inference(forward_demodulation,[],[f4485,f3482])).
fof(f4485,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl248),
  inference(superposition,[],[f1245,f3482])).
fof(f4477,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl382),
  inference(cnf_transformation,[],[f4477_D])).
fof(f4477_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f4480,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4462,f3456])).
fof(f4462,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f708,f3456])).
fof(f4473,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl380),
  inference(cnf_transformation,[],[f4473_D])).
fof(f4473_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f4479,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4461,f3456])).
fof(f4461,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f620,f3456])).
fof(f4478,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4460,f3456])).
fof(f4460,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f1134,f3456])).
fof(f4475,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4459,f3456])).
fof(f4459,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f1214,f3456])).
fof(f4474,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4458,f3456])).
fof(f4458,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f1072,f3456])).
fof(f4471,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl244),
  inference(forward_demodulation,[],[f4457,f3456])).
fof(f4457,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl244),
  inference(superposition,[],[f1245,f3456])).
fof(f4449,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl378),
  inference(cnf_transformation,[],[f4449_D])).
fof(f4449_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f4452,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4434,f3430])).
fof(f4434,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f708,f3430])).
fof(f4445,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl376),
  inference(cnf_transformation,[],[f4445_D])).
fof(f4445_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f4451,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4433,f3430])).
fof(f4433,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f620,f3430])).
fof(f4450,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4432,f3430])).
fof(f4432,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f1134,f3430])).
fof(f4447,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4431,f3430])).
fof(f4431,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f1214,f3430])).
fof(f4446,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4430,f3430])).
fof(f4430,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f1072,f3430])).
fof(f4443,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl240),
  inference(forward_demodulation,[],[f4429,f3430])).
fof(f4429,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl240),
  inference(superposition,[],[f1245,f3430])).
fof(f4421,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl374),
  inference(cnf_transformation,[],[f4421_D])).
fof(f4421_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f4424,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4406,f3404])).
fof(f4406,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f708,f3404])).
fof(f4417,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl372),
  inference(cnf_transformation,[],[f4417_D])).
fof(f4417_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f4423,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4405,f3404])).
fof(f4405,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f620,f3404])).
fof(f4422,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4404,f3404])).
fof(f4404,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f1134,f3404])).
fof(f4419,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4403,f3404])).
fof(f4403,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f1214,f3404])).
fof(f4418,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4402,f3404])).
fof(f4402,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f1072,f3404])).
fof(f4415,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl236),
  inference(forward_demodulation,[],[f4401,f3404])).
fof(f4401,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl236),
  inference(superposition,[],[f1245,f3404])).
fof(f4393,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl370),
  inference(cnf_transformation,[],[f4393_D])).
fof(f4393_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f4396,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4378,f3378])).
fof(f4378,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f708,f3378])).
fof(f4389,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl368),
  inference(cnf_transformation,[],[f4389_D])).
fof(f4389_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f4395,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4377,f3378])).
fof(f4377,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f620,f3378])).
fof(f4394,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4376,f3378])).
fof(f4376,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f1134,f3378])).
fof(f4391,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4375,f3378])).
fof(f4375,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f1214,f3378])).
fof(f4390,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4374,f3378])).
fof(f4374,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f1072,f3378])).
fof(f4387,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl232),
  inference(forward_demodulation,[],[f4373,f3378])).
fof(f4373,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl232),
  inference(superposition,[],[f1245,f3378])).
fof(f4363,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl366),
  inference(cnf_transformation,[],[f4363_D])).
fof(f4363_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f4366,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4348,f3622])).
fof(f4348,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f708,f3622])).
fof(f4359,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl364),
  inference(cnf_transformation,[],[f4359_D])).
fof(f4359_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f4365,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4347,f3622])).
fof(f4347,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f620,f3622])).
fof(f4364,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4346,f3622])).
fof(f4346,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f1134,f3622])).
fof(f4361,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4345,f3622])).
fof(f4345,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f1214,f3622])).
fof(f4360,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4344,f3622])).
fof(f4344,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f1072,f3622])).
fof(f4357,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl258),
  inference(forward_demodulation,[],[f4343,f3622])).
fof(f4343,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl258),
  inference(superposition,[],[f1245,f3622])).
fof(f4335,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl362),
  inference(cnf_transformation,[],[f4335_D])).
fof(f4335_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f4338,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4320,f3594])).
fof(f4320,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f708,f3594])).
fof(f4331,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl360),
  inference(cnf_transformation,[],[f4331_D])).
fof(f4331_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f4337,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4319,f3594])).
fof(f4319,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f620,f3594])).
fof(f4336,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4318,f3594])).
fof(f4318,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f1134,f3594])).
fof(f4333,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4317,f3594])).
fof(f4317,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f1214,f3594])).
fof(f4332,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4316,f3594])).
fof(f4316,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f1072,f3594])).
fof(f4329,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl254),
  inference(forward_demodulation,[],[f4315,f3594])).
fof(f4315,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl254),
  inference(superposition,[],[f1245,f3594])).
fof(f4307,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl358),
  inference(cnf_transformation,[],[f4307_D])).
fof(f4307_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f4310,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4292,f3485])).
fof(f4292,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f708,f3485])).
fof(f4303,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl356),
  inference(cnf_transformation,[],[f4303_D])).
fof(f4303_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f4309,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4291,f3485])).
fof(f4291,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f620,f3485])).
fof(f4308,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4290,f3485])).
fof(f4290,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f1134,f3485])).
fof(f4305,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4289,f3485])).
fof(f4289,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f1214,f3485])).
fof(f4304,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4288,f3485])).
fof(f4288,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f1072,f3485])).
fof(f4301,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl250),
  inference(forward_demodulation,[],[f4287,f3485])).
fof(f4287,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl250),
  inference(superposition,[],[f1245,f3485])).
fof(f4279,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl354),
  inference(cnf_transformation,[],[f4279_D])).
fof(f4279_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f4282,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4264,f3459])).
fof(f4264,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f708,f3459])).
fof(f4275,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl352),
  inference(cnf_transformation,[],[f4275_D])).
fof(f4275_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f4281,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4263,f3459])).
fof(f4263,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f620,f3459])).
fof(f4280,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4262,f3459])).
fof(f4262,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f1134,f3459])).
fof(f4277,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4261,f3459])).
fof(f4261,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f1214,f3459])).
fof(f4276,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4260,f3459])).
fof(f4260,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f1072,f3459])).
fof(f4273,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl246),
  inference(forward_demodulation,[],[f4259,f3459])).
fof(f4259,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl246),
  inference(superposition,[],[f1245,f3459])).
fof(f4251,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl350),
  inference(cnf_transformation,[],[f4251_D])).
fof(f4251_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f4254,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4236,f3433])).
fof(f4236,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f708,f3433])).
fof(f4247,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl348),
  inference(cnf_transformation,[],[f4247_D])).
fof(f4247_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f4253,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4235,f3433])).
fof(f4235,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f620,f3433])).
fof(f4252,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4234,f3433])).
fof(f4234,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f1134,f3433])).
fof(f4249,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4233,f3433])).
fof(f4233,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f1214,f3433])).
fof(f4248,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4232,f3433])).
fof(f4232,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f1072,f3433])).
fof(f4245,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl242),
  inference(forward_demodulation,[],[f4231,f3433])).
fof(f4231,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl242),
  inference(superposition,[],[f1245,f3433])).
fof(f4206,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | $spl342),
  inference(cnf_transformation,[],[f4206_D])).
fof(f4206_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f4208,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | $spl344),
  inference(cnf_transformation,[],[f4208_D])).
fof(f4208_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f4210,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | $spl346),
  inference(cnf_transformation,[],[f4210_D])).
fof(f4210_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f4226,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4225,f2248])).
fof(f4225,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4224,f2248])).
fof(f4224,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4223,f2248])).
fof(f4223,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(subsumption_resolution,[],[f4187,f157])).
fof(f4187,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | $spl146),
  inference(superposition,[],[f86,f2248])).
fof(f4196,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | $spl336),
  inference(cnf_transformation,[],[f4196_D])).
fof(f4196_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f4198,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl338),
  inference(cnf_transformation,[],[f4198_D])).
fof(f4198_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f4200,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl340),
  inference(cnf_transformation,[],[f4200_D])).
fof(f4200_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f4222,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | ($spl9 | $spl146)),
  inference(subsumption_resolution,[],[f4186,f142])).
fof(f142,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | $spl9),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f4186,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | $spl146),
  inference(superposition,[],[f86,f2248])).
fof(f1338,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | $spl48),
  inference(cnf_transformation,[],[f1338_D])).
fof(f1338_D,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4221,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl146)),
  inference(subsumption_resolution,[],[f4220,f157])).
fof(f4220,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3))))) ) | $spl146),
  inference(forward_demodulation,[],[f4219,f2248])).
fof(f4219,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4218,f2248])).
fof(f4218,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4185,f2248])).
fof(f4185,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(superposition,[],[f341,f2248])).
fof(f4217,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl146),
  inference(forward_demodulation,[],[f4216,f2248])).
fof(f4216,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4215,f2248])).
fof(f4215,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4184,f2248])).
fof(f4184,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0))))) ) | $spl146),
  inference(superposition,[],[f112,f2248])).
fof(f112,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),X0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(X0,sK0)),s('type.num.num',sK51(X0,sK0)),s('type.asm.addr'(sK0),sK52(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(X0,sK0)),s('type.fcp.cart'(bool,sK0),sK48(X0,sK0))))) )),
  inference(superposition,[],[f72,f86])).
fof(f4214,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl146)),
  inference(subsumption_resolution,[],[f4213,f157])).
fof(f4213,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl146),
  inference(forward_demodulation,[],[f4212,f2248])).
fof(f4212,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4211,f2248])).
fof(f4211,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(forward_demodulation,[],[f4183,f2248])).
fof(f4183,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl146),
  inference(superposition,[],[f539,f2248])).
fof(f539,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),X0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(X0,sK0)))) | s('type.asm.inst'(sK0),X0) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(X0,sK0)),s('type.fcp.cart'(bool,sK0),sK48(X0,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),X0)) )),
  inference(superposition,[],[f514,f86])).
fof(f514,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X2),s('type.num.num',X3),s('type.asm.addr'(sK0),X0))))))) )),
  inference(superposition,[],[f71,f87])).
fof(f87,plain,(
  ( ! [X0,X1] : (s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',sK53(X1,X0)),s('type.fcp.cart'(bool,X0),sK54(X1,X0))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',sK53(X1,X0)),s('type.fcp.cart'(bool,X0),sK54(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK53,sK54])],[f34])).
fof(f34,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X2),s('type.fcp.cart'(bool,X0),X3)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.asm.addr'(X0),X1) = s('type.asm.addr'(X0),'const.asm.Addr_2'(s('type.num.num',X2),s('type.fcp.cart'(bool,X0),X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X32] : ? [X14,X8] : s('type.asm.addr'(X6),X32) = s('type.asm.addr'(X6),'const.asm.Addr_2'(s('type.num.num',X14),s('type.fcp.cart'(bool,X6),X8)))),
  file('thm.wordProps.inst_ok_less_ind','thm.asm.addr_nchotomy')).
fof(f71,plain,(
  ( ! [X21,X19,X22,X20,X18] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X18))),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X19),s('type.num.num',X20),s('type.asm.addr'(sK0),'const.asm.Addr_2'(s('type.num.num',X21),s('type.fcp.cart'(bool,sK0),X22))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f4204,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4203,f2248])).
fof(f4203,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4202,f2248])).
fof(f4202,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(forward_demodulation,[],[f4201,f2248])).
fof(f4201,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl146)),
  inference(subsumption_resolution,[],[f4181,f157])).
fof(f4181,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))),sK0)))) | $spl146),
  inference(superposition,[],[f2248,f86])).
fof(f4194,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | ($spl9 | $spl146)),
  inference(subsumption_resolution,[],[f4180,f142])).
fof(f4180,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | $spl146),
  inference(superposition,[],[f2248,f86])).
fof(f4174,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl334),
  inference(cnf_transformation,[],[f4174_D])).
fof(f4174_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f4177,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4159,f3407])).
fof(f4159,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f708,f3407])).
fof(f4170,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl332),
  inference(cnf_transformation,[],[f4170_D])).
fof(f4170_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f4176,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4158,f3407])).
fof(f4158,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f620,f3407])).
fof(f4175,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4157,f3407])).
fof(f4157,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f1134,f3407])).
fof(f4172,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4156,f3407])).
fof(f4156,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f1214,f3407])).
fof(f4171,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4155,f3407])).
fof(f4155,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f1072,f3407])).
fof(f4168,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl238),
  inference(forward_demodulation,[],[f4154,f3407])).
fof(f4154,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl238),
  inference(superposition,[],[f1245,f3407])).
fof(f4146,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl330),
  inference(cnf_transformation,[],[f4146_D])).
fof(f4146_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f4149,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4131,f3381])).
fof(f4131,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f708,f3381])).
fof(f4142,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl328),
  inference(cnf_transformation,[],[f4142_D])).
fof(f4142_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f4148,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4130,f3381])).
fof(f4130,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f620,f3381])).
fof(f4147,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4129,f3381])).
fof(f4129,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f1134,f3381])).
fof(f4144,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4128,f3381])).
fof(f4128,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f1214,f3381])).
fof(f4143,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4127,f3381])).
fof(f4127,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f1072,f3381])).
fof(f4140,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl234),
  inference(forward_demodulation,[],[f4126,f3381])).
fof(f4126,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl234),
  inference(superposition,[],[f1245,f3381])).
fof(f4118,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl326),
  inference(cnf_transformation,[],[f4118_D])).
fof(f4118_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f4121,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4103,f3352])).
fof(f4103,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f708,f3352])).
fof(f4114,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl324),
  inference(cnf_transformation,[],[f4114_D])).
fof(f4114_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f4120,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4102,f3352])).
fof(f4102,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f620,f3352])).
fof(f4119,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4101,f3352])).
fof(f4101,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f1134,f3352])).
fof(f4116,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4100,f3352])).
fof(f4100,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f1214,f3352])).
fof(f4115,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4099,f3352])).
fof(f4099,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f1072,f3352])).
fof(f4112,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl228),
  inference(forward_demodulation,[],[f4098,f3352])).
fof(f4098,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl228),
  inference(superposition,[],[f1245,f3352])).
fof(f1803,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl84),
  inference(cnf_transformation,[],[f1803_D])).
fof(f1803_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f4095,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32 | $spl83)),
  inference(subsumption_resolution,[],[f4094,f157])).
fof(f4094,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl32 | $spl83)),
  inference(forward_demodulation,[],[f4093,f823])).
fof(f4093,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl32 | $spl83)),
  inference(forward_demodulation,[],[f4092,f823])).
fof(f4092,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl32 | $spl83)),
  inference(forward_demodulation,[],[f4091,f823])).
fof(f4091,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl32 | $spl83)),
  inference(subsumption_resolution,[],[f4089,f823])).
fof(f4089,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl83),
  inference(superposition,[],[f1800,f86])).
fof(f4061,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl312),
  inference(cnf_transformation,[],[f4061_D])).
fof(f4061_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f4063,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl314),
  inference(cnf_transformation,[],[f4063_D])).
fof(f4063_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f4065,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl316),
  inference(cnf_transformation,[],[f4065_D])).
fof(f4065_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f4086,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4085,f1801])).
fof(f4085,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4084,f1801])).
fof(f4084,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4083,f1801])).
fof(f4083,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(subsumption_resolution,[],[f4049,f157])).
fof(f4049,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl82),
  inference(superposition,[],[f86,f1801])).
fof(f4082,plain,(
  ( ! [X4] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl82)),
  inference(subsumption_resolution,[],[f4081,f157])).
fof(f4081,plain,(
  ( ! [X4] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3))))) ) | $spl82),
  inference(forward_demodulation,[],[f4080,f1801])).
fof(f4080,plain,(
  ( ! [X4] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4079,f1801])).
fof(f4079,plain,(
  ( ! [X4] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4047,f1801])).
fof(f4047,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(superposition,[],[f341,f1801])).
fof(f4078,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3))))) ) | $spl82),
  inference(forward_demodulation,[],[f4077,f1801])).
fof(f4077,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4076,f1801])).
fof(f4076,plain,(
  ( ! [X3] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4046,f1801])).
fof(f4046,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(superposition,[],[f112,f1801])).
fof(f4075,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl82)),
  inference(subsumption_resolution,[],[f4074,f157])).
fof(f4074,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl82),
  inference(forward_demodulation,[],[f4073,f1801])).
fof(f4073,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4072,f1801])).
fof(f4072,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(forward_demodulation,[],[f4045,f1801])).
fof(f4045,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl82),
  inference(superposition,[],[f539,f1801])).
fof(f4067,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) | $spl318),
  inference(cnf_transformation,[],[f4067_D])).
fof(f4067_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f4071,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) | $spl322),
  inference(cnf_transformation,[],[f4071_D])).
fof(f4071_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f4044,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0))))) ) | $spl82),
  inference(superposition,[],[f405,f1801])).
fof(f405,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),X0)))))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(X0,sK0)),s('type.num.num',sK42(X0,sK0)),s('type.num.num',sK43(X0,sK0)),s('type.num.num',sK44(X0,sK0)))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(X0,sK0)),s('type.num.num',sK34(X0,sK0)),s('type.num.num',sK35(X0,sK0)),s('type.asm.reg_imm'(sK0),sK36(X0,sK0))))) )),
  inference(superposition,[],[f70,f84])).
fof(f70,plain,(
  ( ! [X26,X24,X23,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X23))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X24),s('type.num.num',X25),s('type.num.num',X26),s('type.num.num',X27))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f4069,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) | $spl320),
  inference(cnf_transformation,[],[f4069_D])).
fof(f4069_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f4043,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0),sK0))))) ) | $spl82),
  inference(superposition,[],[f488,f1801])).
fof(f488,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),X0)))))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(X0,sK0)),s('type.num.num',sK38(X0,sK0)),s('type.num.num',sK39(X0,sK0)),s('type.num.num',sK40(X0,sK0)))) | s('type.asm.arith'(sK0),X0) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(X0,sK0)),s('type.num.num',sK34(X0,sK0)),s('type.num.num',sK35(X0,sK0)),s('type.asm.reg_imm'(sK0),sK36(X0,sK0))))) )),
  inference(superposition,[],[f75,f84])).
fof(f75,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f4059,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4058,f1801])).
fof(f4058,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4057,f1801])).
fof(f4057,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(forward_demodulation,[],[f4056,f1801])).
fof(f4056,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl82)),
  inference(subsumption_resolution,[],[f4042,f157])).
fof(f4042,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl82),
  inference(superposition,[],[f1801,f86])).
fof(f1801,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl82),
  inference(cnf_transformation,[],[f1801_D])).
fof(f1801_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f4038,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f4037,f157])).
fof(f4037,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | $spl32),
  inference(forward_demodulation,[],[f4036,f823])).
fof(f4036,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f4035,f823])).
fof(f4035,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f4007,f823])).
fof(f4007,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f539,f823])).
fof(f3986,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl310),
  inference(cnf_transformation,[],[f3986_D])).
fof(f3986_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f3989,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3971,f3326])).
fof(f3971,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f708,f3326])).
fof(f3982,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl308),
  inference(cnf_transformation,[],[f3982_D])).
fof(f3982_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f3988,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3970,f3326])).
fof(f3970,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f620,f3326])).
fof(f3987,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3969,f3326])).
fof(f3969,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f1134,f3326])).
fof(f3984,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3968,f3326])).
fof(f3968,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f1214,f3326])).
fof(f3983,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3967,f3326])).
fof(f3967,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f1072,f3326])).
fof(f3980,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl224),
  inference(forward_demodulation,[],[f3966,f3326])).
fof(f3966,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl224),
  inference(superposition,[],[f1245,f3326])).
fof(f3958,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl306),
  inference(cnf_transformation,[],[f3958_D])).
fof(f3958_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f3961,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3943,f3300])).
fof(f3943,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f708,f3300])).
fof(f3954,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl304),
  inference(cnf_transformation,[],[f3954_D])).
fof(f3954_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f3960,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3942,f3300])).
fof(f3942,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f620,f3300])).
fof(f3959,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3941,f3300])).
fof(f3941,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f1134,f3300])).
fof(f3956,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3940,f3300])).
fof(f3940,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f1214,f3300])).
fof(f3955,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3939,f3300])).
fof(f3939,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f1072,f3300])).
fof(f3952,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl220),
  inference(forward_demodulation,[],[f3938,f3300])).
fof(f3938,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl220),
  inference(superposition,[],[f1245,f3300])).
fof(f3930,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl302),
  inference(cnf_transformation,[],[f3930_D])).
fof(f3930_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f3933,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3915,f3274])).
fof(f3915,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f708,f3274])).
fof(f3926,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl300),
  inference(cnf_transformation,[],[f3926_D])).
fof(f3926_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f3932,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3914,f3274])).
fof(f3914,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f620,f3274])).
fof(f3931,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3913,f3274])).
fof(f3913,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f1134,f3274])).
fof(f3928,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3912,f3274])).
fof(f3912,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f1214,f3274])).
fof(f3927,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3911,f3274])).
fof(f3911,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f1072,f3274])).
fof(f3924,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl216),
  inference(forward_demodulation,[],[f3910,f3274])).
fof(f3910,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl216),
  inference(superposition,[],[f1245,f3274])).
fof(f3902,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl298),
  inference(cnf_transformation,[],[f3902_D])).
fof(f3902_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f3905,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3887,f3248])).
fof(f3887,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f708,f3248])).
fof(f3898,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl296),
  inference(cnf_transformation,[],[f3898_D])).
fof(f3898_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f3904,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3886,f3248])).
fof(f3886,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f620,f3248])).
fof(f3903,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3885,f3248])).
fof(f3885,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f1134,f3248])).
fof(f3900,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3884,f3248])).
fof(f3884,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f1214,f3248])).
fof(f3899,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3883,f3248])).
fof(f3883,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f1072,f3248])).
fof(f3896,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl212),
  inference(forward_demodulation,[],[f3882,f3248])).
fof(f3882,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl212),
  inference(superposition,[],[f1245,f3248])).
fof(f3874,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl294),
  inference(cnf_transformation,[],[f3874_D])).
fof(f3874_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f3877,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3859,f3355])).
fof(f3859,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f708,f3355])).
fof(f3870,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl292),
  inference(cnf_transformation,[],[f3870_D])).
fof(f3870_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f3876,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3858,f3355])).
fof(f3858,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f620,f3355])).
fof(f3875,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3857,f3355])).
fof(f3857,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f1134,f3355])).
fof(f3872,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3856,f3355])).
fof(f3856,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f1214,f3355])).
fof(f3871,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3855,f3355])).
fof(f3855,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f1072,f3355])).
fof(f3868,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f3854,f3355])).
fof(f3854,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl230),
  inference(superposition,[],[f1245,f3355])).
fof(f3846,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl290),
  inference(cnf_transformation,[],[f3846_D])).
fof(f3846_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f3849,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3831,f3329])).
fof(f3831,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f708,f3329])).
fof(f3842,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl288),
  inference(cnf_transformation,[],[f3842_D])).
fof(f3842_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f3848,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3830,f3329])).
fof(f3830,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f620,f3329])).
fof(f3847,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3829,f3329])).
fof(f3829,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f1134,f3329])).
fof(f3844,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3828,f3329])).
fof(f3828,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f1214,f3329])).
fof(f3843,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3827,f3329])).
fof(f3827,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f1072,f3329])).
fof(f3840,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl226),
  inference(forward_demodulation,[],[f3826,f3329])).
fof(f3826,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl226),
  inference(superposition,[],[f1245,f3329])).
fof(f3818,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl286),
  inference(cnf_transformation,[],[f3818_D])).
fof(f3818_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f3821,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3803,f3303])).
fof(f3803,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f708,f3303])).
fof(f3814,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl284),
  inference(cnf_transformation,[],[f3814_D])).
fof(f3814_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f3820,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3802,f3303])).
fof(f3802,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f620,f3303])).
fof(f3819,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3801,f3303])).
fof(f3801,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f1134,f3303])).
fof(f3816,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3800,f3303])).
fof(f3800,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f1214,f3303])).
fof(f3815,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3799,f3303])).
fof(f3799,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f1072,f3303])).
fof(f3812,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl222),
  inference(forward_demodulation,[],[f3798,f3303])).
fof(f3798,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl222),
  inference(superposition,[],[f1245,f3303])).
fof(f3790,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl282),
  inference(cnf_transformation,[],[f3790_D])).
fof(f3790_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f3793,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3775,f3277])).
fof(f3775,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f708,f3277])).
fof(f3786,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl280),
  inference(cnf_transformation,[],[f3786_D])).
fof(f3786_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f3792,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3774,f3277])).
fof(f3774,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f620,f3277])).
fof(f3791,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3773,f3277])).
fof(f3773,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f1134,f3277])).
fof(f3788,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3772,f3277])).
fof(f3772,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f1214,f3277])).
fof(f3787,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3771,f3277])).
fof(f3771,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f1072,f3277])).
fof(f3784,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl218),
  inference(forward_demodulation,[],[f3770,f3277])).
fof(f3770,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl218),
  inference(superposition,[],[f1245,f3277])).
fof(f3762,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl278),
  inference(cnf_transformation,[],[f3762_D])).
fof(f3762_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f3765,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3747,f3222])).
fof(f3747,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f708,f3222])).
fof(f3758,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl276),
  inference(cnf_transformation,[],[f3758_D])).
fof(f3758_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f3764,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3746,f3222])).
fof(f3746,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f620,f3222])).
fof(f3763,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3745,f3222])).
fof(f3745,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f1134,f3222])).
fof(f3760,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3744,f3222])).
fof(f3744,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f1214,f3222])).
fof(f3759,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3743,f3222])).
fof(f3743,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f1072,f3222])).
fof(f3756,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl208),
  inference(forward_demodulation,[],[f3742,f3222])).
fof(f3742,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl208),
  inference(superposition,[],[f1245,f3222])).
fof(f3734,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl274),
  inference(cnf_transformation,[],[f3734_D])).
fof(f3734_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f3737,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3719,f3251])).
fof(f3719,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f708,f3251])).
fof(f3730,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl272),
  inference(cnf_transformation,[],[f3730_D])).
fof(f3730_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f3736,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3718,f3251])).
fof(f3718,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f620,f3251])).
fof(f3735,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3717,f3251])).
fof(f3717,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f1134,f3251])).
fof(f3732,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3716,f3251])).
fof(f3716,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f1214,f3251])).
fof(f3731,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3715,f3251])).
fof(f3715,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f1072,f3251])).
fof(f3728,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl214),
  inference(forward_demodulation,[],[f3714,f3251])).
fof(f3714,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl214),
  inference(superposition,[],[f1245,f3251])).
fof(f3706,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl270),
  inference(cnf_transformation,[],[f3706_D])).
fof(f3706_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f3709,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3691,f3196])).
fof(f3691,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f708,f3196])).
fof(f3702,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl268),
  inference(cnf_transformation,[],[f3702_D])).
fof(f3702_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f3708,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3690,f3196])).
fof(f3690,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f620,f3196])).
fof(f3707,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3689,f3196])).
fof(f3689,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f1134,f3196])).
fof(f3704,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3688,f3196])).
fof(f3688,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f1214,f3196])).
fof(f3703,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3687,f3196])).
fof(f3687,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f1072,f3196])).
fof(f3700,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl204),
  inference(forward_demodulation,[],[f3686,f3196])).
fof(f3686,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl204),
  inference(superposition,[],[f1245,f3196])).
fof(f3678,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl266),
  inference(cnf_transformation,[],[f3678_D])).
fof(f3678_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f3681,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3663,f3170])).
fof(f3663,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f708,f3170])).
fof(f3674,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl264),
  inference(cnf_transformation,[],[f3674_D])).
fof(f3674_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f3680,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3662,f3170])).
fof(f3662,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f620,f3170])).
fof(f3679,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3661,f3170])).
fof(f3661,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f1134,f3170])).
fof(f3676,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3660,f3170])).
fof(f3660,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f1214,f3170])).
fof(f3675,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3659,f3170])).
fof(f3659,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f1072,f3170])).
fof(f3672,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl200),
  inference(forward_demodulation,[],[f3658,f3170])).
fof(f3658,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl200),
  inference(superposition,[],[f1245,f3170])).
fof(f3650,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl262),
  inference(cnf_transformation,[],[f3650_D])).
fof(f3650_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f3653,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3635,f2634])).
fof(f3635,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f708,f2634])).
fof(f3646,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl260),
  inference(cnf_transformation,[],[f3646_D])).
fof(f3646_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f3652,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3634,f2634])).
fof(f3634,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f620,f2634])).
fof(f3651,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3633,f2634])).
fof(f3633,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f1134,f2634])).
fof(f3648,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3632,f2634])).
fof(f3632,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f1214,f2634])).
fof(f3647,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3631,f2634])).
fof(f3631,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f1072,f2634])).
fof(f3644,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl170),
  inference(forward_demodulation,[],[f3630,f2634])).
fof(f3630,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl170),
  inference(superposition,[],[f1245,f2634])).
fof(f3622,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl258),
  inference(cnf_transformation,[],[f3622_D])).
fof(f3622_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f3625,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3607,f3225])).
fof(f3607,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f708,f3225])).
fof(f3618,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl256),
  inference(cnf_transformation,[],[f3618_D])).
fof(f3618_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f3624,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3606,f3225])).
fof(f3606,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f620,f3225])).
fof(f3623,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3605,f3225])).
fof(f3605,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f1134,f3225])).
fof(f3620,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3604,f3225])).
fof(f3604,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f1214,f3225])).
fof(f3619,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3603,f3225])).
fof(f3603,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f1072,f3225])).
fof(f3616,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl210),
  inference(forward_demodulation,[],[f3602,f3225])).
fof(f3602,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl210),
  inference(superposition,[],[f1245,f3225])).
fof(f3594,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl254),
  inference(cnf_transformation,[],[f3594_D])).
fof(f3594_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f3597,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3579,f3199])).
fof(f3579,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X24))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X25),s('type.num.num',X26),s('type.num.num',X27),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f708,f3199])).
fof(f3590,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl252),
  inference(cnf_transformation,[],[f3590_D])).
fof(f3590_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f3596,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3578,f3199])).
fof(f3578,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f620,f3199])).
fof(f3595,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3577,f3199])).
fof(f3577,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f1134,f3199])).
fof(f3592,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3576,f3199])).
fof(f3576,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f1214,f3199])).
fof(f3591,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3575,f3199])).
fof(f3575,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f1072,f3199])).
fof(f3588,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl206),
  inference(forward_demodulation,[],[f3574,f3199])).
fof(f3574,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl206),
  inference(superposition,[],[f1245,f3199])).
fof(f3274,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl216),
  inference(cnf_transformation,[],[f3274_D])).
fof(f3274_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f3569,plain,(
  ( ! [X118,X116,X117,X115] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X115))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X116),s('type.num.num',X117),s('type.num.num',X118),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3526,f2606])).
fof(f3526,plain,(
  ( ! [X118,X116,X117,X115] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X115))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X116),s('type.num.num',X117),s('type.num.num',X118),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f1245,f2606])).
fof(f3222,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl208),
  inference(cnf_transformation,[],[f3222_D])).
fof(f3222_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f3568,plain,(
  ( ! [X111,X114,X112,X113] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X111))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X112),s('type.num.num',X113),s('type.num.num',X114),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3525,f3018])).
fof(f3525,plain,(
  ( ! [X111,X114,X112,X113] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X111))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X112),s('type.num.num',X113),s('type.num.num',X114),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f1245,f3018])).
fof(f3482,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl248),
  inference(cnf_transformation,[],[f3482_D])).
fof(f3482_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f3566,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X103))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X104),s('type.num.num',X105),s('type.num.num',X106),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3523,f3173])).
fof(f3523,plain,(
  ( ! [X103,X105,X106,X104] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X103))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X104),s('type.num.num',X105),s('type.num.num',X106),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f1245,f3173])).
fof(f3352,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl228),
  inference(cnf_transformation,[],[f3352_D])).
fof(f3352_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f3565,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X99))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X100),s('type.num.num',X101),s('type.num.num',X102),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3522,f3147])).
fof(f3522,plain,(
  ( ! [X101,X99,X102,X100] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X99))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X100),s('type.num.num',X101),s('type.num.num',X102),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f1245,f3147])).
fof(f3170,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl200),
  inference(cnf_transformation,[],[f3170_D])).
fof(f3170_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f3562,plain,(
  ( ! [X90,X88,X87,X89] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X87))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X88),s('type.num.num',X89),s('type.num.num',X90),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3519,f2580])).
fof(f3519,plain,(
  ( ! [X90,X88,X87,X89] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X87))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X88),s('type.num.num',X89),s('type.num.num',X90),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f1245,f2580])).
fof(f3404,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl236),
  inference(cnf_transformation,[],[f3404_D])).
fof(f3404_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f3561,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X83))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X84),s('type.num.num',X85),s('type.num.num',X86),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3518,f2630])).
fof(f3518,plain,(
  ( ! [X85,X83,X86,X84] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X83))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X84),s('type.num.num',X85),s('type.num.num',X86),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f1245,f2630])).
fof(f3326,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl224),
  inference(cnf_transformation,[],[f3326_D])).
fof(f3326_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f3560,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X79))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X80),s('type.num.num',X81),s('type.num.num',X82),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3517,f3121])).
fof(f3517,plain,(
  ( ! [X80,X81,X79,X82] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X79))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X80),s('type.num.num',X81),s('type.num.num',X82),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f1245,f3121])).
fof(f3378,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl232),
  inference(cnf_transformation,[],[f3378_D])).
fof(f3378_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f3557,plain,(
  ( ! [X64,X62,X65,X63] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X62))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X63),s('type.num.num',X64),s('type.num.num',X65),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3513,f2610])).
fof(f3513,plain,(
  ( ! [X64,X62,X65,X63] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X62))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X63),s('type.num.num',X64),s('type.num.num',X65),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f1245,f2610])).
fof(f3300,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl220),
  inference(cnf_transformation,[],[f3300_D])).
fof(f3300_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f3556,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X58))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X59),s('type.num.num',X60),s('type.num.num',X61),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3512,f3022])).
fof(f3512,plain,(
  ( ! [X61,X59,X60,X58] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X58))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X59),s('type.num.num',X60),s('type.num.num',X61),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f1245,f3022])).
fof(f3456,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl244),
  inference(cnf_transformation,[],[f3456_D])).
fof(f3456_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f3553,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X46))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3509,f3144])).
fof(f3509,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X46))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X47),s('type.num.num',X48),s('type.num.num',X49),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f1245,f3144])).
fof(f2634,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl170),
  inference(cnf_transformation,[],[f2634_D])).
fof(f2634_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f3552,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X42))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X43),s('type.num.num',X44),s('type.num.num',X45),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f3508,f2286])).
fof(f3508,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X42))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X43),s('type.num.num',X44),s('type.num.num',X45),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f1245,f2286])).
fof(f3248,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl212),
  inference(cnf_transformation,[],[f3248_D])).
fof(f3248_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f3551,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X38))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X39),s('type.num.num',X40),s('type.num.num',X41),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3507,f2584])).
fof(f3507,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X38))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X39),s('type.num.num',X40),s('type.num.num',X41),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f1245,f2584])).
fof(f3430,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl240),
  inference(cnf_transformation,[],[f3430_D])).
fof(f3430_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f3550,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X34))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X35),s('type.num.num',X36),s('type.num.num',X37),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3506,f3118])).
fof(f3506,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X34))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X35),s('type.num.num',X36),s('type.num.num',X37),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f1245,f3118])).
fof(f3196,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl204),
  inference(cnf_transformation,[],[f3196_D])).
fof(f3196_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f3549,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X30))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X31),s('type.num.num',X32),s('type.num.num',X33),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3505,f2998])).
fof(f3505,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X30))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X31),s('type.num.num',X32),s('type.num.num',X33),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f1245,f2998])).
fof(f3485,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl250),
  inference(cnf_transformation,[],[f3485_D])).
fof(f3485_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f3488,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3471,f3173])).
fof(f3471,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f708,f3173])).
fof(f3487,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3470,f3173])).
fof(f3470,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f620,f3173])).
fof(f3486,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3469,f3173])).
fof(f3469,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f1134,f3173])).
fof(f3483,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3468,f3173])).
fof(f3468,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f1214,f3173])).
fof(f3480,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl202),
  inference(forward_demodulation,[],[f3467,f3173])).
fof(f3467,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl202),
  inference(superposition,[],[f1072,f3173])).
fof(f3459,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl246),
  inference(cnf_transformation,[],[f3459_D])).
fof(f3459_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f3462,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3445,f3144])).
fof(f3445,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f708,f3144])).
fof(f3461,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3444,f3144])).
fof(f3444,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f620,f3144])).
fof(f3460,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3443,f3144])).
fof(f3443,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f1134,f3144])).
fof(f3457,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3442,f3144])).
fof(f3442,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f1214,f3144])).
fof(f3454,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl196),
  inference(forward_demodulation,[],[f3441,f3144])).
fof(f3441,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl196),
  inference(superposition,[],[f1072,f3144])).
fof(f3433,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl242),
  inference(cnf_transformation,[],[f3433_D])).
fof(f3433_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f3436,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3419,f3118])).
fof(f3419,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f708,f3118])).
fof(f3435,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3418,f3118])).
fof(f3418,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f620,f3118])).
fof(f3434,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3417,f3118])).
fof(f3417,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f1134,f3118])).
fof(f3431,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3416,f3118])).
fof(f3416,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f1214,f3118])).
fof(f3428,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl192),
  inference(forward_demodulation,[],[f3415,f3118])).
fof(f3415,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl192),
  inference(superposition,[],[f1072,f3118])).
fof(f3407,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl238),
  inference(cnf_transformation,[],[f3407_D])).
fof(f3407_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f3410,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3393,f2630])).
fof(f3393,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f708,f2630])).
fof(f3409,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3392,f2630])).
fof(f3392,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f620,f2630])).
fof(f3408,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3391,f2630])).
fof(f3391,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f1134,f2630])).
fof(f3405,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3390,f2630])).
fof(f3390,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f1214,f2630])).
fof(f3402,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl168),
  inference(forward_demodulation,[],[f3389,f2630])).
fof(f3389,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl168),
  inference(superposition,[],[f1072,f2630])).
fof(f3381,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl234),
  inference(cnf_transformation,[],[f3381_D])).
fof(f3381_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f3384,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3367,f2610])).
fof(f3367,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f708,f2610])).
fof(f3383,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3366,f2610])).
fof(f3366,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f620,f2610])).
fof(f3382,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3365,f2610])).
fof(f3365,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f1134,f2610])).
fof(f3379,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3364,f2610])).
fof(f3364,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f1214,f2610])).
fof(f3376,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl166),
  inference(forward_demodulation,[],[f3363,f2610])).
fof(f3363,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl166),
  inference(superposition,[],[f1072,f2610])).
fof(f3355,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl230),
  inference(cnf_transformation,[],[f3355_D])).
fof(f3355_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f3358,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3341,f3147])).
fof(f3341,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f708,f3147])).
fof(f3357,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3340,f3147])).
fof(f3340,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f620,f3147])).
fof(f3356,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3339,f3147])).
fof(f3339,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f1134,f3147])).
fof(f3353,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3338,f3147])).
fof(f3338,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f1214,f3147])).
fof(f3350,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl198),
  inference(forward_demodulation,[],[f3337,f3147])).
fof(f3337,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl198),
  inference(superposition,[],[f1072,f3147])).
fof(f3329,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl226),
  inference(cnf_transformation,[],[f3329_D])).
fof(f3329_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f3332,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3315,f3121])).
fof(f3315,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f708,f3121])).
fof(f3331,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3314,f3121])).
fof(f3314,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f620,f3121])).
fof(f3330,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3313,f3121])).
fof(f3313,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f1134,f3121])).
fof(f3327,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3312,f3121])).
fof(f3312,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f1214,f3121])).
fof(f3324,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl194),
  inference(forward_demodulation,[],[f3311,f3121])).
fof(f3311,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl194),
  inference(superposition,[],[f1072,f3121])).
fof(f3303,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl222),
  inference(cnf_transformation,[],[f3303_D])).
fof(f3303_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f3306,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3289,f3022])).
fof(f3289,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f708,f3022])).
fof(f3305,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3288,f3022])).
fof(f3288,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f620,f3022])).
fof(f3304,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3287,f3022])).
fof(f3287,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f1134,f3022])).
fof(f3301,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3286,f3022])).
fof(f3286,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f1214,f3022])).
fof(f3298,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl190),
  inference(forward_demodulation,[],[f3285,f3022])).
fof(f3285,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl190),
  inference(superposition,[],[f1072,f3022])).
fof(f3277,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl218),
  inference(cnf_transformation,[],[f3277_D])).
fof(f3277_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f3280,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3263,f2606])).
fof(f3263,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f708,f2606])).
fof(f3279,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3262,f2606])).
fof(f3262,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f620,f2606])).
fof(f3278,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3261,f2606])).
fof(f3261,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f1134,f2606])).
fof(f3275,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3260,f2606])).
fof(f3260,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f1214,f2606])).
fof(f3272,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl164),
  inference(forward_demodulation,[],[f3259,f2606])).
fof(f3259,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl164),
  inference(superposition,[],[f1072,f2606])).
fof(f3251,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl214),
  inference(cnf_transformation,[],[f3251_D])).
fof(f3251_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f3254,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3237,f2584])).
fof(f3237,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f708,f2584])).
fof(f3253,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3236,f2584])).
fof(f3236,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f620,f2584])).
fof(f3252,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3235,f2584])).
fof(f3235,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f1134,f2584])).
fof(f3249,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3234,f2584])).
fof(f3234,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f1214,f2584])).
fof(f3246,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl162),
  inference(forward_demodulation,[],[f3233,f2584])).
fof(f3233,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl162),
  inference(superposition,[],[f1072,f2584])).
fof(f3225,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | $spl210),
  inference(cnf_transformation,[],[f3225_D])).
fof(f3225_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f3228,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3211,f3018])).
fof(f3211,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f708,f3018])).
fof(f3227,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3210,f3018])).
fof(f3210,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f620,f3018])).
fof(f3226,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3209,f3018])).
fof(f3209,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f1134,f3018])).
fof(f3223,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3208,f3018])).
fof(f3208,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f1214,f3018])).
fof(f3220,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl188),
  inference(forward_demodulation,[],[f3207,f3018])).
fof(f3207,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))),sK0))))) ) | $spl188),
  inference(superposition,[],[f1072,f3018])).
fof(f3199,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl206),
  inference(cnf_transformation,[],[f3199_D])).
fof(f3199_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f3202,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3185,f2998])).
fof(f3185,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f708,f2998])).
fof(f3201,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3184,f2998])).
fof(f3184,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f620,f2998])).
fof(f3200,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3183,f2998])).
fof(f3183,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f1134,f2998])).
fof(f3197,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3182,f2998])).
fof(f3182,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f1214,f2998])).
fof(f3194,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl186),
  inference(forward_demodulation,[],[f3181,f2998])).
fof(f3181,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl186),
  inference(superposition,[],[f1072,f2998])).
fof(f3173,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl202),
  inference(cnf_transformation,[],[f3173_D])).
fof(f3173_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f3176,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3159,f2580])).
fof(f3159,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f708,f2580])).
fof(f3175,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3158,f2580])).
fof(f3158,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f620,f2580])).
fof(f3174,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3157,f2580])).
fof(f3157,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f1134,f2580])).
fof(f3171,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3156,f2580])).
fof(f3156,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f1214,f2580])).
fof(f3168,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl160),
  inference(forward_demodulation,[],[f3155,f2580])).
fof(f3155,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl160),
  inference(superposition,[],[f1072,f2580])).
fof(f3147,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl198),
  inference(cnf_transformation,[],[f3147_D])).
fof(f3147_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f3150,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl184),
  inference(forward_demodulation,[],[f3133,f2994])).
fof(f3133,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl184),
  inference(superposition,[],[f708,f2994])).
fof(f3144,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl196),
  inference(cnf_transformation,[],[f3144_D])).
fof(f3144_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f3149,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl184),
  inference(forward_demodulation,[],[f3132,f2994])).
fof(f3132,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl184),
  inference(superposition,[],[f620,f2994])).
fof(f3148,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl184),
  inference(forward_demodulation,[],[f3131,f2994])).
fof(f3131,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl184),
  inference(superposition,[],[f1134,f2994])).
fof(f3145,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl184),
  inference(forward_demodulation,[],[f3130,f2994])).
fof(f3130,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl184),
  inference(superposition,[],[f1214,f2994])).
fof(f3142,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl184),
  inference(forward_demodulation,[],[f3129,f2994])).
fof(f3129,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl184),
  inference(superposition,[],[f1072,f2994])).
fof(f3121,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl194),
  inference(cnf_transformation,[],[f3121_D])).
fof(f3121_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f3124,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl158),
  inference(forward_demodulation,[],[f3107,f2515])).
fof(f3107,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X20))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X21),s('type.num.num',X22),s('type.num.num',X23),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl158),
  inference(superposition,[],[f708,f2515])).
fof(f3118,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl192),
  inference(cnf_transformation,[],[f3118_D])).
fof(f3118_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f3123,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl158),
  inference(forward_demodulation,[],[f3106,f2515])).
fof(f3106,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl158),
  inference(superposition,[],[f620,f2515])).
fof(f3122,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl158),
  inference(forward_demodulation,[],[f3105,f2515])).
fof(f3105,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl158),
  inference(superposition,[],[f1134,f2515])).
fof(f3119,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl158),
  inference(forward_demodulation,[],[f3104,f2515])).
fof(f3104,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl158),
  inference(superposition,[],[f1214,f2515])).
fof(f3116,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl158),
  inference(forward_demodulation,[],[f3103,f2515])).
fof(f3103,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl158),
  inference(superposition,[],[f1072,f2515])).
fof(f3022,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl190),
  inference(cnf_transformation,[],[f3022_D])).
fof(f3022_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f3097,plain,(
  ( ! [X57,X58,X56,X55] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X55))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X56),s('type.num.num',X57),s('type.num.num',X58),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl156),
  inference(forward_demodulation,[],[f3046,f2511])).
fof(f3046,plain,(
  ( ! [X57,X58,X56,X55] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X55))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X56),s('type.num.num',X57),s('type.num.num',X58),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl156),
  inference(superposition,[],[f1072,f2511])).
fof(f2610,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl166),
  inference(cnf_transformation,[],[f2610_D])).
fof(f2610_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f3096,plain,(
  ( ! [X54,X52,X53,X51] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X51))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X52),s('type.num.num',X53),s('type.num.num',X54),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl152),
  inference(forward_demodulation,[],[f3045,f2282])).
fof(f3045,plain,(
  ( ! [X54,X52,X53,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X51))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X52),s('type.num.num',X53),s('type.num.num',X54),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl152),
  inference(superposition,[],[f1072,f2282])).
fof(f2515,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl158),
  inference(cnf_transformation,[],[f2515_D])).
fof(f2515_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f3095,plain,(
  ( ! [X47,X50,X48,X49] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X47))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X48),s('type.num.num',X49),s('type.num.num',X50),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl124),
  inference(forward_demodulation,[],[f3044,f2144])).
fof(f3044,plain,(
  ( ! [X47,X50,X48,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X47))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X48),s('type.num.num',X49),s('type.num.num',X50),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl124),
  inference(superposition,[],[f1072,f2144])).
fof(f2998,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl186),
  inference(cnf_transformation,[],[f2998_D])).
fof(f2998_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f3093,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X34))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X35),s('type.num.num',X36),s('type.num.num',X37),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl130),
  inference(forward_demodulation,[],[f3041,f2150])).
fof(f3041,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X34))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X35),s('type.num.num',X36),s('type.num.num',X37),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl130),
  inference(superposition,[],[f1072,f2150])).
fof(f3092,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X30))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X31),s('type.num.num',X32),s('type.num.num',X33),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f3040,f2286])).
fof(f3040,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X30))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X31),s('type.num.num',X32),s('type.num.num',X33),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f1072,f2286])).
fof(f2584,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl162),
  inference(cnf_transformation,[],[f2584_D])).
fof(f2584_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f3091,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X26))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl144),
  inference(forward_demodulation,[],[f3039,f2228])).
fof(f3039,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X26))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X27),s('type.num.num',X28),s('type.num.num',X29),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl144),
  inference(superposition,[],[f1072,f2228])).
fof(f3018,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl188),
  inference(cnf_transformation,[],[f3018_D])).
fof(f3018_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f3023,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl156),
  inference(forward_demodulation,[],[f3007,f2511])).
fof(f3007,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl156),
  inference(superposition,[],[f708,f2511])).
fof(f3020,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl156),
  inference(forward_demodulation,[],[f3006,f2511])).
fof(f3006,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl156),
  inference(superposition,[],[f620,f2511])).
fof(f3019,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl156),
  inference(forward_demodulation,[],[f3005,f2511])).
fof(f3005,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl156),
  inference(superposition,[],[f1134,f2511])).
fof(f3016,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl156),
  inference(forward_demodulation,[],[f3004,f2511])).
fof(f3004,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl156),
  inference(superposition,[],[f1214,f2511])).
fof(f2994,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl184),
  inference(cnf_transformation,[],[f2994_D])).
fof(f2994_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f2999,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl130),
  inference(forward_demodulation,[],[f2983,f2150])).
fof(f2983,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl130),
  inference(superposition,[],[f708,f2150])).
fof(f2996,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl130),
  inference(forward_demodulation,[],[f2982,f2150])).
fof(f2982,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl130),
  inference(superposition,[],[f620,f2150])).
fof(f2995,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl130),
  inference(forward_demodulation,[],[f2981,f2150])).
fof(f2981,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl130),
  inference(superposition,[],[f1134,f2150])).
fof(f2992,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl130),
  inference(forward_demodulation,[],[f2980,f2150])).
fof(f2980,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl130),
  inference(superposition,[],[f1214,f2150])).
fof(f2976,plain,(
  $false | ($spl6 | $spl75 | $spl97 | $spl128)),
  inference(subsumption_resolution,[],[f2969,f98])).
fof(f98,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.wordProps.inst_ok_less_ind',aHL_FALSITY)).
fof(f2969,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl75 | $spl97 | $spl128)),
  inference(superposition,[],[f2957,f126])).
fof(f2957,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl75 | $spl97 | $spl128)),
  inference(forward_demodulation,[],[f2956,f141])).
fof(f2956,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))))) ) | ($spl75 | $spl97 | $spl128)),
  inference(subsumption_resolution,[],[f2955,f1951])).
fof(f2955,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | ($spl75 | $spl128)),
  inference(subsumption_resolution,[],[f2945,f1773])).
fof(f2945,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))))) ) | $spl128),
  inference(superposition,[],[f2148,f84])).
fof(f2865,plain,(
  $false | $spl34),
  inference(subsumption_resolution,[],[f2827,f308])).
fof(f2827,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl34),
  inference(backward_demodulation,[],[f2792,f126])).
fof(f2792,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl34),
  inference(superposition,[],[f329,f825])).
fof(f2864,plain,(
  $false | $spl34),
  inference(trivial_inequality_removal,[],[f2835])).
fof(f2835,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl34),
  inference(superposition,[],[f124,f2792])).
fof(f2809,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl178),
  inference(cnf_transformation,[],[f2809_D])).
fof(f2809_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f2811,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl180),
  inference(cnf_transformation,[],[f2811_D])).
fof(f2811_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f2813,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl182),
  inference(cnf_transformation,[],[f2813_D])).
fof(f2813_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f2824,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2823,f825])).
fof(f2823,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2822,f825])).
fof(f2822,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2821,f825])).
fof(f2821,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(subsumption_resolution,[],[f2797,f157])).
fof(f2797,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl34),
  inference(superposition,[],[f86,f825])).
fof(f2820,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl34)),
  inference(subsumption_resolution,[],[f2819,f157])).
fof(f2819,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl34),
  inference(forward_demodulation,[],[f2818,f825])).
fof(f2818,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl34),
  inference(forward_demodulation,[],[f2817,f825])).
fof(f2817,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl34),
  inference(forward_demodulation,[],[f2794,f825])).
fof(f2794,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl34),
  inference(superposition,[],[f341,f825])).
fof(f2816,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl34),
  inference(forward_demodulation,[],[f2815,f825])).
fof(f2815,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl34),
  inference(forward_demodulation,[],[f2814,f825])).
fof(f2814,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl34),
  inference(forward_demodulation,[],[f2793,f825])).
fof(f2793,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl34),
  inference(superposition,[],[f112,f825])).
fof(f2807,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2806,f825])).
fof(f2806,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2805,f825])).
fof(f2805,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(forward_demodulation,[],[f2804,f825])).
fof(f2804,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl34)),
  inference(subsumption_resolution,[],[f2791,f157])).
fof(f2791,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl34),
  inference(superposition,[],[f825,f86])).
fof(f2098,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | $spl114),
  inference(cnf_transformation,[],[f2098_D])).
fof(f2098_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f2093,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | $spl112),
  inference(cnf_transformation,[],[f2093_D])).
fof(f2093_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f2787,plain,(
  ( ! [X5] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2786,f1772])).
fof(f2786,plain,(
  ( ! [X5] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2785,f1772])).
fof(f2785,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2775,f141])).
fof(f2775,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl72),
  inference(superposition,[],[f405,f1772])).
fof(f2091,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | $spl110),
  inference(cnf_transformation,[],[f2091_D])).
fof(f2091_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2784,plain,(
  ( ! [X4] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2783,f1772])).
fof(f2783,plain,(
  ( ! [X4] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2782,f1772])).
fof(f2782,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2774,f141])).
fof(f2774,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl72),
  inference(superposition,[],[f488,f1772])).
fof(f2768,plain,(
  $false | ($spl6 | $spl23 | $spl134)),
  inference(subsumption_resolution,[],[f2767,f199])).
fof(f199,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl23),
  inference(cnf_transformation,[],[f199_D])).
fof(f199_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f2767,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl134)),
  inference(forward_demodulation,[],[f2167,f141])).
fof(f2702,plain,(
  $false | ($spl6 | $spl96)),
  inference(subsumption_resolution,[],[f2664,f308])).
fof(f2664,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl96)),
  inference(backward_demodulation,[],[f2648,f126])).
fof(f2648,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2638,f141])).
fof(f2638,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) ) | $spl96),
  inference(superposition,[],[f390,f1952])).
fof(f390,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))))))) )),
  inference(resolution,[],[f70,f97])).
fof(f2701,plain,(
  $false | ($spl6 | $spl96)),
  inference(trivial_inequality_removal,[],[f2672])).
fof(f2672,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl96)),
  inference(superposition,[],[f124,f2648])).
fof(f2660,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | $spl176),
  inference(cnf_transformation,[],[f2660_D])).
fof(f2660_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f2655,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | $spl174),
  inference(cnf_transformation,[],[f2655_D])).
fof(f2655_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f2658,plain,(
  ( ! [X2] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2657,f1952])).
fof(f2657,plain,(
  ( ! [X2] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2656,f1952])).
fof(f2656,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2640,f141])).
fof(f2640,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl96),
  inference(superposition,[],[f405,f1952])).
fof(f2653,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | $spl172),
  inference(cnf_transformation,[],[f2653_D])).
fof(f2653_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f2651,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2650,f1952])).
fof(f2650,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2649,f1952])).
fof(f2649,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl96)),
  inference(forward_demodulation,[],[f2639,f141])).
fof(f2639,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl96),
  inference(superposition,[],[f488,f1952])).
fof(f2630,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl168),
  inference(cnf_transformation,[],[f2630_D])).
fof(f2630_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f2635,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f2619,f2286])).
fof(f2619,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f708,f2286])).
fof(f2632,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f2618,f2286])).
fof(f2618,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f620,f2286])).
fof(f2631,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f2617,f2286])).
fof(f2617,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f1134,f2286])).
fof(f2628,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl154),
  inference(forward_demodulation,[],[f2616,f2286])).
fof(f2616,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl154),
  inference(superposition,[],[f1214,f2286])).
fof(f2606,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | $spl164),
  inference(cnf_transformation,[],[f2606_D])).
fof(f2606_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f2611,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl152),
  inference(forward_demodulation,[],[f2595,f2282])).
fof(f2595,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl152),
  inference(superposition,[],[f708,f2282])).
fof(f2608,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl152),
  inference(forward_demodulation,[],[f2594,f2282])).
fof(f2594,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl152),
  inference(superposition,[],[f620,f2282])).
fof(f2607,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl152),
  inference(forward_demodulation,[],[f2593,f2282])).
fof(f2593,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl152),
  inference(superposition,[],[f1134,f2282])).
fof(f2604,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl152),
  inference(forward_demodulation,[],[f2592,f2282])).
fof(f2592,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))),sK0))))) ) | $spl152),
  inference(superposition,[],[f1214,f2282])).
fof(f1772,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) | $spl72),
  inference(cnf_transformation,[],[f1772_D])).
fof(f1772_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f1952,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | $spl96),
  inference(cnf_transformation,[],[f1952_D])).
fof(f1952_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f2589,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) | $spl75),
  inference(trivial_inequality_removal,[],[f2588])).
fof(f2588,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),sK49(sK3,sK0)) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) | $spl75),
  inference(superposition,[],[f1773,f84])).
fof(f2580,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl160),
  inference(cnf_transformation,[],[f2580_D])).
fof(f2580_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f2585,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl144),
  inference(forward_demodulation,[],[f2569,f2228])).
fof(f2569,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl144),
  inference(superposition,[],[f708,f2228])).
fof(f2582,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl144),
  inference(forward_demodulation,[],[f2568,f2228])).
fof(f2568,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl144),
  inference(superposition,[],[f620,f2228])).
fof(f2581,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl144),
  inference(forward_demodulation,[],[f2567,f2228])).
fof(f2567,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl144),
  inference(superposition,[],[f1134,f2228])).
fof(f2578,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl144),
  inference(forward_demodulation,[],[f2566,f2228])).
fof(f2566,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl144),
  inference(superposition,[],[f1214,f2228])).
fof(f2511,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl156),
  inference(cnf_transformation,[],[f2511_D])).
fof(f2511_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f2516,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl124),
  inference(forward_demodulation,[],[f2500,f2144])).
fof(f2500,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl124),
  inference(superposition,[],[f708,f2144])).
fof(f2513,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl124),
  inference(forward_demodulation,[],[f2499,f2144])).
fof(f2499,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl124),
  inference(superposition,[],[f620,f2144])).
fof(f2512,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl124),
  inference(forward_demodulation,[],[f2498,f2144])).
fof(f2498,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl124),
  inference(superposition,[],[f1134,f2144])).
fof(f2509,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl124),
  inference(forward_demodulation,[],[f2497,f2144])).
fof(f2497,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl124),
  inference(superposition,[],[f1214,f2144])).
fof(f2144,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | $spl124),
  inference(cnf_transformation,[],[f2144_D])).
fof(f2144_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f2492,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2481,f2079])).
fof(f2481,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f708,f2079])).
fof(f2150,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | $spl130),
  inference(cnf_transformation,[],[f2150_D])).
fof(f2150_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f2491,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2480,f2079])).
fof(f2480,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f620,f2079])).
fof(f2490,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2479,f2079])).
fof(f2479,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f1134,f2079])).
fof(f2489,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2478,f2079])).
fof(f2478,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f1214,f2079])).
fof(f2460,plain,(
  $false | ($spl6 | $spl74)),
  inference(subsumption_resolution,[],[f2422,f308])).
fof(f2422,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl6 | $spl74)),
  inference(backward_demodulation,[],[f2111,f126])).
fof(f2111,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2101,f141])).
fof(f2101,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) ) | $spl74),
  inference(superposition,[],[f473,f1774])).
fof(f473,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',X1),s('type.num.num',X2),s('type.num.num',X3),s('type.num.num',X4)))))))) )),
  inference(resolution,[],[f75,f97])).
fof(f2459,plain,(
  $false | ($spl6 | $spl74)),
  inference(trivial_inequality_removal,[],[f2430])).
fof(f2430,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl74)),
  inference(superposition,[],[f124,f2111])).
fof(f1774,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | $spl74),
  inference(cnf_transformation,[],[f1774_D])).
fof(f1774_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2348,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f405,f141])).
fof(f2347,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f488,f141])).
fof(f2328,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f2290,f308])).
fof(f2290,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl8),
  inference(backward_demodulation,[],[f2233,f126])).
fof(f2233,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl8),
  inference(superposition,[],[f524,f143])).
fof(f524,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',X1),s('type.num.num',X2),s('type.asm.addr'(sK0),X3)))))) )),
  inference(resolution,[],[f514,f97])).
fof(f2327,plain,(
  $false | $spl8),
  inference(trivial_inequality_removal,[],[f2298])).
fof(f2298,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl8),
  inference(superposition,[],[f124,f2233])).
fof(f2282,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl152),
  inference(cnf_transformation,[],[f2282_D])).
fof(f2282_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f2287,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl142),
  inference(forward_demodulation,[],[f2271,f2224])).
fof(f2271,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl142),
  inference(superposition,[],[f708,f2224])).
fof(f2286,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | $spl154),
  inference(cnf_transformation,[],[f2286_D])).
fof(f2286_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f2284,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl142),
  inference(forward_demodulation,[],[f2270,f2224])).
fof(f2270,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl142),
  inference(superposition,[],[f620,f2224])).
fof(f2283,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl142),
  inference(forward_demodulation,[],[f2269,f2224])).
fof(f2269,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl142),
  inference(superposition,[],[f1134,f2224])).
fof(f2280,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl142),
  inference(forward_demodulation,[],[f2268,f2224])).
fof(f2268,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))),sK0))))) ) | $spl142),
  inference(superposition,[],[f1214,f2224])).
fof(f2248,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl146),
  inference(cnf_transformation,[],[f2248_D])).
fof(f2248_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f2250,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl148),
  inference(cnf_transformation,[],[f2250_D])).
fof(f2250_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f2252,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl150),
  inference(cnf_transformation,[],[f2252_D])).
fof(f2252_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f2263,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2262,f143])).
fof(f2262,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2261,f143])).
fof(f2261,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2260,f143])).
fof(f2260,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f2236,f157])).
fof(f2236,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f86,f143])).
fof(f2259,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f2258,f157])).
fof(f2258,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl8),
  inference(forward_demodulation,[],[f2257,f143])).
fof(f2257,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f2256,f143])).
fof(f2256,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f2235,f143])).
fof(f2235,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))))) ) | $spl8),
  inference(superposition,[],[f341,f143])).
fof(f2255,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl8),
  inference(forward_demodulation,[],[f2254,f143])).
fof(f2254,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f2253,f143])).
fof(f2253,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl8),
  inference(forward_demodulation,[],[f2234,f143])).
fof(f2234,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0))))) ) | $spl8),
  inference(superposition,[],[f112,f143])).
fof(f2246,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2245,f143])).
fof(f2245,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2244,f143])).
fof(f2244,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(forward_demodulation,[],[f2243,f143])).
fof(f2243,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f2232,f157])).
fof(f2232,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0))),sK0)))) | $spl8),
  inference(superposition,[],[f143,f86])).
fof(f2224,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | $spl142),
  inference(cnf_transformation,[],[f2224_D])).
fof(f2224_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f2229,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f2214,f2085])).
fof(f2214,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl108),
  inference(superposition,[],[f708,f2085])).
fof(f2228,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | $spl144),
  inference(cnf_transformation,[],[f2228_D])).
fof(f2228_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f2226,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f2213,f2085])).
fof(f2213,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl108),
  inference(superposition,[],[f620,f2085])).
fof(f2225,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f2212,f2085])).
fof(f2212,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl108),
  inference(superposition,[],[f1134,f2085])).
fof(f2222,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl108),
  inference(forward_demodulation,[],[f2211,f2085])).
fof(f2211,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl108),
  inference(superposition,[],[f1214,f2085])).
fof(f141,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl6),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f143,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | $spl8),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f2201,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f388,f157])).
fof(f388,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl5),
  inference(trivial_inequality_removal,[],[f386])).
fof(f386,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl5),
  inference(superposition,[],[f138,f86])).
fof(f138,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl5),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f2200,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2199,f157])).
fof(f2199,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2198,f1431])).
fof(f2198,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f416,f105])).
fof(f416,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f124,f86])).
fof(f2197,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2196,f157])).
fof(f2196,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2195,f1431])).
fof(f2195,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f2194,f308])).
fof(f2194,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(forward_demodulation,[],[f427,f105])).
fof(f427,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f126,f86])).
fof(f2193,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2192,f157])).
fof(f2192,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2191,f1431])).
fof(f2191,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f2190,f308])).
fof(f2190,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(forward_demodulation,[],[f940,f105])).
fof(f940,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f126,f86])).
fof(f2188,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl11),
  inference(subsumption_resolution,[],[f2187,f157])).
fof(f2187,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(subsumption_resolution,[],[f1320,f98])).
fof(f1320,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(superposition,[],[f341,f126])).
fof(f2186,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) ) | $spl140),
  inference(cnf_transformation,[],[f2186_D])).
fof(f2186_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f2185,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl0 | $spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2184,f157])).
fof(f2184,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl0 | $spl54)),
  inference(forward_demodulation,[],[f1370,f1431])).
fof(f1370,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))) ) | $spl0),
  inference(superposition,[],[f1197,f86])).
fof(f1197,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) ) | $spl0),
  inference(resolution,[],[f135,f96])).
fof(f2183,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) ) | $spl138),
  inference(cnf_transformation,[],[f2183_D])).
fof(f2183_D,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f2182,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl0 | $spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2181,f157])).
fof(f2181,plain,(
  ( ! [X0] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl0 | $spl54)),
  inference(forward_demodulation,[],[f1406,f1431])).
fof(f1406,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0),s('type.asm.inst'(sK0),'const.asm.Skip_0'))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))) ) | $spl0),
  inference(superposition,[],[f1199,f86])).
fof(f1199,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X2,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2)))) ) | $spl0),
  inference(resolution,[],[f135,f93])).
fof(f2180,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f1470,f157])).
fof(f1470,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(duplicate_literal_removal,[],[f1458])).
fof(f1458,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl54),
  inference(superposition,[],[f1431,f86])).
fof(f2179,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f1469,f157])).
fof(f1469,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(duplicate_literal_removal,[],[f1461])).
fof(f1461,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl54),
  inference(superposition,[],[f86,f1431])).
fof(f2178,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2177,f157])).
fof(f2177,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2176,f1431])).
fof(f2176,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f2175,f308])).
fof(f2175,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(forward_demodulation,[],[f1527,f105])).
fof(f1527,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f126,f86])).
fof(f2174,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl11),
  inference(subsumption_resolution,[],[f2173,f157])).
fof(f2173,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(subsumption_resolution,[],[f1532,f98])).
fof(f1532,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(superposition,[],[f341,f126])).
fof(f2172,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2171,f157])).
fof(f2171,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2170,f1431])).
fof(f2170,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f1654,f98])).
fof(f1654,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f112,f126])).
fof(f2165,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl132),
  inference(cnf_transformation,[],[f2165_D])).
fof(f2165_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f2167,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl134),
  inference(cnf_transformation,[],[f2167_D])).
fof(f2167_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f2169,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl136),
  inference(cnf_transformation,[],[f2169_D])).
fof(f2169_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f1860,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl20),
  inference(superposition,[],[f198,f86])).
fof(f1865,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl20),
  inference(superposition,[],[f86,f198])).
fof(f2163,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2162,f157])).
fof(f2162,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2161,f1431])).
fof(f2161,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f2160,f308])).
fof(f2160,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(forward_demodulation,[],[f2014,f105])).
fof(f2014,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0'))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f126,f86])).
fof(f2159,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl11 | $spl54)),
  inference(subsumption_resolution,[],[f2158,f157])).
fof(f2158,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl54),
  inference(forward_demodulation,[],[f2157,f1431])).
fof(f2157,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f2019,f98])).
fof(f2019,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f112,f126])).
fof(f2156,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl11),
  inference(subsumption_resolution,[],[f2155,f157])).
fof(f2155,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(subsumption_resolution,[],[f2020,f98])).
fof(f2020,plain,(
  p(s(bool,'F_0')) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3)),
  inference(superposition,[],[f341,f126])).
fof(f2151,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2133,f2079])).
fof(f2133,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X17),s('type.num.num',X18),s('type.num.num',X19),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f708,f2079])).
fof(f2147,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2132,f2079])).
fof(f2132,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X12))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X13),s('type.num.num',X14),s('type.num.num',X15),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f620,f2079])).
fof(f2145,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2131,f2079])).
fof(f2131,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X8))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f1134,f2079])).
fof(f2141,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0)))) | s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))))))) ) | $spl102),
  inference(forward_demodulation,[],[f2130,f2079])).
fof(f2130,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',X5),s('type.num.num',X6),s('type.num.num',X7),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))))))) | s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45('const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))),sK0))))) ) | $spl102),
  inference(superposition,[],[f1214,f2079])).
fof(f2128,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) | $spl75),
  inference(trivial_inequality_removal,[],[f2127])).
fof(f2127,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) != s('type.asm.arith'(sK0),sK49(sK3,sK0)) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) | $spl75),
  inference(superposition,[],[f1773,f84])).
fof(f2123,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | $spl120),
  inference(cnf_transformation,[],[f2123_D])).
fof(f2123_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f2118,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | $spl118),
  inference(cnf_transformation,[],[f2118_D])).
fof(f2118_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2121,plain,(
  ( ! [X2] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2120,f1774])).
fof(f2120,plain,(
  ( ! [X2] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2119,f1774])).
fof(f2119,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2103,f141])).
fof(f2103,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl74),
  inference(superposition,[],[f405,f1774])).
fof(f2116,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | $spl116),
  inference(cnf_transformation,[],[f2116_D])).
fof(f2116_D,plain,(
  s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f2114,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2113,f1774])).
fof(f2113,plain,(
  ( ! [X1] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2112,f1774])).
fof(f2112,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl74)),
  inference(forward_demodulation,[],[f2102,f141])).
fof(f2102,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl74),
  inference(superposition,[],[f488,f1774])).
fof(f2096,plain,(
  ( ! [X5] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2095,f1772])).
fof(f2095,plain,(
  ( ! [X5] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2094,f1772])).
fof(f2094,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2070,f141])).
fof(f2070,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X5))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK42('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK43('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK44('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl72),
  inference(superposition,[],[f405,f1772])).
fof(f2089,plain,(
  ( ! [X4] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2088,f1772])).
fof(f2088,plain,(
  ( ! [X4] : (s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2087,f1772])).
fof(f2087,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2069,f141])).
fof(f2069,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X4))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK38('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK39('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK40('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)))) | s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)))) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK34('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.num.num',sK35('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0)),s('type.asm.reg_imm'(sK0),sK36('const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))),sK0))))) ) | $spl72),
  inference(superposition,[],[f488,f1772])).
fof(f2079,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) | $spl102),
  inference(cnf_transformation,[],[f2079_D])).
fof(f2079_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0)))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f2086,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2068,f141])).
fof(f2068,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X3))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | $spl72),
  inference(superposition,[],[f708,f1772])).
fof(f2085,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) | $spl108),
  inference(cnf_transformation,[],[f2085_D])).
fof(f2085_D,plain,(
  s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0)))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f2083,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2067,f141])).
fof(f2067,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Imm_1'(s('type.fcp.cart'(bool,sK0),sK46(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | $spl72),
  inference(superposition,[],[f620,f1772])).
fof(f2081,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2066,f141])).
fof(f2066,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | $spl72),
  inference(superposition,[],[f1134,f1772])).
fof(f2077,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | ($spl6 | $spl72)),
  inference(forward_demodulation,[],[f2065,f141])).
fof(f2065,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))))) | s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0)) = s('type.asm.reg_imm'(sK0),'const.asm.Reg_1'(s('type.num.num',sK45(sK36(sK49(sK3,sK0),sK0),sK0))))) ) | $spl72),
  inference(superposition,[],[f1214,f1772])).
fof(f1997,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f1959,f308])).
fof(f1959,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl22),
  inference(backward_demodulation,[],[f841,f126])).
fof(f841,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl22),
  inference(superposition,[],[f329,f200])).
fof(f1996,plain,(
  $false | $spl22),
  inference(trivial_inequality_removal,[],[f1967])).
fof(f1967,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl22),
  inference(superposition,[],[f124,f841])).
fof(f1805,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | $spl86),
  inference(cnf_transformation,[],[f1805_D])).
fof(f1805_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f1956,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | $spl100),
  inference(cnf_transformation,[],[f1956_D])).
fof(f1956_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f1935,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0))))) ) | $spl32),
  inference(superposition,[],[f488,f823])).
fof(f1776,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | $spl76),
  inference(cnf_transformation,[],[f1776_D])).
fof(f1776_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f1954,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | $spl98),
  inference(cnf_transformation,[],[f1954_D])).
fof(f1954_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1934,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK38(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK39(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK40(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f488,f198])).
fof(f1933,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Shift_4'(s('type.asm.shift',sK37(sK49(sK3,sK0),sK0)),s('type.num.num',sK38(sK49(sK3,sK0),sK0)),s('type.num.num',sK39(sK49(sK3,sK0),sK0)),s('type.num.num',sK40(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f488,f141])).
fof(f1917,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1916,f823])).
fof(f1916,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1915,f823])).
fof(f1915,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1914,f823])).
fof(f1914,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1896,f157])).
fof(f1896,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl32),
  inference(superposition,[],[f86,f823])).
fof(f1913,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1912,f157])).
fof(f1912,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl32),
  inference(forward_demodulation,[],[f1911,f823])).
fof(f1911,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1910,f823])).
fof(f1910,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1894,f823])).
fof(f1894,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f341,f823])).
fof(f1909,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl32),
  inference(forward_demodulation,[],[f1908,f823])).
fof(f1908,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1907,f823])).
fof(f1907,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1893,f823])).
fof(f1893,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f112,f823])).
fof(f1807,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | $spl88),
  inference(cnf_transformation,[],[f1807_D])).
fof(f1807_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f1892,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0))))) ) | $spl32),
  inference(superposition,[],[f405,f823])).
fof(f1906,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1905,f823])).
fof(f1905,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1904,f823])).
fof(f1904,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1903,f823])).
fof(f1903,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1891,f157])).
fof(f1891,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl32),
  inference(superposition,[],[f823,f86])).
fof(f821,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl30),
  inference(cnf_transformation,[],[f821_D])).
fof(f821_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f823,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl32),
  inference(cnf_transformation,[],[f823_D])).
fof(f823_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f825,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl34),
  inference(cnf_transformation,[],[f825_D])).
fof(f825_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1887,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1886,f198])).
fof(f1886,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1885,f198])).
fof(f1885,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1884,f198])).
fof(f1884,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1866,f157])).
fof(f1866,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f86,f198])).
fof(f1883,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1882,f157])).
fof(f1882,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl20),
  inference(forward_demodulation,[],[f1881,f198])).
fof(f1881,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1880,f198])).
fof(f1880,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1864,f198])).
fof(f1864,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f341,f198])).
fof(f1879,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl20),
  inference(forward_demodulation,[],[f1878,f198])).
fof(f1878,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1877,f198])).
fof(f1877,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1863,f198])).
fof(f1863,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f112,f198])).
fof(f1778,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | $spl78),
  inference(cnf_transformation,[],[f1778_D])).
fof(f1778_D,plain,(
  s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f1862,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f405,f198])).
fof(f1876,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1875,f198])).
fof(f1875,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1874,f198])).
fof(f1874,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f1873,f198])).
fof(f1873,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1861,f157])).
fof(f1861,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f198,f86])).
fof(f198,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl20),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f200,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl22),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f1859,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1858,f157])).
fof(f1858,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1857,f141])).
fof(f1857,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1856,f141])).
fof(f1856,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f993,f141])).
fof(f993,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f991,f141])).
fof(f991,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl19),
  inference(superposition,[],[f195,f86])).
fof(f195,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl19),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f1855,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1854,f157])).
fof(f1854,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1853,f141])).
fof(f1853,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1332,f141])).
fof(f1332,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1331,f195])).
fof(f1331,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1307,f141])).
fof(f1307,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))))) ) | $spl6),
  inference(superposition,[],[f341,f141])).
fof(f1852,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1851,f141])).
fof(f1851,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(forward_demodulation,[],[f1667,f141])).
fof(f1667,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | ($spl6 | $spl19)),
  inference(subsumption_resolution,[],[f1666,f195])).
fof(f1666,plain,(
  ( ! [X15] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl6),
  inference(forward_demodulation,[],[f1639,f141])).
fof(f1639,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X15))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl6),
  inference(superposition,[],[f112,f141])).
fof(f1846,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl90),
  inference(cnf_transformation,[],[f1846_D])).
fof(f1846_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f1848,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl92),
  inference(cnf_transformation,[],[f1848_D])).
fof(f1848_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f1850,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl94),
  inference(cnf_transformation,[],[f1850_D])).
fof(f1850_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f197,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl21),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f1821,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl33),
  inference(superposition,[],[f822,f86])).
fof(f822,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl33),
  inference(cnf_transformation,[],[f822_D])).
fof(f822_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f1843,plain,(
  $false | $spl48),
  inference(subsumption_resolution,[],[f1836,f98])).
fof(f1836,plain,(
  p(s(bool,'F_0')) | $spl48),
  inference(superposition,[],[f1338,f126])).
fof(f1827,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20 | $spl33)),
  inference(subsumption_resolution,[],[f1826,f157])).
fof(f1826,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl20 | $spl33)),
  inference(forward_demodulation,[],[f1825,f198])).
fof(f1825,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl20 | $spl33)),
  inference(forward_demodulation,[],[f1824,f198])).
fof(f1824,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl20 | $spl33)),
  inference(forward_demodulation,[],[f1823,f198])).
fof(f1823,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl20 | $spl33)),
  inference(subsumption_resolution,[],[f1821,f198])).
fof(f1818,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1817,f823])).
fof(f1817,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1816,f823])).
fof(f1816,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1815,f823])).
fof(f1815,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1787,f157])).
fof(f1787,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl32),
  inference(superposition,[],[f86,f823])).
fof(f1814,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1813,f157])).
fof(f1813,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl32),
  inference(forward_demodulation,[],[f1812,f823])).
fof(f1812,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1811,f823])).
fof(f1811,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1785,f823])).
fof(f1785,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f341,f823])).
fof(f1810,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl32),
  inference(forward_demodulation,[],[f1809,f823])).
fof(f1809,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1808,f823])).
fof(f1808,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(forward_demodulation,[],[f1784,f823])).
fof(f1784,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl32),
  inference(superposition,[],[f112,f823])).
fof(f1783,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0),sK0))))) ) | $spl32),
  inference(superposition,[],[f405,f823])).
fof(f1797,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1796,f823])).
fof(f1796,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1795,f823])).
fof(f1795,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(forward_demodulation,[],[f1794,f823])).
fof(f1794,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl32)),
  inference(subsumption_resolution,[],[f1782,f157])).
fof(f1782,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl32),
  inference(superposition,[],[f823,f86])).
fof(f1755,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK42(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK43(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK44(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)))) | s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK34(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.num.num',sK35(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0),sK0))))) ) | $spl20),
  inference(superposition,[],[f405,f198])).
fof(f1754,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.AddCarry_4'(s('type.num.num',sK41(sK49(sK3,sK0),sK0)),s('type.num.num',sK42(sK49(sK3,sK0),sK0)),s('type.num.num',sK43(sK49(sK3,sK0),sK0)),s('type.num.num',sK44(sK49(sK3,sK0),sK0)))) | s('type.asm.arith'(sK0),sK49(sK3,sK0)) = s('type.asm.arith'(sK0),'const.asm.Binop_4'(s('type.asm.binop',sK33(sK49(sK3,sK0),sK0)),s('type.num.num',sK34(sK49(sK3,sK0),sK0)),s('type.num.num',sK35(sK49(sK3,sK0),sK0)),s('type.asm.reg_imm'(sK0),sK36(sK49(sK3,sK0),sK0))))) ) | $spl6),
  inference(superposition,[],[f405,f141])).
fof(f1723,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl66),
  inference(cnf_transformation,[],[f1723_D])).
fof(f1723_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f1725,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl68),
  inference(cnf_transformation,[],[f1725_D])).
fof(f1725_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f1727,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl70),
  inference(cnf_transformation,[],[f1727_D])).
fof(f1727_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f1738,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1737,f821])).
fof(f1737,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1736,f821])).
fof(f1736,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1735,f821])).
fof(f1735,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1711,f157])).
fof(f1711,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl30),
  inference(superposition,[],[f86,f821])).
fof(f1734,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1733,f157])).
fof(f1733,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl30),
  inference(forward_demodulation,[],[f1732,f821])).
fof(f1732,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl30),
  inference(forward_demodulation,[],[f1731,f821])).
fof(f1731,plain,(
  ( ! [X2] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl30),
  inference(forward_demodulation,[],[f1709,f821])).
fof(f1709,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl30),
  inference(superposition,[],[f341,f821])).
fof(f1730,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl30),
  inference(forward_demodulation,[],[f1729,f821])).
fof(f1729,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl30),
  inference(forward_demodulation,[],[f1728,f821])).
fof(f1728,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl30),
  inference(forward_demodulation,[],[f1708,f821])).
fof(f1708,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0))))) ) | $spl30),
  inference(superposition,[],[f112,f821])).
fof(f1721,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1720,f821])).
fof(f1720,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1719,f821])).
fof(f1719,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(forward_demodulation,[],[f1718,f821])).
fof(f1718,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1706,f157])).
fof(f1706,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))),sK0)))) | $spl30),
  inference(superposition,[],[f821,f86])).
fof(f1671,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | $spl20),
  inference(forward_demodulation,[],[f1670,f198])).
fof(f1670,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1669,f198])).
fof(f1669,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1640,f198])).
fof(f1640,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f112,f198])).
fof(f1510,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1473,f308])).
fof(f1473,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl12),
  inference(backward_demodulation,[],[f1419,f126])).
fof(f1419,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl12),
  inference(superposition,[],[f524,f160])).
fof(f1509,plain,(
  $false | $spl12),
  inference(trivial_inequality_removal,[],[f1481])).
fof(f1481,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl12),
  inference(superposition,[],[f124,f1419])).
fof(f1441,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | $spl60),
  inference(cnf_transformation,[],[f1441_D])).
fof(f1441_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f1443,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | $spl62),
  inference(cnf_transformation,[],[f1443_D])).
fof(f1443_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1445,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | $spl64),
  inference(cnf_transformation,[],[f1445_D])).
fof(f1445_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1454,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1453,f160])).
fof(f1453,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1452,f160])).
fof(f1452,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1451,f160])).
fof(f1451,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(subsumption_resolution,[],[f1422,f157])).
fof(f1422,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | $spl12),
  inference(superposition,[],[f86,f160])).
fof(f1431,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl54),
  inference(cnf_transformation,[],[f1431_D])).
fof(f1431_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1433,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl56),
  inference(cnf_transformation,[],[f1433_D])).
fof(f1433_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1435,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl58),
  inference(cnf_transformation,[],[f1435_D])).
fof(f1435_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f1450,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f1421,f138])).
fof(f1421,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl12),
  inference(superposition,[],[f86,f160])).
fof(f1449,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl12)),
  inference(subsumption_resolution,[],[f1448,f157])).
fof(f1448,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3))))) ) | $spl12),
  inference(forward_demodulation,[],[f1447,f160])).
fof(f1447,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))))) ) | $spl12),
  inference(forward_demodulation,[],[f1446,f160])).
fof(f1446,plain,(
  ( ! [X1] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))))) ) | $spl12),
  inference(forward_demodulation,[],[f1420,f160])).
fof(f1420,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X1))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))))) ) | $spl12),
  inference(superposition,[],[f341,f160])).
fof(f1439,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1438,f160])).
fof(f1438,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1437,f160])).
fof(f1437,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(forward_demodulation,[],[f1436,f160])).
fof(f1436,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl12)),
  inference(subsumption_resolution,[],[f1418,f157])).
fof(f1418,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0))),sK0)))) | $spl12),
  inference(superposition,[],[f160,f86])).
fof(f1429,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f1417,f138])).
fof(f1417,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl12),
  inference(superposition,[],[f160,f86])).
fof(f1289,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5),s('type.asm.inst'(sK0),X4))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X5,'type.asm.inst'(sK0))))))) ) | $spl44),
  inference(cnf_transformation,[],[f1289_D])).
fof(f1289_D,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X4)))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5),s('type.asm.inst'(sK0),X4))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X5,'type.asm.inst'(sK0))))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1356,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X4)))) ) | $spl52),
  inference(cnf_transformation,[],[f1356_D])).
fof(f1356_D,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X4)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1342,plain,(
  ( ! [X6,X4,X5] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X4))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X5)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X6),s('type.asm.inst'(sK0),X5))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X6,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X6))))) )),
  inference(resolution,[],[f1185,f88])).
fof(f88,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK55(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : ((! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,sK55(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK55(X2,X1,X0)))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK55])],[f63])).
fof(f63,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X4] : (! [X5] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X5))),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) | ! [X2] : (? [X3] : (! [X4] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1)))) => ! [X2] : (! [X3] : (! [X4] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,X4))),s(X0,X3)))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) => ! [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X46] : (p(s(bool,'const.relation.WF_1'(s(fun(X6,fun(X6,bool)),X46)))) => ! [X7] : (! [X41] : (! [X45] : (p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X6,fun(X6,bool)),X46),s(X6,X45))),s(X6,X41)))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X45))))) => p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X41))))) => ! [X41] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X41))))))),
  file('thm.wordProps.inst_ok_less_ind','thm.relation.WF_INDUCTION_THM')).
fof(f1185,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X2,'type.asm.inst'(sK0)))))) | s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2)))) )),
  inference(resolution,[],[f123,f93])).
fof(f123,plain,(
  ( ! [X4] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X4)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X4,'type.asm.inst'(sK0))))))) )),
  inference(resolution,[],[f76,f89])).
fof(f89,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK55(X2,X1,X0))))) | ~p(s(bool,'const.relation.WF_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f136,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0))))) ) | $spl2),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1355,plain,(
  ( ! [X3,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X3,'type.asm.inst'(sK0))))))) ) | $spl50),
  inference(cnf_transformation,[],[f1355_D])).
fof(f1355_D,plain,(
  ( ! [X3,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X3,'type.asm.inst'(sK0))))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1341,plain,(
  ( ! [X2,X3,X1] : (s(bool,'F_0') = s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X2)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X3,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3))))) )),
  inference(resolution,[],[f1185,f88])).
fof(f1337,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f1336,f157])).
fof(f1336,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3))))) ) | $spl20),
  inference(forward_demodulation,[],[f1335,f198])).
fof(f1335,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1334,f198])).
fof(f1334,plain,(
  ( ! [X16] : (s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(forward_demodulation,[],[f1308,f198])).
fof(f1308,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X16))),s('type.asm.inst'(sK0),sK3)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))))) ) | $spl20),
  inference(superposition,[],[f341,f198])).
fof(f1290,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3)))) ) | $spl46),
  inference(cnf_transformation,[],[f1290_D])).
fof(f1290_D,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1275,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X3))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X4)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5),s('type.asm.inst'(sK0),X4))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X5,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X5))))) )),
  inference(resolution,[],[f1183,f88])).
fof(f1183,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0)))))) | s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0)))) )),
  inference(resolution,[],[f123,f96])).
fof(f1288,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X2,'type.asm.inst'(sK0))))))) ) | $spl42),
  inference(cnf_transformation,[],[f1288_D])).
fof(f1288_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X2,'type.asm.inst'(sK0))))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1274,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X0))) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X1)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X0,'type.asm.inst'(sK0))))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X2,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X2))))) )),
  inference(resolution,[],[f1183,f88])).
fof(f135,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0))))))) ) | $spl0),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0))))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f975,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(subsumption_resolution,[],[f945,f98])).
fof(f945,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(superposition,[],[f88,f126])).
fof(f937,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f936,f198])).
fof(f936,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f935,f198])).
fof(f935,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f934,f198])).
fof(f934,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f923,f157])).
fof(f923,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f86,f198])).
fof(f933,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f932,f198])).
fof(f932,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f931,f198])).
fof(f931,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f930,f198])).
fof(f930,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f921,f157])).
fof(f921,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f198,f86])).
fof(f903,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f867,f308])).
fof(f867,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl18),
  inference(backward_demodulation,[],[f722,f126])).
fof(f722,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X0))),s('type.asm.inst'(sK0),sK3)))) ) | $spl18),
  inference(superposition,[],[f524,f196])).
fof(f902,plain,(
  $false | $spl18),
  inference(trivial_inequality_removal,[],[f875])).
fof(f875,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl18),
  inference(superposition,[],[f124,f722])).
fof(f856,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl36),
  inference(cnf_transformation,[],[f856_D])).
fof(f856_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f858,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl38),
  inference(cnf_transformation,[],[f858_D])).
fof(f858_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f860,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl40),
  inference(cnf_transformation,[],[f860_D])).
fof(f860_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f864,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f863,f200])).
fof(f863,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f862,f200])).
fof(f862,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f861,f200])).
fof(f861,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(subsumption_resolution,[],[f844,f157])).
fof(f844,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl22),
  inference(superposition,[],[f86,f200])).
fof(f854,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f853,f200])).
fof(f853,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f852,f200])).
fof(f852,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(forward_demodulation,[],[f851,f200])).
fof(f851,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl22)),
  inference(subsumption_resolution,[],[f840,f157])).
fof(f840,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl22),
  inference(superposition,[],[f200,f86])).
fof(f196,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl18),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f838,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11 | $spl21)),
  inference(subsumption_resolution,[],[f837,f157])).
fof(f837,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f836,f141])).
fof(f836,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f835,f141])).
fof(f835,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl21)),
  inference(forward_demodulation,[],[f834,f141])).
fof(f834,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | ($spl6 | $spl21)),
  inference(subsumption_resolution,[],[f832,f141])).
fof(f832,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl21),
  inference(superposition,[],[f197,f86])).
fof(f829,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f828,f198])).
fof(f828,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f827,f198])).
fof(f827,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f826,f198])).
fof(f826,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f809,f157])).
fof(f809,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f86,f198])).
fof(f819,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f818,f198])).
fof(f818,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f817,f198])).
fof(f817,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(forward_demodulation,[],[f816,f198])).
fof(f816,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl20)),
  inference(subsumption_resolution,[],[f807,f157])).
fof(f807,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl20),
  inference(superposition,[],[f198,f86])).
fof(f736,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl24),
  inference(cnf_transformation,[],[f736_D])).
fof(f736_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f738,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl26),
  inference(cnf_transformation,[],[f738_D])).
fof(f738_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f740,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl28),
  inference(cnf_transformation,[],[f740_D])).
fof(f740_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f744,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f743,f196])).
fof(f743,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f742,f196])).
fof(f742,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f741,f196])).
fof(f741,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(subsumption_resolution,[],[f724,f157])).
fof(f724,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl18),
  inference(superposition,[],[f86,f196])).
fof(f734,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f733,f196])).
fof(f733,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f732,f196])).
fof(f732,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(forward_demodulation,[],[f731,f196])).
fof(f731,plain,(
  s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | ($spl11 | $spl18)),
  inference(subsumption_resolution,[],[f721,f157])).
fof(f721,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.num.num',sK51('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0))),sK0)))) | $spl18),
  inference(superposition,[],[f196,f86])).
fof(f462,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(subsumption_resolution,[],[f432,f98])).
fof(f432,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(superposition,[],[f88,f126])).
fof(f383,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f382,f141])).
fof(f382,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f381,f141])).
fof(f381,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f380,f141])).
fof(f380,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f369,f157])).
fof(f369,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f86,f141])).
fof(f379,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f378,f141])).
fof(f378,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f377,f141])).
fof(f377,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f376,f141])).
fof(f376,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f368,f157])).
fof(f368,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f141,f86])).
fof(f139,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl4),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f225,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f218,f72])).
fof(f218,plain,(
  ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f76,f86])).
fof(f352,plain,(
  $false | $spl4),
  inference(resolution,[],[f342,f76])).
fof(f342,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),X2))),s('type.asm.inst'(sK0),sK3))))) ) | $spl4),
  inference(superposition,[],[f73,f139])).
fof(f248,plain,(
  $false | $spl2),
  inference(resolution,[],[f136,f76])).
fof(f160,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl12),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f162,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl14),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f164,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl16),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f244,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f243,f139])).
fof(f243,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f242,f139])).
fof(f242,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f241,f139])).
fof(f241,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(subsumption_resolution,[],[f230,f157])).
fof(f230,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f86,f139])).
fof(f240,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f239,f139])).
fof(f239,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f238,f139])).
fof(f238,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(forward_demodulation,[],[f237,f139])).
fof(f237,plain,(
  s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | ($spl4 | $spl11)),
  inference(subsumption_resolution,[],[f228,f157])).
fof(f228,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f139,f86])).
fof(f226,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl7),
  inference(subsumption_resolution,[],[f225,f140])).
fof(f140,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | $spl7),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f211,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(resolution,[],[f76,f88])).
fof(f210,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | ($spl7 | $spl11)),
  inference(subsumption_resolution,[],[f209,f157])).
fof(f209,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl7),
  inference(trivial_inequality_removal,[],[f207])).
fof(f207,plain,(
  s('type.asm.inst'(sK0),sK3) != s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl7),
  inference(superposition,[],[f140,f86])).
fof(f204,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f203,f141])).
fof(f203,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f202,f141])).
fof(f202,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f201,f141])).
fof(f201,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f184,f157])).
fof(f184,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f86,f141])).
fof(f194,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f193,f141])).
fof(f193,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f192,f141])).
fof(f192,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(forward_demodulation,[],[f191,f141])).
fof(f191,plain,(
  s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | ($spl6 | $spl11)),
  inference(subsumption_resolution,[],[f183,f157])).
fof(f183,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0))),sK0)))) | $spl6),
  inference(superposition,[],[f141,f86])).
fof(f182,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl11),
  inference(trivial_inequality_removal,[],[f181])).
fof(f181,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') != s('type.asm.inst'(sK0),'const.asm.Skip_0') | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) | $spl11),
  inference(superposition,[],[f157,f86])).
fof(f178,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f171,f72])).
fof(f171,plain,(
  ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) | $spl10),
  inference(backward_demodulation,[],[f158,f76])).
fof(f158,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl10),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f167,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl4),
  inference(forward_demodulation,[],[f166,f139])).
fof(f166,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f165,f139])).
fof(f165,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f147,f139])).
fof(f147,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f86,f139])).
fof(f156,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | $spl4),
  inference(forward_demodulation,[],[f155,f139])).
fof(f155,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f154,f139])).
fof(f154,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(forward_demodulation,[],[f145,f139])).
fof(f145,plain,(
  s('type.asm.inst'(sK0),'const.asm.Skip_0') = s('type.asm.inst'(sK0),sK3) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.num.num',sK51('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.asm.addr'(sK0),sK52('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0)))) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)),s('type.fcp.cart'(bool,sK0),sK48('const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))),sK0)))) | $spl4),
  inference(superposition,[],[f139,f86])).
fof(f137,plain,(
  s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(subsumption_resolution,[],[f128,f72])).
fof(f128,plain,(
  ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),'const.asm.Skip_0')))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Mem_3'(s('type.asm.mem_op',sK50(sK3,sK0)),s('type.num.num',sK51(sK3,sK0)),s('type.asm.addr'(sK0),sK52(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Arith_1'(s('type.asm.arith'(sK0),sK49(sK3,sK0)))) | s('type.asm.inst'(sK0),sK3) = s('type.asm.inst'(sK0),'const.asm.Const_2'(s('type.num.num',sK47(sK3,sK0)),s('type.fcp.cart'(bool,sK0),sK48(sK3,sK0))))),
  inference(superposition,[],[f76,f86])).
fof(f121,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2))),s('type.asm.inst'(sK0),X0)))) | ~p(s(bool,happ(s(fun('type.asm.inst'(sK0),bool),happ(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1),s('type.asm.inst'(sK0),sK3))),s('type.asm.inst'(sK0),sK55(happ(s(fun('type.asm.asm_config'(sK0),fun('type.asm.inst'(sK0),bool)),sK1),s('type.asm.asm_config'(sK0),sK2)),X1,'type.asm.inst'(sK0)))))) | ~p(s(bool,'const.relation.WF_1'(s(fun('type.asm.inst'(sK0),fun('type.asm.inst'(sK0),bool)),X1))))) )),
  inference(resolution,[],[f76,f88])).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 205
% Passive clauses: 684
% Generated clauses: 5173
% Final active clauses: 142
% Final passive clauses: 397
% Input formulas: 21
% Initial clauses: 36
% 
% Selected by SInE selection: 18
% SInE iterations: 1
% 
% Duplicate literals: 29
% Trivial inequalities: 103
% Fw subsumption resolutions: 315
% Fw demodulations: 1194
% Bw demodulations: 21
% 
% Simple tautologies: 4
% Forward subsumptions: 2358
% 
% Binary resolution: 146
% Forward superposition: 1051
% Backward superposition: 2066
% Self superposition: 1
% 
% Split clauses: 525
% Split components: 1153
% SAT solver clauses: 551
% SAT solver unit clauses: 14
% SAT solver binary clauses: 12
% 
% Sat splits: 525
% Sat splitting refutations: 25
% 
% Memory used [KB]: 6780
% Time elapsed: 0.276 s
% ------------------------------
% ------------------------------
% Success in time 12.031 s
