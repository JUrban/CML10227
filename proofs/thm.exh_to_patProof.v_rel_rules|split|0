Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exh_to_patProof
% (86449)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 95
% Passive clauses: 1992
% Generated clauses: 11513
% Final active clauses: 81
% Final passive clauses: 1717
% Input formulas: 26
% Initial clauses: 88
% 
% Duplicate literals: 728
% Trivial inequalities: 142
% Fw subsumption resolutions: 1847
% Fw demodulations: 277
% Bw demodulations: 8
% 
% Simple tautologies: 249
% Equational tautologies: 120
% Forward subsumptions: 4624
% 
% Binary resolution: 208
% Factoring: 3
% Forward superposition: 3142
% Backward superposition: 4223
% Self superposition: 400
% Equality factoring: 356
% Equality resolution: 16
% 
% Split clauses: 515
% Split components: 1032
% SAT solver clauses: 1587
% SAT solver unit clauses: 7
% SAT solver binary clauses: 187
% 
% Sat splits: 515
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1586
% TWLsolver calls for satisfiability: 151
% 
% Memory used [KB]: 6140
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.exh_to_patProof
% (86489)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 70
% Passive clauses: 288
% Generated clauses: 7277
% Final active clauses: 60
% Final passive clauses: 177
% Input formulas: 26
% Initial clauses: 88
% 
% Duplicate literals: 855
% Trivial inequalities: 69
% Fw subsumption resolutions: 602
% Fw demodulations: 169
% Bw demodulations: 45
% Condensations: 1455
% Global subsumptions: 4
% 
% Simple tautologies: 167
% Equational tautologies: 77
% Forward subsumptions: 2663
% 
% Binary resolution: 79
% Factoring: 2
% Forward superposition: 1584
% Backward superposition: 1912
% Self superposition: 222
% Equality factoring: 188
% Equality resolution: 18
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 589
% SAT solver unit clauses: 89
% SAT solver binary clauses: 58
% SAT solver learnt clauses: 9
% SAT solver learnt literals: 1
% 
% Sat splits: 27
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 572
% TWLsolver calls for satisfiability: 1018
% 
% Memory used [KB]: 5373
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.exh_to_patProof
% (86532)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 117
% Passive clauses: 616
% Generated clauses: 25506
% Final active clauses: 75
% Final passive clauses: 234
% Input formulas: 26
% Initial clauses: 88
% 
% Duplicate literals: 3326
% Trivial inequalities: 194
% Fw subsumption resolutions: 1828
% Fw demodulations: 535
% Bw demodulations: 205
% Condensations: 6305
% Global subsumptions: 7
% 
% Simple tautologies: 348
% Equational tautologies: 479
% Forward subsumptions: 10311
% Bw demodulations to eq. taut.: 5
% 
% Unit resulting resolution: 720
% Factoring: 2
% Forward superposition: 5626
% Backward superposition: 5924
% Self superposition: 582
% Equality factoring: 510
% Equality resolution: 21
% 
% Split clauses: 48
% Split components: 96
% SAT solver clauses: 732
% SAT solver unit clauses: 33
% SAT solver binary clauses: 124
% 
% Sat splits: 48
% Sat splitting refutations: 11
% 
% Memory used [KB]: 12792
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 19 next slice time: 19
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.exh_to_patProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exh_to_patProof
% SZS output start Proof for thm.exh_to_patProof
fof(f2996,plain,(
  $false),
  inference(equality_resolution,[],[f2995])).
fof(f2995,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0)))) )),
  inference(duplicate_literal_removal,[],[f2990])).
fof(f2990,plain,(
  ( ! [X0] : (s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0))) | s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0)))) )),
  inference(resolution,[],[f2983,f166])).
fof(f166,plain,(
  ~sP4('const.patSem.Litv_1'(s('type.ast.lit',sK5)),'const.patSem.Litv_1'(s('type.ast.lit',sK5)))),
  inference(resolution,[],[f94,f164])).
fof(f164,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1)))) | ~sP4(X0,X1)) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1)))) | sP4(X0,X1)) & (~sP4(X0,X1) | p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1))))))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : (p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1)))) <=> sP4(X0,X1))),
  inference(definition_folding,[],[f58,f63,f62,f61,f60,f59])).
fof(f59,plain,(
  ! [X2,X4,X3] : (sP0(X2,X4,X3) <=> ? [X17,X18,X19] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X18))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X19))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X18),s('type.list.list'('type.patSem.v'),X19))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f60,plain,(
  ! [X2,X4,X3] : (sP1(X2,X4,X3) <=> ? [X13,X14,X15,X16] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X13),s('type.patLang.exp',X15))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X14),s('type.patLang.exp',X16))) & p(s(bool,happ(s(fun('type.patLang.exp',bool),happ(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X13))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X14))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bind_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patSem.v'),X14))))))),s('type.patLang.exp',X15))),s('type.patLang.exp',X16))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f61,plain,(
  ! [X2,X4,X3] : (sP2(X2,X4,X3) <=> ? [X8,X9,X10,X11,X12] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patLang.exp'),X10),s('type.num.num',X12))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X9),s('type.list.list'('type.patLang.exp'),X11),s('type.num.num',X12))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X8))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X11))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X9))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patSem.v'),X9))))))),s('type.list.list'('type.patLang.exp'),X10),s('type.list.list'('type.patLang.exp'),X11))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f62,plain,(
  ! [X2,X4,X3] : (sP3(X2,X4,X3) <=> ? [X5,X6] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X5))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X6))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X5),s('type.list.list'('type.patSem.v'),X6))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f63,plain,(
  ! [X0,X1] : (sP4(X0,X1) <=> ! [X2] : (? [X3,X4] : ((? [X20] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20)))) | sP0(X2,X4,X3) | sP1(X2,X4,X3) | sP2(X2,X4,X3) | ? [X7] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7)))) | sP3(X2,X4,X3)) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f58,plain,(
  ! [X0,X1] : (p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1)))) <=> ! [X2] : (? [X3,X4] : ((? [X20] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20)))) | ? [X17,X18,X19] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X18))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X19))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X18),s('type.list.list'('type.patSem.v'),X19))))) | ? [X13,X14,X15,X16] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X13),s('type.patLang.exp',X15))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X14),s('type.patLang.exp',X16))) & p(s(bool,happ(s(fun('type.patLang.exp',bool),happ(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X13))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X14))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bind_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patSem.v'),X14))))))),s('type.patLang.exp',X15))),s('type.patLang.exp',X16))))) | ? [X8,X9,X10,X11,X12] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patLang.exp'),X10),s('type.num.num',X12))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X9),s('type.list.list'('type.patLang.exp'),X11),s('type.num.num',X12))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X8))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X11))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X9))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patSem.v'),X9))))))),s('type.list.list'('type.patLang.exp'),X10),s('type.list.list'('type.patLang.exp'),X11))))) | ? [X7] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7)))) | ? [X5,X6] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X5))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X6))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X5),s('type.list.list'('type.patSem.v'),X6)))))) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : (p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X0),s('type.patSem.v',X1)))) <=> ! [X2] : (! [X3,X4] : ((? [X20] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20)))) | ? [X17,X18,X19] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X18))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X17),s('type.list.list'('type.patSem.v'),X19))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X18),s('type.list.list'('type.patSem.v'),X19))))) | ? [X13,X14,X15,X16] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X13),s('type.patLang.exp',X15))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X14),s('type.patLang.exp',X16))) & p(s(bool,happ(s(fun('type.patLang.exp',bool),happ(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X13))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X14))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bind_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X13),s('type.list.list'('type.patSem.v'),X14))))))),s('type.patLang.exp',X15))),s('type.patLang.exp',X16))))) | ? [X8,X9,X10,X11,X12] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patLang.exp'),X10),s('type.num.num',X12))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X9),s('type.list.list'('type.patLang.exp'),X11),s('type.num.num',X12))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X8))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X11))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X9))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X10))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X8),s('type.list.list'('type.patSem.v'),X9))))))),s('type.list.list'('type.patLang.exp'),X10),s('type.list.list'('type.patLang.exp'),X11))))) | ? [X7] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7)))) | ? [X5,X6] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X5))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X6))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.list.list'('type.patSem.v'),X5),s('type.list.list'('type.patSem.v'),X6)))))) => p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) => p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X5,X33] : (p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v',X5),s('type.patSem.v',X33)))) <=> ! [X34] : (! [X35,X36] : ((? [X6] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6)))) | ? [X37,X38,X39] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.patSem.v'),X38))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Conv_2'(s('type.num.num',X37),s('type.list.list'('type.patSem.v'),X39))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.list.list'('type.patSem.v'),X38),s('type.list.list'('type.patSem.v'),X39))))) | ? [X32,X31,X40,X41] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X32),s('type.patLang.exp',X40))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Closure_2'(s('type.list.list'('type.patSem.v'),X31),s('type.patLang.exp',X41))) & p(s(bool,happ(s(fun('type.patLang.exp',bool),happ(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X32))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X31))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bind_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.list.list'('type.patSem.v'),X32),s('type.list.list'('type.patSem.v'),X31))))))),s('type.patLang.exp',X40))),s('type.patLang.exp',X41))))) | ? [X32,X31,X42,X43,X22] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X32),s('type.list.list'('type.patLang.exp'),X42),s('type.num.num',X22))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Recclosure_3'(s('type.list.list'('type.patSem.v'),X31),s('type.list.list'('type.patLang.exp'),X43),s('type.num.num',X22))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patLang.exp',fun('type.patLang.exp',bool)),'const.exh_to_patProof.exp_rel_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X42))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X32))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X43))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X31))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.bindn_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X42))))),s(fun('type.num.num',fun('type.num.num',bool)),'const.exh_to_patProof.env_rel_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.list.list'('type.patSem.v'),X32),s('type.list.list'('type.patSem.v'),X31))))))),s('type.list.list'('type.patLang.exp'),X42),s('type.list.list'('type.patLang.exp'),X43))))) | ? [X22] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X22))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X22)))) | ? [X38,X39] : (s('type.patSem.v',X35) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X38))) & s('type.patSem.v',X36) = s('type.patSem.v','const.patSem.Vectorv_1'(s('type.list.list'('type.patSem.v'),X39))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.list.list'('type.patSem.v'),X38),s('type.list.list'('type.patSem.v'),X39)))))) => p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.patSem.v',X35))),s('type.patSem.v',X36))))) => p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X34),s('type.patSem.v',X5))),s('type.patSem.v',X33))))))),
  file('thm.exh_to_patProof.v_rel_rules|split|0','thm.exh_to_patProof.v_rel_def')).
fof(f94,plain,(
  ~p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))))))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ~p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK5))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f44])).
fof(f44,plain,(
  ? [X0] : ~p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0] : p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.exh_to_patProof.v_rel_2'(s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))),s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))))))),
  file('thm.exh_to_patProof.v_rel_rules|split|0','thm.exh_to_patProof.v_rel_rules|split|0')).
fof(f2983,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1) | s('type.patSem.v',X1) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X2))) | s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X2)))) )),
  inference(duplicate_literal_removal,[],[f2923])).
fof(f2923,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1) | s('type.patSem.v',X1) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X2))) | s('type.patSem.v',X0) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X2))) | sP4(X0,X1)) )),
  inference(resolution,[],[f140,f146])).
fof(f146,plain,(
  ( ! [X0,X1] : (sP4(X0,X1) | ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),sK12(X1,X0)),s('type.patSem.v',X0))),s('type.patSem.v',X1))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ((~sP4(X0,X1) | ! [X7] : ((((s('type.patSem.v',sK8(X7,X1,X0)) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK10(X7,X1,X0)))) & s('type.patSem.v',sK9(X7,X1,X0)) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',sK10(X7,X1,X0))))) | sP0(X7,sK9(X7,X1,X0),sK8(X7,X1,X0)) | sP1(X7,sK9(X7,X1,X0),sK8(X7,X1,X0)) | sP2(X7,sK9(X7,X1,X0),sK8(X7,X1,X0)) | (s('type.patSem.v',sK8(X7,X1,X0)) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK11(X7,X1,X0)))) & s('type.patSem.v',sK9(X7,X1,X0)) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',sK11(X7,X1,X0))))) | sP3(X7,sK9(X7,X1,X0),sK8(X7,X1,X0))) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X7),s('type.patSem.v',sK8(X7,X1,X0)))),s('type.patSem.v',sK9(X7,X1,X0)))))) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X7),s('type.patSem.v',X0))),s('type.patSem.v',X1)))))) & ((! [X3,X4] : ((! [X6] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6)))) & ~sP0(sK12(X1,X0),X4,X3) & ~sP1(sK12(X1,X0),X4,X3) & ~sP2(sK12(X1,X0),X4,X3) & ! [X5] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X5))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X5)))) & ~sP3(sK12(X1,X0),X4,X3)) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),sK12(X1,X0)),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),sK12(X1,X0)),s('type.patSem.v',X0))),s('type.patSem.v',X1))))) | sP4(X0,X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10,sK11,sK12])],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((~sP4(X0,X1) | ! [X7] : (? [X8,X9] : ((? [X11] : (s('type.patSem.v',X8) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X11))) & s('type.patSem.v',X9) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X11)))) | sP0(X7,X9,X8) | sP1(X7,X9,X8) | sP2(X7,X9,X8) | ? [X10] : (s('type.patSem.v',X8) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X10))) & s('type.patSem.v',X9) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X10)))) | sP3(X7,X9,X8)) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X7),s('type.patSem.v',X8))),s('type.patSem.v',X9))))) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X7),s('type.patSem.v',X0))),s('type.patSem.v',X1)))))) & (? [X2] : (! [X3,X4] : ((! [X6] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6)))) & ~sP0(X2,X4,X3) & ~sP1(X2,X4,X3) & ~sP2(X2,X4,X3) & ! [X5] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X5))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X5)))) & ~sP3(X2,X4,X3)) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1))))) | sP4(X0,X1)))),
  inference(rectify,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : ((~sP4(X0,X1) | ! [X2] : (? [X3,X4] : ((? [X20] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20)))) | sP0(X2,X4,X3) | sP1(X2,X4,X3) | sP2(X2,X4,X3) | ? [X7] : (s('type.patSem.v',X3) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7))) & s('type.patSem.v',X4) = s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7)))) | sP3(X2,X4,X3)) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1)))))) & (? [X2] : (! [X3,X4] : ((! [X20] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X20)))) & ~sP0(X2,X4,X3) & ~sP1(X2,X4,X3) & ~sP2(X2,X4,X3) & ! [X7] : (s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Loc_1'(s('type.num.num',X7)))) & ~sP3(X2,X4,X3)) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X3))),s('type.patSem.v',X4))))) & ~p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),X2),s('type.patSem.v',X0))),s('type.patSem.v',X1))))) | sP4(X0,X1)))),
  inference(nnf_transformation,[],[f63])).
fof(f140,plain,(
  ( ! [X6,X4,X0,X3,X1] : (sP4(X0,X1) | p(s(bool,happ(s(fun('type.patSem.v',bool),happ(s(fun('type.patSem.v',fun('type.patSem.v',bool)),sK12(X1,X0)),s('type.patSem.v',X3))),s('type.patSem.v',X4)))) | s('type.patSem.v',X4) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6))) | s('type.patSem.v',X3) != s('type.patSem.v','const.patSem.Litv_1'(s('type.ast.lit',X6)))) )),
  inference(cnf_transformation,[],[f80])).
% SZS output end Proof for thm.exh_to_patProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 111
% Passive clauses: 759
% Generated clauses: 2790
% Final active clauses: 69
% Final passive clauses: 626
% Input formulas: 26
% Initial clauses: 72
% 
% Selected by SInE selection: 15
% SInE iterations: 1
% 
% Duplicate literals: 212
% Trivial inequalities: 17
% Fw subsumption resolutions: 429
% Fw demodulations: 22
% Bw demodulations: 26
% 
% Simple tautologies: 163
% Equational tautologies: 38
% Forward subsumptions: 1143
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 433
% Factoring: 1
% Forward superposition: 822
% Backward superposition: 660
% Self superposition: 44
% Equality factoring: 50
% Equality resolution: 17
% 
% Split clauses: 59
% Split components: 118
% SAT solver clauses: 72
% SAT solver unit clauses: 10
% SAT solver binary clauses: 18
% 
% Sat splits: 59
% Sat splitting refutations: 11
% 
% Memory used [KB]: 2174
% Time elapsed: 0.059 s
% ------------------------------
% ------------------------------
% Success in time 13.12 s
