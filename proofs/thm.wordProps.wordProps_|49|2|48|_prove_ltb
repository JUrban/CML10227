Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f4667,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4666,f217,f396,f394,f392,f390,f4664,f218,f389,f4665])).
fof(f4665,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f392,f220])).
fof(f220,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X4),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X5)))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK14),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK15))))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK17))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK18),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK19))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK21)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) & ! [X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X6),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X7))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X8),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X9))))) & ! [X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X4),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X5))))) & ! [X2,X3] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X2),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X3))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21])],[f135])).
fof(f135,plain,(
  ? [X0,X1] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X16,X17] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17))))) | ? [X14,X15] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X14),s('type.list.list'('type.wordSem.stack_frame'(X0)),X15))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X10,X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X10),s('type.list.list'('type.wordSem.stack_frame'(X0)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X12),s('type.list.list'('type.wordSem.stack_frame'(X0)),X13)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) & ! [X6,X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X6),s('type.list.list'('type.wordSem.stack_frame'(X0)),X7))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X8),s('type.list.list'('type.wordSem.stack_frame'(X0)),X9))))) & ! [X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5))))) & ! [X2,X3] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X2),s('type.list.list'('type.wordSem.stack_frame'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))))),
  inference(rectify,[],[f95])).
fof(f95,plain,(
  ? [X0,X1] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X8),s('type.list.list'('type.wordSem.stack_frame'(X0)),X9))))) | ? [X6,X7] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X6),s('type.list.list'('type.wordSem.stack_frame'(X0)),X7))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X2),s('type.list.list'('type.wordSem.stack_frame'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5)))))) & s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) & ! [X14,X15,X16,X17] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X14),s('type.list.list'('type.wordSem.stack_frame'(X0)),X15))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17))))) & ! [X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X12),s('type.list.list'('type.wordSem.stack_frame'(X0)),X13))))) & ! [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X10),s('type.list.list'('type.wordSem.stack_frame'(X0)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ? [X0,X1] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X8),s('type.list.list'('type.wordSem.stack_frame'(X0)),X9))))) | ? [X6,X7] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X6),s('type.list.list'('type.wordSem.stack_frame'(X0)),X7))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X2),s('type.list.list'('type.wordSem.stack_frame'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5)))))) & (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) & ! [X14,X15,X16,X17] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X14),s('type.list.list'('type.wordSem.stack_frame'(X0)),X15))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17))))) & ! [X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X12),s('type.list.list'('type.wordSem.stack_frame'(X0)),X13))))) & ! [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X10),s('type.list.list'('type.wordSem.stack_frame'(X0)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X8),s('type.list.list'('type.wordSem.stack_frame'(X0)),X9))))) | ? [X6,X7] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X6),s('type.list.list'('type.wordSem.stack_frame'(X0)),X7))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X2),s('type.list.list'('type.wordSem.stack_frame'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X14,X15,X16,X17] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X14),s('type.list.list'('type.wordSem.stack_frame'(X0)),X15))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17))))) | ? [X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X12),s('type.list.list'('type.wordSem.stack_frame'(X0)),X13))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X10),s('type.list.list'('type.wordSem.stack_frame'(X0)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0')))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X8),s('type.list.list'('type.wordSem.stack_frame'(X0)),X9))))) | ? [X6,X7] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X6),s('type.list.list'('type.wordSem.stack_frame'(X0)),X7))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X2,X3,X4,X5] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X2),s('type.list.list'('type.wordSem.stack_frame'(X0)),X3))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X4),s('type.list.list'('type.wordSem.stack_frame'(X0)),X5)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'))) | ? [X14,X15,X16,X17] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X14),s('type.list.list'('type.wordSem.stack_frame'(X0)),X15))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X16),s('type.list.list'('type.wordSem.stack_frame'(X0)),X17))))) | ? [X12,X13] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X12),s('type.list.list'('type.wordSem.stack_frame'(X0)),X13))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),X1) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X0)),'type.list.list'('type.wordSem.stack_frame'(X0))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X0),X10),s('type.list.list'('type.wordSem.stack_frame'(X0)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X0)),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X8),s('type.list.list'('type.wordSem.stack_frame'(X6)),X9))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X12,X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X12),s('type.list.list'('type.wordSem.stack_frame'(X6)),X13))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X14),s('type.list.list'('type.wordSem.stack_frame'(X6)),X15)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X12,X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X12),s('type.list.list'('type.wordSem.stack_frame'(X6)),X13))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X14),s('type.list.list'('type.wordSem.stack_frame'(X6)),X15))))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X8),s('type.list.list'('type.wordSem.stack_frame'(X6)),X9))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X8),s('type.list.list'('type.wordSem.stack_frame'(X6)),X9))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X12,X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X12),s('type.list.list'('type.wordSem.stack_frame'(X6)),X13))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X14),s('type.list.list'('type.wordSem.stack_frame'(X6)),X15)))))) => (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'))) | ? [X12,X13,X14,X15] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X12),s('type.list.list'('type.wordSem.stack_frame'(X6)),X13))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X14),s('type.list.list'('type.wordSem.stack_frame'(X6)),X15))))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X8),s('type.list.list'('type.wordSem.stack_frame'(X6)),X9))))) | ? [X10,X11] : s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),X7) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(X6)),'type.list.list'('type.wordSem.stack_frame'(X6))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(X6),X10),s('type.list.list'('type.wordSem.stack_frame'(X6)),X11))),s('type.list.list'('type.wordSem.stack_frame'(X6)),'const.list.NIL_0')))))),
  file('thm.wordProps.wordProps_|49|2|48|_prove_ltb','thm.wordProps.wordProps_|49|2|48|_prove_ltb')).
fof(f389,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | $spl1),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f218,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f4664,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f396,f219])).
fof(f219,plain,(
  ( ! [X6,X8,X7,X9] : (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X6),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X7))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X8),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X9)))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f390,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | $spl0),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f392,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK14),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK15))))) | $spl2),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK14),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK15))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f394,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK17))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | $spl4),
  inference(cnf_transformation,[],[f394_D])).
fof(f394_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK17))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f396,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK18),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK19))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK21))))) | $spl6),
  inference(cnf_transformation,[],[f396_D])).
fof(f396_D,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK18),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK19))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK21))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f217,plain,(
  s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK18),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK19))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK20),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK21))))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK16),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK17))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),sK14),s('type.list.list'('type.wordSem.stack_frame'(sK12)),sK15))))) | s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) = s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0'),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f4666,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f394,f221])).
fof(f221,plain,(
  ( ! [X2,X3] : (s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),sK13) != s('type.pair.prod'('type.list.list'('type.wordSem.stack_frame'(sK12)),'type.list.list'('type.wordSem.stack_frame'(sK12))),'const.pair.,_2'(s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.CONS_2'(s('type.wordSem.stack_frame'(sK12),X2),s('type.list.list'('type.wordSem.stack_frame'(sK12)),X3))),s('type.list.list'('type.wordSem.stack_frame'(sK12)),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f136])).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 369
% Passive clauses: 1499
% Generated clauses: 4442
% Final active clauses: 369
% Final passive clauses: 953
% Input formulas: 36
% Initial clauses: 168
% 
% Duplicate literals: 153
% Trivial inequalities: 23
% Fw subsumption resolutions: 293
% 
% Simple tautologies: 143
% Equational tautologies: 30
% Forward subsumptions: 2300
% 
% Binary resolution: 2759
% Factoring: 771
% Forward superposition: 156
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 100
% Split components: 203
% SAT solver clauses: 188
% SAT solver unit clauses: 10
% SAT solver binary clauses: 39
% SAT solver learnt clauses: 1
% 
% Sat splits: 100
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 187
% TWLsolver calls for satisfiability: 159
% 
% Memory used [KB]: 2302
% Time elapsed: 0.088 s
% ------------------------------
% ------------------------------
% Success in time 0.091 s
