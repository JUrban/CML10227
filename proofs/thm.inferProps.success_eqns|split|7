Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f2088,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2087,f158,f237,f161,f240,f205,f239,f242])).
fof(f242,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) ) | $spl6),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f239,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f205,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(flattening,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7,X8] : ! [X9,X15,X14,X17] : (s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.infer.failwith_2'(s(X6,X9),s(X8,X15))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X14))),s(X8,X17))) <=> p(s(bool,'F_0')))),
  file('thm.inferProps.success_eqns|split|7','thm.inferProps.inferProps_3|49|_prove_ltb')).
fof(f240,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f161,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.success_eqns|split|7',aHL_FALSITY)).
fof(f237,plain,(
  s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK5))),s(sK2,sK6))) | $spl0),
  inference(cnf_transformation,[],[f237_D])).
fof(f237_D,plain,(
  s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK5))),s(sK2,sK6))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f158,plain,(
  p(s(bool,'F_0')) | s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK5))),s(sK2,sK6)))),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  (s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK5))),s(sK2,sK6))) | p(s(bool,'F_0'))) & (s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) != s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.pair.,_2'(s('type.infer.exc'(sK1,sK0),'const.infer.Success_1'(s(sK1,sK5))),s(sK2,sK6))) | ~p(s(bool,'F_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f123])).
fof(f123,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | p(s(bool,'F_0'))) & (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | ~p(s(bool,'F_0'))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <~> p(s(bool,'F_0')))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.failwith_2'(s(X0,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12] : (s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.infer.failwith_2'(s(X6,X9),s(X8,X10))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X11))),s(X8,X12))) <=> p(s(bool,'F_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12] : (s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.infer.failwith_2'(s(X6,X9),s(X8,X10))) = s('type.pair.prod'('type.infer.exc'(X7,X6),X8),'const.pair.,_2'(s('type.infer.exc'(X7,X6),'const.infer.Success_1'(s(X7,X11))),s(X8,X12))) <=> p(s(bool,'F_0')))),
  file('thm.inferProps.success_eqns|split|7','thm.inferProps.success_eqns|split|7')).
fof(f2087,plain,(
  $false | ($spl0 | $spl6)),
  inference(equality_resolution,[],[f655])).
fof(f655,plain,(
  ( ! [X6,X5] : (s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,sK3),s(sK2,sK4))) != s('type.pair.prod'('type.infer.exc'(sK1,sK0),sK2),'const.infer.failwith_2'(s(sK0,X5),s(sK2,X6)))) ) | ($spl0 | $spl6)),
  inference(superposition,[],[f242,f237])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 49
% Passive clauses: 340
% Generated clauses: 1906
% Final active clauses: 43
% Final passive clauses: 252
% Input formulas: 44
% Initial clauses: 79
% 
% Duplicate literals: 84
% Trivial inequalities: 9
% Fw subsumption resolutions: 52
% Fw demodulations: 96
% Bw demodulations: 4
% 
% Simple tautologies: 33
% Equational tautologies: 16
% Forward subsumptions: 1276
% 
% Binary resolution: 8
% Forward superposition: 1053
% Backward superposition: 403
% Self superposition: 70
% Equality factoring: 30
% Equality resolution: 3
% 
% Split clauses: 24
% Split components: 53
% SAT solver clauses: 37
% SAT solver unit clauses: 1
% SAT solver binary clauses: 13
% SAT solver learnt clauses: 1
% 
% Sat splits: 24
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 36
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 3198
% Time elapsed: 0.095 s
% ------------------------------
% ------------------------------
% Success in time 0.13 s
