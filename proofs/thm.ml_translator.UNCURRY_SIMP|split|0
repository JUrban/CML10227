Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f228,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f227])).
fof(f227,plain,(
  s(sK2,'const.pair.UNCURRY_2'(s(fun(sK0,fun(sK1,sK2)),sK3),s('type.pair.prod'(sK0,sK1),sK4))) != s(sK2,'const.pair.UNCURRY_2'(s(fun(sK0,fun(sK1,sK2)),sK3),s('type.pair.prod'(sK0,sK1),sK4)))),
  inference(superposition,[],[f37,f42])).
fof(f42,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) = s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2,X3,X4] : s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) = s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) = s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8] : ! [X9,X5] : s(X8,'const.pair.UNCURRY_2'(s(fun(X6,fun(X7,X8)),X9),s('type.pair.prod'(X6,X7),X5))) = s(X8,'const.pair.pair_CASE_2'(s('type.pair.prod'(X6,X7),X5),s(fun(X6,fun(X7,X8)),X9)))),
  file('thm.ml_translator.UNCURRY_SIMP|split|0','thm.ml_translator.ml_translator_437_prove_ltb')).
fof(f37,plain,(
  s(sK2,'const.pair.UNCURRY_2'(s(fun(sK0,fun(sK1,sK2)),sK3),s('type.pair.prod'(sK0,sK1),sK4))) != s(sK2,'const.pair.pair_CASE_2'(s('type.pair.prod'(sK0,sK1),sK4),s(fun(sK0,fun(sK1,sK2)),sK3)))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  s(sK2,'const.pair.UNCURRY_2'(s(fun(sK0,fun(sK1,sK2)),sK3),s('type.pair.prod'(sK0,sK1),sK4))) != s(sK2,'const.pair.pair_CASE_2'(s('type.pair.prod'(sK0,sK1),sK4),s(fun(sK0,fun(sK1,sK2)),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2,X3,X4] : s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) != s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2,X3,X4] : s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) = s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1,X2] : ! [X3,X4] : s(X2,'const.pair.UNCURRY_2'(s(fun(X0,fun(X1,X2)),X3),s('type.pair.prod'(X0,X1),X4))) = s(X2,'const.pair.pair_CASE_2'(s('type.pair.prod'(X0,X1),X4),s(fun(X0,fun(X1,X2)),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X5] : s(X8,'const.pair.UNCURRY_2'(s(fun(X6,fun(X7,X8)),X9),s('type.pair.prod'(X6,X7),X5))) = s(X8,'const.pair.pair_CASE_2'(s('type.pair.prod'(X6,X7),X5),s(fun(X6,fun(X7,X8)),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X5] : s(X8,'const.pair.UNCURRY_2'(s(fun(X6,fun(X7,X8)),X9),s('type.pair.prod'(X6,X7),X5))) = s(X8,'const.pair.pair_CASE_2'(s('type.pair.prod'(X6,X7),X5),s(fun(X6,fun(X7,X8)),X9)))),
  file('thm.ml_translator.UNCURRY_SIMP|split|0','thm.ml_translator.UNCURRY_SIMP|split|0')).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 11
% Passive clauses: 26
% Generated clauses: 165
% Final active clauses: 9
% Final passive clauses: 11
% Input formulas: 12
% Initial clauses: 12
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% 
% Simple tautologies: 16
% Equational tautologies: 14
% Forward subsumptions: 67
% 
% Binary resolution: 4
% Forward superposition: 31
% Backward superposition: 38
% Self superposition: 26
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.005 s
