Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.ml_translator
% (73445)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 118
% Passive clauses: 1562
% Generated clauses: 13073
% Final active clauses: 100
% Final passive clauses: 1219
% Input formulas: 28
% Initial clauses: 54
% 
% Duplicate literals: 559
% Trivial inequalities: 193
% Fw subsumption resolutions: 1929
% Fw demodulations: 2056
% Bw demodulations: 16
% 
% Simple tautologies: 266
% Equational tautologies: 39
% Forward subsumptions: 6154
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 489
% Factoring: 6
% Forward superposition: 4717
% Backward superposition: 3766
% Self superposition: 129
% Equality factoring: 84
% Equality resolution: 20
% 
% Split clauses: 179
% Split components: 370
% SAT solver clauses: 520
% SAT solver unit clauses: 16
% SAT solver binary clauses: 120
% 
% Sat splits: 179
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 516
% TWLsolver calls for satisfiability: 119
% 
% Memory used [KB]: 7419
% Time elapsed: 0.620 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ml_translator
% (73460)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 149
% Passive clauses: 676
% Generated clauses: 23705
% Final active clauses: 130
% Final passive clauses: 469
% Input formulas: 28
% Initial clauses: 54
% 
% Duplicate literals: 1029
% Trivial inequalities: 264
% Fw subsumption resolutions: 3256
% Fw demodulations: 3132
% Bw demodulations: 74
% Condensations: 2278
% Global subsumptions: 9
% 
% Simple tautologies: 387
% Equational tautologies: 53
% Forward subsumptions: 11363
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 301
% Factoring: 2
% Forward superposition: 6568
% Backward superposition: 5654
% Self superposition: 218
% Equality factoring: 120
% Equality resolution: 29
% 
% Split clauses: 83
% Split components: 168
% SAT solver clauses: 1344
% SAT solver unit clauses: 67
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 18
% 
% Sat splits: 83
% 
% TWLsolver clauses: 1308
% TWLsolver calls for satisfiability: 293
% 
% Memory used [KB]: 15223
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f1610,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f99,f158,f156,f154,f98,f157,f97,f155,f153,f1139,f1142,f1322,f1602,f1604])).
fof(f1604,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f1580,f160])).
fof(f160,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f159,f111])).
fof(f111,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.bool.EQ_CLAUSES|split|0')).
fof(f159,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f103,f100])).
fof(f100,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1',aHL_TRUTH)).
fof(f103,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f18])).
fof(f18,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.bool.NOT_CLAUSES|split|2')).
fof(f1580,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl2)),
  inference(superposition,[],[f1174,f1462])).
fof(f1462,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),X0))))),s(fun(sK0,bool),sK3)))) ) | $spl2),
  inference(superposition,[],[f1442,f140])).
fof(f140,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))) = s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X14] : ! [X12,X15] : s(fun(X14,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X15),s('type.list.list'(X14),X12))))) = s(fun(X14,bool),'const.pred_set.INSERT_2'(s(X14,X15),s(fun(X14,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X14),X12)))))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.list.LIST_TO_SET|split|1')).
fof(f1442,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.pred_set.INSERT_2'(s(sK0,sK2),s(fun(sK0,bool),X0))),s(fun(sK0,bool),sK3)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1327,f116])).
fof(f116,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f1327,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.pred_set.INSERT_2'(s(sK0,sK2),s(fun(sK0,bool),X0))),s(fun(sK0,bool),sK3))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f156,f144])).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6] : ! [X8,X9,X12] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.pred_set.INSERT_2'(s(X6,X8),s(fun(X6,bool),X9))),s(fun(X6,bool),X12)))) <=> (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X9),s(fun(X6,bool),X12)))) & ~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X12))))))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.pred_set.DISJOINT_INSERT')).
fof(f1174,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | $spl0),
  inference(unit_resulting_resolution,[],[f153,f112])).
fof(f112,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f77])).
fof(f1602,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f1575,f160])).
fof(f1575,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl2)),
  inference(superposition,[],[f1462,f1174])).
fof(f1322,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f1321,f1268])).
fof(f1268,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f1165,f116])).
fof(f1165,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))) ) | $spl5),
  inference(forward_demodulation,[],[f1148,f140])).
fof(f1148,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.pred_set.INSERT_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f158,f143])).
fof(f143,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f95])).
fof(f1321,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | $spl0),
  inference(subsumption_resolution,[],[f1294,f100])).
fof(f1294,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | $spl0),
  inference(superposition,[],[f115,f1174])).
fof(f115,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f79])).
fof(f1142,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1141,f159])).
fof(f1141,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f1140,f179])).
fof(f179,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3))) | $spl3),
  inference(unit_resulting_resolution,[],[f155,f116])).
fof(f1140,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f1128,f159])).
fof(f1128,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | ($spl1 | $spl4)),
  inference(superposition,[],[f1121,f190])).
fof(f190,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | $spl1),
  inference(unit_resulting_resolution,[],[f154,f116])).
fof(f1121,plain,(
  ( ! [X0] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),sK3))))) ) | $spl4),
  inference(forward_demodulation,[],[f1120,f140])).
fof(f1120,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.pred_set.INSERT_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1096,f100])).
fof(f1096,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(sK0,X0),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.pred_set.INSERT_2'(s(sK0,X0),s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))) ) | $spl4),
  inference(superposition,[],[f145,f164])).
fof(f164,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3))) | $spl4),
  inference(unit_resulting_resolution,[],[f157,f112])).
fof(f145,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f95])).
fof(f1139,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1138,f159])).
fof(f1138,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f1137,f179])).
fof(f1137,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | ($spl1 | $spl4)),
  inference(condensation,[],[f1136])).
fof(f1136,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3))))) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f1127,f111])).
fof(f1127,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1121,f334])).
fof(f334,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | s(bool,'T_0') = s(bool,X5)) ) | $spl1),
  inference(subsumption_resolution,[],[f329,f159])).
fof(f329,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))) | s(bool,'T_0') = s(bool,X5)) ) | $spl1),
  inference(superposition,[],[f252,f190])).
fof(f252,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f242,f159])).
fof(f242,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f146,f109])).
fof(f109,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1',aHL_BOOL_CASES)).
fof(f146,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.bool.IMP_ANTISYM_AX')).
fof(f153,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) | $spl0),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f155,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | $spl3),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f97,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) | (~p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f73])).
fof(f73,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) | (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) | p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) | (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3)))))) & (~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) | (p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3)))))))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) <~> (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3))))))),
  inference(ennf_transformation,[],[f31])).
fof(f31,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) <=> (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ~! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))))),s(fun(X0,bool),X3)))) <=> (~p(s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X3)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7))))),s(fun(X6,bool),X9)))) <=> (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X9)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7))),s(fun(X6,bool),X9))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7))))),s(fun(X6,bool),X9)))) <=> (~p(s(bool,'const.bool.IN_2'(s(X6,X8),s(fun(X6,bool),X9)))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X6),X7))),s(fun(X6,bool),X9))))))),
  file('thm.ml_translator.DISJOINT_set_SIMP|split|1','thm.ml_translator.DISJOINT_set_SIMP|split|1')).
fof(f157,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) | $spl4),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f98,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))),
  inference(cnf_transformation,[],[f74])).
fof(f154,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) | $spl1),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f156,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | $spl2),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f158,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) | $spl5),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f99,plain,(
  ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),sK1))),s(fun(sK0,bool),sK3)))) | p(s(bool,'const.bool.IN_2'(s(sK0,sK2),s(fun(sK0,bool),sK3)))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))))),s(fun(sK0,bool),sK3))))),
  inference(cnf_transformation,[],[f74])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 51
% Passive clauses: 89
% Generated clauses: 1503
% Final active clauses: 28
% Final passive clauses: 28
% Input formulas: 28
% Initial clauses: 54
% 
% Duplicate literals: 97
% Trivial inequalities: 29
% Fw subsumption resolutions: 90
% Fw demodulations: 166
% Bw demodulations: 12
% Condensations: 124
% 
% Simple tautologies: 51
% Equational tautologies: 63
% Forward subsumptions: 786
% 
% Unit resulting resolution: 176
% Factoring: 1
% Forward superposition: 321
% Backward superposition: 360
% Self superposition: 28
% Equality factoring: 30
% Equality resolution: 2
% 
% Split clauses: 3
% Split components: 7
% SAT solver clauses: 102
% SAT solver unit clauses: 11
% SAT solver binary clauses: 46
% 
% Sat splits: 3
% Sat splitting refutations: 5
% 
% Memory used [KB]: 1535
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 1.4 s
