Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ImplicitQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ImplicitQueue
% SZS output start Proof for thm.ImplicitQueue
fof(f2659,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2658,f135,f208,f206,f2619,f134,f207,f205])).
fof(f205,plain,(
  s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) = s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) | $spl0),
  inference(cnf_transformation,[],[f205_D])).
fof(f205_D,plain,(
  s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) = s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f207,plain,(
  s(sK0,sK1) = s(sK0,sK2) | $spl2),
  inference(cnf_transformation,[],[f207_D])).
fof(f207_D,plain,(
  s(sK0,sK1) = s(sK0,sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f134,plain,(
  s(sK0,sK1) = s(sK0,sK2) | s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) = s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2)))),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  (s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) = s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) | s(sK0,sK1) = s(sK0,sK2)) & (s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) != s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) | s(sK0,sK1) != s(sK0,sK2))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f112])).
fof(f112,plain,(
  ? [X0,X1,X2] : ((s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X1))) = s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X1))) != s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X2))) | s(X0,X1) != s(X0,X2)))),
  inference(nnf_transformation,[],[f96])).
fof(f96,plain,(
  ? [X0,X1,X2] : (s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X1))) = s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X2))) <~> s(X0,X1) = s(X0,X2))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : (s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X1))) = s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X1))) = s('type.ImplicitQueue.times'(X0),'const.ImplicitQueue.Once_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.ImplicitQueue.times'(X6),'const.ImplicitQueue.Once_1'(s(X6,X7))) = s('type.ImplicitQueue.times'(X6),'const.ImplicitQueue.Once_1'(s(X6,X8))) <=> s(X6,X7) = s(X6,X8))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.ImplicitQueue.times'(X6),'const.ImplicitQueue.Once_1'(s(X6,X7))) = s('type.ImplicitQueue.times'(X6),'const.ImplicitQueue.Once_1'(s(X6,X8))) <=> s(X6,X7) = s(X6,X8))),
  file('thm.ImplicitQueue.times_|49||49||split|0','thm.ImplicitQueue.times_|49||49||split|0')).
fof(f2619,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2618,f208])).
fof(f2618,plain,(
  s(sK0,sK1) = s(sK0,sK2) | $spl0),
  inference(forward_demodulation,[],[f2548,f163])).
fof(f163,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X18] : ! [X20] : s(X18,X20) = s(X18,happ(s(fun(X18,X18),'_i_0_0'),s(X18,X20)))),
  file('thm.ImplicitQueue.times_|49||49||split|0','_i0_ax')).
fof(f2548,plain,(
  s(sK0,sK2) = s(sK0,happ(s(fun(sK0,sK0),'_i_0_0'),s(sK0,sK1))) | $spl0),
  inference(superposition,[],[f1536,f163])).
fof(f1536,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun(sK0,X0),X1),s(sK0,sK1))) = s(X0,happ(s(fun(sK0,X0),X1),s(sK0,sK2)))) ) | $spl0),
  inference(forward_demodulation,[],[f1482,f185])).
fof(f185,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.ImplicitQueue.times_CASE_3'(s('type.ImplicitQueue.times'(X1),'const.ImplicitQueue.Once_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X4)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.ImplicitQueue.times_CASE_3'(s('type.ImplicitQueue.times'(X1),'const.ImplicitQueue.Once_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X4)))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X3),s(X1,X2))) = s(X0,'const.ImplicitQueue.times_CASE_3'(s('type.ImplicitQueue.times'(X1),'const.ImplicitQueue.Once_1'(s(X1,X2))),s(fun(X1,X0),X3),s(fun('type.ImplicitQueue.times'(X1),fun('type.ImplicitQueue.times'(X1),X0)),X4)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X6] : ! [X7,X11,X12] : s(X10,happ(s(fun(X6,X10),X11),s(X6,X7))) = s(X10,'const.ImplicitQueue.times_CASE_3'(s('type.ImplicitQueue.times'(X6),'const.ImplicitQueue.Once_1'(s(X6,X7))),s(fun(X6,X10),X11),s(fun('type.ImplicitQueue.times'(X6),fun('type.ImplicitQueue.times'(X6),X10)),X12)))),
  file('thm.ImplicitQueue.times_|49||49||split|0','thm.ImplicitQueue.times_case_def|split|0')).
fof(f1482,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun(sK0,X0),X1),s(sK0,sK2))) = s(X0,'const.ImplicitQueue.times_CASE_3'(s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))),s(fun(sK0,X0),X1),s(fun('type.ImplicitQueue.times'(sK0),fun('type.ImplicitQueue.times'(sK0),X0)),X2)))) ) | $spl0),
  inference(superposition,[],[f185,f205])).
fof(f206,plain,(
  s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) != s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) | $spl1),
  inference(cnf_transformation,[],[f206_D])).
fof(f206_D,plain,(
  s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) != s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f208,plain,(
  s(sK0,sK1) != s(sK0,sK2) | $spl3),
  inference(cnf_transformation,[],[f208_D])).
fof(f208_D,plain,(
  s(sK0,sK1) != s(sK0,sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f135,plain,(
  s(sK0,sK1) != s(sK0,sK2) | s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) != s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK2)))),
  inference(cnf_transformation,[],[f113])).
fof(f2658,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f2657])).
fof(f2657,plain,(
  s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) != s('type.ImplicitQueue.times'(sK0),'const.ImplicitQueue.Once_1'(s(sK0,sK1))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f206,f207])).
% SZS output end Proof for thm.ImplicitQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 581
% Generated clauses: 2453
% Final active clauses: 42
% Final passive clauses: 470
% Input formulas: 37
% Initial clauses: 71
% 
% Duplicate literals: 157
% Trivial inequalities: 48
% Fw subsumption resolutions: 199
% Fw demodulations: 183
% Bw demodulations: 1
% 
% Simple tautologies: 112
% Equational tautologies: 32
% Forward subsumptions: 1127
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 51
% Factoring: 1
% Forward superposition: 693
% Backward superposition: 899
% Self superposition: 72
% Equality factoring: 54
% Equality resolution: 8
% 
% Split clauses: 26
% Split components: 55
% SAT solver clauses: 45
% SAT solver unit clauses: 6
% SAT solver binary clauses: 31
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 26
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 43
% TWLsolver calls for satisfiability: 17
% 
% Memory used [KB]: 2430
% Time elapsed: 0.070 s
% ------------------------------
% ------------------------------
% Success in time 0.072 s
