Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f3855,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3854,f33,f100,f236,f35,f2251,f2254,f39,f66,f2208,f36,f64,f3454,f37,f62,f40,f38,f60,f58,f56,f42,f41,f74,f3503,f3506,f44,f68,f3647,f43,f70,f72,f34,f65,f59])).
fof(f59,plain,(
  ~sP0 | $spl5),
  inference(cnf_transformation,[],[f59_D])).
fof(f59_D,plain,(
  ~sP0 <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f65,plain,(
  ( ! [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))) ) | $spl10),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  ( ! [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f34,plain,(
  ( ! [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | ~sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  (~sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & ((p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1))))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2))))))) | sP0)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f25])).
fof(f25,plain,(
  (~sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & (? [X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) | ? [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))) | sP0)),
  inference(rectify,[],[f24])).
fof(f24,plain,(
  (~sP0 | (! [X1] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) & ! [X0] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))))) & (? [X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) | ? [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))) | sP0)),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  (~sP0 | (! [X1] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) & ! [X0] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))))) & ((? [X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) | ? [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))))))) | sP0)),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  sP0 <=> (! [X1] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) & ! [X0] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f72,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK3)))) | $spl18),
  inference(cnf_transformation,[],[f72_D])).
fof(f72_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK3)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f70,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))))) | $spl17),
  inference(cnf_transformation,[],[f70_D])).
fof(f70_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f43,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK3)))) | ~sP0),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  (sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & (~sP0 | (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK3)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3))))))) | (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f29])).
fof(f29,plain,(
  (sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & (~sP0 | ? [X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) | ? [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0))))))))),
  inference(rectify,[],[f28])).
fof(f28,plain,(
  (sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & (~sP0 | ? [X3] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) | ? [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  (sP0 | (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))) & (~sP0 | (? [X3] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) & ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) | ? [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) & ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))))))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  sP0 <~> (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))),
  inference(definition_folding,[],[f19,f21])).
fof(f19,plain,(
  (! [X1] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) & ! [X0] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))))))) <~> (! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2))))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~((! [X1] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X1)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X1))))))) & ! [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X0)))))))) <=> (! [X3] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3))))))) & ! [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~((! [X6] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X6))))))) & ! [X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))))))) <=> (! [X6] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X6))))))) & ! [X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  (! [X6] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X6))))))) & ! [X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))))))) <=> (! [X6] : (p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X6)))) => p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X6))))))) & ! [X7] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7)))) => p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X7))))))))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb','thm.inferProps.inferProps_|49|33_prove_ltb')).
fof(f3647,plain,(
  $false | ($spl10 | $spl17 | $spl106)),
  inference(subsumption_resolution,[],[f3646,f45])).
fof(f45,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb',aHL_TRUTH)).
fof(f3646,plain,(
  ~p(s(bool,'T_0')) | ($spl10 | $spl17 | $spl106)),
  inference(forward_demodulation,[],[f3612,f3506])).
fof(f3612,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) | ($spl10 | $spl17)),
  inference(resolution,[],[f70,f65])).
fof(f68,plain,(
  ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3)))))) | $spl15),
  inference(cnf_transformation,[],[f68_D])).
fof(f68_D,plain,(
  ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3)))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f44,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))))) | ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3)))))) | ~sP0),
  inference(cnf_transformation,[],[f30])).
fof(f3506,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4))) | $spl106),
  inference(cnf_transformation,[],[f3506_D])).
fof(f3506_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4))) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3503,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4))) | $spl20),
  inference(subsumption_resolution,[],[f3473,f47])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb',aHL_FALSITY)).
fof(f3473,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4))) | $spl20),
  inference(superposition,[],[f74,f48])).
fof(f48,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb',aHL_BOOL_CASES)).
fof(f74,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) | $spl20),
  inference(cnf_transformation,[],[f74_D])).
fof(f74_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f41,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK3)))) | ~sP0),
  inference(cnf_transformation,[],[f30])).
fof(f42,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK4)))) | ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3)))))) | ~sP0),
  inference(cnf_transformation,[],[f30])).
fof(f56,plain,(
  ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f58,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))))) | $spl3),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f60,plain,(
  sP0 | $spl4),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  sP0 <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f38,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))))) | ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1))))))),
  inference(cnf_transformation,[],[f26])).
fof(f40,plain,(
  ( ! [X2] : (p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))))) | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),X2)))) | sP0) )),
  inference(cnf_transformation,[],[f30])).
fof(f62,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f37,plain,(
  sP0 | ~p(s(bool,'const.list.EVERY_2'(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f26])).
fof(f3454,plain,(
  $false | ($spl3 | $spl10 | $spl74)),
  inference(subsumption_resolution,[],[f3453,f45])).
fof(f3453,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl10 | $spl74)),
  inference(forward_demodulation,[],[f3419,f2254])).
fof(f3419,plain,(
  ~p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) | ($spl3 | $spl10)),
  inference(resolution,[],[f65,f58])).
fof(f64,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) | $spl8),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f36,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) | ~p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1))))))),
  inference(cnf_transformation,[],[f26])).
fof(f2208,plain,(
  $false | ($spl1 | $spl12 | $spl26)),
  inference(subsumption_resolution,[],[f2207,f290])).
fof(f290,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',sK1)))))) | $spl1),
  inference(forward_demodulation,[],[f289,f51])).
fof(f51,plain,(
  ( ! [X0,X1] : (s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X0),s('type.ast.t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X0))),s('type.ast.t',X1)))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X0),s('type.ast.t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X0))),s('type.ast.t',X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10,X11] : s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X10),s('type.ast.t',X11))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),X10))),s('type.ast.t',X11)))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb','ARITY_1_2_const.infer.infer_type_subst')).
fof(f289,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK1)))))) | $spl1),
  inference(forward_demodulation,[],[f56,f53])).
fof(f53,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),X1),s('type.infer_t.infer_t',X2))) = s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num',X0),s(fun('type.num.num',bool),X1))),s('type.infer_t.infer_t',X2)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : s(bool,'const.infer.check_t_3'(s('type.num.num',X0),s(fun('type.num.num',bool),X1),s('type.infer_t.infer_t',X2))) = s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num',X0),s(fun('type.num.num',bool),X1))),s('type.infer_t.infer_t',X2)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X11,X12] : s(bool,'const.infer.check_t_3'(s('type.num.num',X10),s(fun('type.num.num',bool),X11),s('type.infer_t.infer_t',X12))) = s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num',X10),s(fun('type.num.num',bool),X11))),s('type.infer_t.infer_t',X12)))),
  file('thm.inferProps.inferProps_|49|33_prove_ltb','ARITY_2_3_const.infer.check_t')).
fof(f2207,plain,(
  p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',sK1)))))) | ($spl12 | $spl26)),
  inference(subsumption_resolution,[],[f2182,f45])).
fof(f2182,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',sK1)))))) | ($spl12 | $spl26)),
  inference(superposition,[],[f899,f236])).
fof(f899,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',X3))))))) ) | $spl12),
  inference(forward_demodulation,[],[f898,f51])).
fof(f898,plain,(
  ( ! [X3] : (p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3))))) ) | $spl12),
  inference(forward_demodulation,[],[f66,f53])).
fof(f66,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3))))) ) | $spl12),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f39,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | sP0) )),
  inference(cnf_transformation,[],[f30])).
fof(f2254,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2))) | $spl74),
  inference(cnf_transformation,[],[f2254_D])).
fof(f2254_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2251,plain,(
  s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2))) | $spl8),
  inference(subsumption_resolution,[],[f2227,f47])).
fof(f2227,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2))) | $spl8),
  inference(superposition,[],[f64,f48])).
fof(f35,plain,(
  sP0 | p(s(bool,'const.list.EVERY_2'(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.ast.t'),sK2)))) | p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))))),
  inference(cnf_transformation,[],[f26])).
fof(f236,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))) | $spl26),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f100,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f99,f47])).
fof(f99,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',sK1))) | $spl6),
  inference(superposition,[],[f62,f48])).
fof(f33,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.infer_t.infer_t',bool),'const.infer.check_t_2'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'))),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',X3)))))) | ~p(s(bool,happ(s(fun('type.ast.t',bool),'const.typeSystem.check_freevars_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.ast.t',X3)))) | ~sP0) )),
  inference(cnf_transformation,[],[f26])).
fof(f3854,plain,(
  $false | ($spl12 | $spl15 | $spl18)),
  inference(subsumption_resolution,[],[f3663,f3662])).
fof(f3662,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',sK3)))))) | $spl15),
  inference(forward_demodulation,[],[f3661,f51])).
fof(f3661,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.infer.infer_type_subst_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'))),s('type.ast.t',sK3)))))) | $spl15),
  inference(forward_demodulation,[],[f68,f53])).
fof(f3663,plain,(
  p(s(bool,'const.infer.check_t_3'(s('type.num.num','const.num.|48|_0'),s(fun('type.num.num',bool),'const.pred_set.EMPTY_0'),s('type.infer_t.infer_t','const.infer.infer_type_subst_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.infer_t.infer_t')),'const.list.NIL_0'),s('type.ast.t',sK3)))))) | ($spl12 | $spl18)),
  inference(resolution,[],[f72,f899])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 42
% Passive clauses: 759
% Generated clauses: 3685
% Final active clauses: 32
% Final passive clauses: 646
% Input formulas: 9
% Initial clauses: 21
% 
% Duplicate literals: 362
% Trivial inequalities: 41
% Fw subsumption resolutions: 354
% Fw demodulations: 16
% Bw demodulations: 4
% 
% Simple tautologies: 116
% Equational tautologies: 80
% Forward subsumptions: 1372
% 
% Binary resolution: 49
% Forward superposition: 1369
% Backward superposition: 985
% Self superposition: 222
% Equality factoring: 202
% Equality resolution: 4
% 
% Split clauses: 231
% Split components: 472
% SAT solver clauses: 631
% SAT solver unit clauses: 228
% SAT solver binary clauses: 199
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 27
% 
% Sat splits: 231
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 615
% TWLsolver calls for satisfiability: 38
% 
% Memory used [KB]: 2046
% Time elapsed: 0.145 s
% ------------------------------
% ------------------------------
% Success in time 0.16 s
