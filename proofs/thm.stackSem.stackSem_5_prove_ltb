Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f4584,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4583,f224,f407,f405,f403,f401,f4581,f4580,f4582])).
fof(f4582,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f403,f228])).
fof(f228,plain,(
  ( ! [X2,X3] : (s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3))),s('type.list.list'(sK12),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),sK14))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,sK16),s('type.list.list'(bool),sK15))),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),sK17))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18),s('type.list.list'(sK12),sK19))))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK20))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK21),s('type.list.list'(sK12),sK22)))))) & ! [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),X10))) & ! [X7,X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X7))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X8),s('type.list.list'(sK12),X9))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X4))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X5),s('type.list.list'(sK12),X6))))) & ! [X2,X3] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3))),s('type.list.list'(sK12),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X19] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X19))) | ? [X17,X18] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X18),s('type.list.list'(bool),X17))),s('type.list.list'(X0),'const.list.NIL_0'))) | ? [X14,X15,X16] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X14))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),X16))))) | ? [X11,X12,X13] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X13)))))) & ! [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X10))) & ! [X7,X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X7))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X9))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))) & ! [X2,X3] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X2),s('type.list.list'(bool),X3))),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X10))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X9),s('type.list.list'(bool),X8))),s('type.list.list'(X0),'const.list.NIL_0'))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X5))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))) | ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) & ! [X19] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X19))) & ! [X16,X17,X18] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X16))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X18))))) & ! [X13,X14,X15] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X13))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X15))))) & ! [X11,X12] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X11),s('type.list.list'(bool),X12))),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X10))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X9),s('type.list.list'(bool),X8))),s('type.list.list'(X0),'const.list.NIL_0'))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X5))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))) | ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) & (! [X19] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X19))) & ! [X16,X17,X18] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X16))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X18))))) & ! [X13,X14,X15] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X13))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X15))))) & ! [X11,X12] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X11),s('type.list.list'(bool),X12))),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X10))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X9),s('type.list.list'(bool),X8))),s('type.list.list'(X0),'const.list.NIL_0'))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X5))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))) | ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) => (? [X19] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X19))) | ? [X16,X17,X18] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X16))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X18))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X13))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X15))))) | ? [X11,X12] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X11),s('type.list.list'(bool),X12))),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X10))) | ? [X8,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X9),s('type.list.list'(bool),X8))),s('type.list.list'(X0),'const.list.NIL_0'))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X5))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X7))))) | ? [X2,X3,X4] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))) => (? [X19] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X0),X19))) | ? [X16,X17,X18] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X16))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),X18))))) | ? [X13,X14,X15] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X13))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X15))))) | ? [X11,X12] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),X1) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X11),s('type.list.list'(bool),X12))),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X6),X8))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X10),s('type.list.list'(bool),X9))),s('type.list.list'(X6),'const.list.NIL_0'))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8)))))) => (? [X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X6),X8))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X10,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X10),s('type.list.list'(bool),X9))),s('type.list.list'(X6),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X6),X8))) | ? [X9,X10] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X10),s('type.list.list'(bool),X9))),s('type.list.list'(X6),'const.list.NIL_0'))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8)))))) => (? [X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(X6),X8))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X11,X12,X8] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X11))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),X8))))) | ? [X10,X9] : s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),X7) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X10),s('type.list.list'(bool),X9))),s('type.list.list'(X6),'const.list.NIL_0')))))),
  file('thm.stackSem.stackSem_5_prove_ltb','thm.stackSem.stackSem_5_prove_ltb')).
fof(f4580,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f407,f226])).
fof(f226,plain,(
  ( ! [X8,X7,X9] : (s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X7))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X8),s('type.list.list'(sK12),X9)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4581,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f401,f225])).
fof(f225,plain,(
  ( ! [X10] : (s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),X10)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f401,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),sK14))) | $spl0),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),sK14))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f403,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,sK16),s('type.list.list'(bool),sK15))),s('type.list.list'(sK12),'const.list.NIL_0'))) | $spl2),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,sK16),s('type.list.list'(bool),sK15))),s('type.list.list'(sK12),'const.list.NIL_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f405,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),sK17))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18),s('type.list.list'(sK12),sK19))))) | $spl4),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),sK17))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18),s('type.list.list'(sK12),sK19))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f407,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK20))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK21),s('type.list.list'(sK12),sK22))))) | $spl6),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK20))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK21),s('type.list.list'(sK12),sK22))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f224,plain,(
  s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),sK20))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK21),s('type.list.list'(sK12),sK22))))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),sK17))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18),s('type.list.list'(sK12),sK19))))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,sK16),s('type.list.list'(bool),sK15))),s('type.list.list'(sK12),'const.list.NIL_0'))) | s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) = s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.NIL_0'),s('type.list.list'(sK12),sK14)))),
  inference(cnf_transformation,[],[f139])).
fof(f4583,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f405,f227])).
fof(f227,plain,(
  ( ! [X6,X4,X5] : (s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),sK13) != s('type.pair.prod'('type.list.list'(bool),'type.list.list'(sK12)),'const.pair.,_2'(s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X4))),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X5),s('type.list.list'(sK12),X6)))))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 360
% Passive clauses: 1450
% Generated clauses: 4353
% Final active clauses: 360
% Final passive clauses: 928
% Input formulas: 37
% Initial clauses: 172
% 
% Duplicate literals: 153
% Trivial inequalities: 17
% Fw subsumption resolutions: 294
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2259
% 
% Binary resolution: 2693
% Factoring: 767
% Forward superposition: 142
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 96
% Split components: 195
% SAT solver clauses: 177
% SAT solver unit clauses: 10
% SAT solver binary clauses: 32
% SAT solver learnt clauses: 1
% 
% Sat splits: 96
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 176
% TWLsolver calls for satisfiability: 148
% 
% Memory used [KB]: 2302
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 0.22 s
