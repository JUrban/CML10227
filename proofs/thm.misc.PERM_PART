Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f1832,plain,(
  $false),
  inference(subsumption_resolution,[],[f1831,f79])).
fof(f79,plain,(
  ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))))))),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.pair.,_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))) = s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.sorting.PART_4'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))) & ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f50])).
fof(f50,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) & ~p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X12))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PART_4'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X12)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X12))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PART_4'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X12)))))))),
  file('thm.misc.PERM_PART','thm.misc.PERM_PART')).
fof(f1831,plain,(
  p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))))))),
  inference(equality_resolution,[],[f752])).
fof(f752,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.pair.,_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))) != s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.pair.,_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X1))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))))),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),X1))))))) )),
  inference(superposition,[],[f113,f78])).
fof(f78,plain,(
  s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.pair.,_2'(s('type.list.list'(sK0),sK5),s('type.list.list'(sK0),sK6))) = s('type.pair.prod'('type.list.list'(sK0),'type.list.list'(sK0)),'const.sorting.PART_4'(s(fun(sK0,bool),sK1),s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4)))),
  inference(cnf_transformation,[],[f59])).
fof(f113,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) != s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) | p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.pair.,_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) = s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X0)),'const.sorting.PART_4'(s(fun(X0,bool),X1),s('type.list.list'(X0),X2),s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8,X13,X14,X9,X10] : (s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.pair.,_2'(s('type.list.list'(X6),X13),s('type.list.list'(X6),X14))) = s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X6)),'const.sorting.PART_4'(s(fun(X6,bool),X7),s('type.list.list'(X6),X8),s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) => p(s(bool,'const.sorting.PERM_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X13),s('type.list.list'(X6),X14)))))))),
  file('thm.misc.PERM_PART','thm.sorting.sorting_52_prove_ltb')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 308
% Generated clauses: 1663
% Final active clauses: 36
% Final passive clauses: 221
% Input formulas: 21
% Initial clauses: 42
% 
% Duplicate literals: 165
% Trivial inequalities: 26
% Fw subsumption resolutions: 204
% Fw demodulations: 21
% Bw demodulations: 1
% 
% Simple tautologies: 64
% Equational tautologies: 33
% Forward subsumptions: 732
% 
% Binary resolution: 64
% Factoring: 1
% Forward superposition: 441
% Backward superposition: 505
% Self superposition: 88
% Equality factoring: 64
% Equality resolution: 3
% 
% Split clauses: 92
% Split components: 186
% SAT solver clauses: 152
% SAT solver unit clauses: 2
% SAT solver binary clauses: 33
% 
% Sat splits: 92
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 152
% TWLsolver calls for satisfiability: 44
% 
% Memory used [KB]: 1535
% Time elapsed: 0.071 s
% ------------------------------
% ------------------------------
% Success in time 0.07 s
