Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSound
% SZS output start Proof for thm.typeSound
fof(f7293,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7290,f195,f346])).
fof(f346,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f346_D])).
fof(f346_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f195,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.typeSound.typeSound_38_prove_ltb',aHL_FALSITY)).
fof(f7290,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f7289,f346])).
fof(f7289,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f7256,f3613])).
fof(f3613,plain,(
  s(bool,'F_0') = s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16),s('type.typeSystem.tenv_val',sK15)))))),
  inference(resolution,[],[f188,f207])).
fof(f207,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.typeSound.typeSound_38_prove_ltb','thm.bool.EQ_CLAUSES|split|2')).
fof(f188,plain,(
  ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16),s('type.typeSystem.tenv_val',sK15))))))),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13),s('type.typeSystem.tenv_val',sK15)))) & ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16),s('type.typeSystem.tenv_val',sK15))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18])],[f79])).
fof(f79,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3)))) & ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3))))) & ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3))))) => p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7),s('type.typeSystem.tenv_val',X9))))) => p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10),s('type.typeSystem.tenv_val',X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7),s('type.typeSystem.tenv_val',X9))))) => p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10),s('type.typeSystem.tenv_val',X9)))))))),
  file('thm.typeSound.typeSound_38_prove_ltb','thm.typeSound.typeSound_38_prove_ltb')).
fof(f7256,plain,(
  p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16),s('type.typeSystem.tenv_val',sK15))))))),
  inference(resolution,[],[f4012,f186])).
fof(f186,plain,(
  p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.num.num',sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),sK16))))),
  inference(cnf_transformation,[],[f117])).
fof(f4012,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X2)))) | p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X2),s('type.typeSystem.tenv_val',sK15))))))) )),
  inference(resolution,[],[f336,f187])).
fof(f187,plain,(
  p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK12),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK13),s('type.typeSystem.tenv_val',sK15))))),
  inference(cnf_transformation,[],[f117])).
fof(f336,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3)))) | p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) | ~p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2))) | (p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3)))))) & (~p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) | ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3)))) | (p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2))))))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (((~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2)))) | (p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3)))))) & ((~p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) | ~p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3))))) | (p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2))))))),
  inference(nnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4),s('type.typeSystem.tenv_val',X3)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2)))) <=> (p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.num.num',X5),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X4)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X0),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X6),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X1),s('type.typeSystem.tenv_val',X3))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7,X8,X9,X10,X11,X12] : ((p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list_3'(s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10),s('type.typeSystem.tenv_val',X9)))))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8)))) <=> (p(s(bool,'const.typeSound.type_env2_5'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.num.num',X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.t')),X10)))) & p(s(bool,'const.typeSoundInvariants.type_env_4'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X6),s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7),s('type.typeSystem.tenv_val',X9))))))),
  file('thm.typeSound.typeSound_38_prove_ltb','thm.typeSound.typeSound_25_prove_ltb')).
% SZS output end Proof for thm.typeSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 432
% Passive clauses: 2126
% Generated clauses: 7048
% Final active clauses: 430
% Final passive clauses: 1500
% Input formulas: 32
% Initial clauses: 152
% 
% Duplicate literals: 225
% Trivial inequalities: 42
% Fw subsumption resolutions: 790
% Fw demodulations: 82
% Bw demodulations: 2
% 
% Simple tautologies: 151
% Equational tautologies: 38
% Forward subsumptions: 3386
% 
% Binary resolution: 3279
% Factoring: 889
% Forward superposition: 706
% Backward superposition: 735
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 12
% 
% Split clauses: 253
% Split components: 512
% SAT solver clauses: 410
% SAT solver unit clauses: 14
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 1
% 
% Sat splits: 253
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 409
% TWLsolver calls for satisfiability: 243
% 
% Memory used [KB]: 3454
% Time elapsed: 0.314 s
% ------------------------------
% ------------------------------
% Success in time 0.34 s
