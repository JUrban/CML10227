Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f9406,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f9405,f68,f98,f96,f9346,f67,f97,f95])).
fof(f95,plain,(
  s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f97,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl2),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f67,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) = s('type.num.num',sK1)) & (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) != s('type.num.num',sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f60])).
fof(f60,plain,(
  ? [X0,X1] : ((s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ? [X0,X1] : (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))) <~> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X0))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X6))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X6))) = s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.bvp_to_wordProps.tag_|49||49||split|1','thm.bvp_to_wordProps.tag_|49||49||split|1')).
fof(f9346,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f9345,f98])).
fof(f9345,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl0),
  inference(forward_demodulation,[],[f9306,f76])).
fof(f76,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X9] : ! [X6,X10] : s(X9,X6) = s(X9,'const.ind_type.FCONS_3'(s(X9,X6),s(fun('type.num.num',X9),X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.bvp_to_wordProps.tag_|49||49||split|1','thm.ind_type.FCONS|split|0')).
fof(f9306,plain,(
  ( ! [X2] : (s('type.num.num',sK1) = s('type.num.num','const.ind_type.FCONS_3'(s('type.num.num',sK0),s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3541,f76])).
fof(f3541,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.ind_type.FCONS_3'(s('type.num.num',sK0),s(fun('type.num.num','type.num.num'),X4),s('type.num.num',X5))) = s('type.num.num','const.ind_type.FCONS_3'(s('type.num.num',sK1),s(fun('type.num.num','type.num.num'),X4),s('type.num.num',X5)))) ) | $spl0),
  inference(forward_demodulation,[],[f3421,f81])).
fof(f81,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2,X3] : s(X0,'const.ind_type.FCONS_3'(s(X0,X1),s(fun('type.num.num',X0),X2),s('type.num.num',X3))) = s(X0,happ(s(fun('type.num.num',X0),happ(s(fun(fun('type.num.num',X0),fun('type.num.num',X0)),happ(s(fun(X0,fun(fun('type.num.num',X0),fun('type.num.num',X0))),'const.ind_type.FCONS_0'),s(X0,X1))),s(fun('type.num.num',X0),X2))),s('type.num.num',X3)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : ! [X8,X15,X16] : s(X9,'const.ind_type.FCONS_3'(s(X9,X8),s(fun('type.num.num',X9),X15),s('type.num.num',X16))) = s(X9,happ(s(fun('type.num.num',X9),happ(s(fun(fun('type.num.num',X9),fun('type.num.num',X9)),happ(s(fun(X9,fun(fun('type.num.num',X9),fun('type.num.num',X9))),'const.ind_type.FCONS_0'),s(X9,X8))),s(fun('type.num.num',X9),X15))),s('type.num.num',X16)))),
  file('thm.bvp_to_wordProps.tag_|49||49||split|1','ARITY_0_3_const.ind_type.FCONS')).
fof(f3421,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.ind_type.FCONS_3'(s('type.num.num',sK1),s(fun('type.num.num','type.num.num'),X4),s('type.num.num',X5))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),happ(s(fun(fun('type.num.num','type.num.num'),fun('type.num.num','type.num.num')),happ(s(fun('type.num.num',fun(fun('type.num.num','type.num.num'),fun('type.num.num','type.num.num'))),'const.ind_type.FCONS_0'),s('type.num.num',sK0))),s(fun('type.num.num','type.num.num'),X4))),s('type.num.num',X5)))) ) | $spl0),
  inference(superposition,[],[f81,f2856])).
fof(f2856,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK0))) = s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK1)))) ) | $spl0),
  inference(forward_demodulation,[],[f2688,f82])).
fof(f82,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.bvp_to_wordProps.tag_CASE_6'(s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))),s(fun('type.num.num',X0),X2),s(X0,X3),s(fun('type.num.num',X0),X4),s(fun(bool,X0),X5),s(X0,X6)))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.bvp_to_wordProps.tag_CASE_6'(s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))),s(fun('type.num.num',X0),X2),s(X0,X3),s(fun('type.num.num',X0),X4),s(fun(bool,X0),X5),s(X0,X6)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5,X6] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.bvp_to_wordProps.tag_CASE_6'(s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X1))),s(fun('type.num.num',X0),X2),s(X0,X3),s(fun('type.num.num',X0),X4),s(fun(bool,X0),X5),s(X0,X6)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : ! [X6,X10,X11,X12,X13,X14] : s(X9,happ(s(fun('type.num.num',X9),X12),s('type.num.num',X6))) = s(X9,'const.bvp_to_wordProps.tag_CASE_6'(s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',X6))),s(fun('type.num.num',X9),X10),s(X9,X11),s(fun('type.num.num',X9),X12),s(fun(bool,X9),X13),s(X9,X14)))),
  file('thm.bvp_to_wordProps.tag_|49||49||split|1','thm.bvp_to_wordProps.tag_case_def|split|2')).
fof(f2688,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',sK1))) = s(X0,'const.bvp_to_wordProps.tag_CASE_6'(s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))),s(fun('type.num.num',X0),X2),s(X0,X3),s(fun('type.num.num',X0),X1),s(fun(bool,X0),X4),s(X0,X5)))) ) | $spl0),
  inference(superposition,[],[f82,f95])).
fof(f96,plain,(
  s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f98,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl3),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f68,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f61])).
fof(f9405,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f9404])).
fof(f9404,plain,(
  s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) != s('type.bvp_to_wordProps.tag','const.bvp_to_wordProps.BytesTag_1'(s('type.num.num',sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f96,f97])).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 94
% Passive clauses: 1940
% Generated clauses: 9169
% Final active clauses: 79
% Final passive clauses: 1649
% Input formulas: 21
% Initial clauses: 28
% 
% Duplicate literals: 363
% Trivial inequalities: 180
% Fw subsumption resolutions: 1105
% Fw demodulations: 787
% Bw demodulations: 8
% 
% Simple tautologies: 177
% Equational tautologies: 46
% Forward subsumptions: 4217
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 201
% Factoring: 2
% Forward superposition: 3336
% Backward superposition: 2769
% Self superposition: 173
% Equality factoring: 116
% Equality resolution: 23
% 
% Split clauses: 204
% Split components: 409
% SAT solver clauses: 460
% SAT solver unit clauses: 76
% SAT solver binary clauses: 129
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 204
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 457
% TWLsolver calls for satisfiability: 115
% 
% Memory used [KB]: 8443
% Time elapsed: 0.339 s
% ------------------------------
% ------------------------------
% Success in time 0.35 s
