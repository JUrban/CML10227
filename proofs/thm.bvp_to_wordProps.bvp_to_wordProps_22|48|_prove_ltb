Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f3750,plain,(
  $false),
  inference(subsumption_resolution,[],[f3749,f188])).
fof(f188,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))))))),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))),s('type.num.num',sK12)))))))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f84])).
fof(f84,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))),s('type.num.num',X2)))))))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))),s('type.num.num',X2)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))),s('type.num.num',X2)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0'))),s('type.num.num',X8)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X6),'const.bool.the_value_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0'))),s('type.num.num',X8)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X6),'const.bool.the_value_0')))))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_22|48|_prove_ltb','thm.bvp_to_wordProps.bvp_to_wordProps_22|48|_prove_ltb')).
fof(f3749,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))))))),
  inference(forward_demodulation,[],[f3721,f196])).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X0),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X0),'const.bool.the_value_0')))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(X6),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(X6),'const.bool.the_value_0')))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_22|48|_prove_ltb','thm.words.dimword_def')).
fof(f3721,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))))))))),
  inference(resolution,[],[f260,f187])).
fof(f187,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK11),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(sK10),'const.bool.the_value_0'))),s('type.num.num',sK12))))))))),
  inference(cnf_transformation,[],[f124])).
fof(f260,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X7,X17,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X17)))))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X8)))))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_22|48|_prove_ltb','thm.bvp_to_wordProps.bvp_to_wordProps_2|49|8_prove_ltb')).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 283
% Passive clauses: 1190
% Generated clauses: 3556
% Final active clauses: 283
% Final passive clauses: 812
% Input formulas: 34
% Initial clauses: 145
% 
% Duplicate literals: 115
% Trivial inequalities: 13
% Fw subsumption resolutions: 231
% Fw demodulations: 1
% 
% Simple tautologies: 109
% Equational tautologies: 20
% Forward subsumptions: 1803
% 
% Binary resolution: 2220
% Factoring: 618
% Forward superposition: 109
% Backward superposition: 60
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 80
% Split components: 162
% SAT solver clauses: 145
% SAT solver unit clauses: 6
% SAT solver binary clauses: 31
% 
% Sat splits: 80
% 
% TWLsolver clauses: 145
% TWLsolver calls for satisfiability: 122
% 
% Memory used [KB]: 1918
% Time elapsed: 0.080 s
% ------------------------------
% ------------------------------
% Success in time 0.1 s
