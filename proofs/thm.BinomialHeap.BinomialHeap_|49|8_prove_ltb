Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.BinomialHeap
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.BinomialHeap
% SZS output start Proof for thm.BinomialHeap
fof(f4548,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4547,f217,f393,f391,f389,f218,f388,f4546])).
fof(f4546,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f393,f220])).
fof(f220,plain,(
  ( ! [X4,X2,X3] : (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(sK12,X3),s('type.list.list'('type.BinomialHeap.tree'(sK12)),X4)))))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) | s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),sK14),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK15))))) | s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',sK16),s(sK12,sK17),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK18)))))) & s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) & ! [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),X5),s('type.list.list'('type.BinomialHeap.tree'(sK12)),X6))))) & ! [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(sK12,X3),s('type.list.list'('type.BinomialHeap.tree'(sK12)),X4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18])],[f135])).
fof(f135,plain,(
  ? [X0,X1] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X10,X11] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X10),s('type.list.list'('type.BinomialHeap.tree'(X0)),X11))))) | ? [X7,X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X7),s(X0,X8),s('type.list.list'('type.BinomialHeap.tree'(X0)),X9)))))) & s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) & ! [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))))) & ! [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4))))))),
  inference(rectify,[],[f95])).
fof(f95,plain,(
  ? [X0,X1] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))))) | ? [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))))) & s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) & ! [X10,X11] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X10),s('type.list.list'('type.BinomialHeap.tree'(X0)),X11))))) & ! [X7,X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X7),s(X0,X8),s('type.list.list'('type.BinomialHeap.tree'(X0)),X9))))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ? [X0,X1] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))))) | ? [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))))) & (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) & ! [X10,X11] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X10),s('type.list.list'('type.BinomialHeap.tree'(X0)),X11))))) & ! [X7,X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X7),s(X0,X8),s('type.list.list'('type.BinomialHeap.tree'(X0)),X9)))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))))) | ? [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))))) => (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X10,X11] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X10),s('type.list.list'('type.BinomialHeap.tree'(X0)),X11))))) | ? [X7,X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X7),s(X0,X8),s('type.list.list'('type.BinomialHeap.tree'(X0)),X9)))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X5,X6] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X5),s('type.list.list'('type.BinomialHeap.tree'(X0)),X6))))) | ? [X2,X3,X4] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X2),s(X0,X3),s('type.list.list'('type.BinomialHeap.tree'(X0)),X4)))))) => (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.NIL_0'))) | ? [X10,X11] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X0)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X0),X10),s('type.list.list'('type.BinomialHeap.tree'(X0)),X11))))) | ? [X7,X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),X1) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X0)),'type.BinomialHeap.tree'(X0)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X0),'const.BinomialHeap.Node_3'(s('type.num.num',X7),s(X0,X8),s('type.list.list'('type.BinomialHeap.tree'(X0)),X9)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X6),X8),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9))))) | ? [X10,X11,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X6),'const.BinomialHeap.Node_3'(s('type.num.num',X10),s(X6,X11),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9)))))) => (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X6),X8),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9))))) | ? [X10,X11,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X6),'const.BinomialHeap.Node_3'(s('type.num.num',X10),s(X6,X11),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X6),X8),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9))))) | ? [X10,X11,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X6),'const.BinomialHeap.Node_3'(s('type.num.num',X10),s(X6,X11),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9)))))) => (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.NIL_0'))) | ? [X8,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(X6)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(X6),X8),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9))))) | ? [X10,X11,X9] : s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),X7) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(X6)),'type.BinomialHeap.tree'(X6)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(X6),'const.BinomialHeap.Node_3'(s('type.num.num',X10),s(X6,X11),s('type.list.list'('type.BinomialHeap.tree'(X6)),X9)))))))),
  file('thm.BinomialHeap.BinomialHeap_|49|8_prove_ltb','thm.BinomialHeap.BinomialHeap_|49|8_prove_ltb')).
fof(f388,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) | $spl1),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f218,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f389,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) | $spl0),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f391,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),sK14),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK15))))) | $spl2),
  inference(cnf_transformation,[],[f391_D])).
fof(f391_D,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),sK14),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK15))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f393,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',sK16),s(sK12,sK17),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK18))))) | $spl4),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',sK16),s(sK12,sK17),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK18))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f217,plain,(
  s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INR_1'(s('type.BinomialHeap.tree'(sK12),'const.BinomialHeap.Node_3'(s('type.num.num',sK16),s(sK12,sK17),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK18))))) | s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),sK14),s('type.list.list'('type.BinomialHeap.tree'(sK12)),sK15))))) | s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) = s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f136])).
fof(f4547,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f391,f219])).
fof(f219,plain,(
  ( ! [X6,X5] : (s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),sK13) != s('type.sum.sum'('type.list.list'('type.BinomialHeap.tree'(sK12)),'type.BinomialHeap.tree'(sK12)),'const.sum.INL_1'(s('type.list.list'('type.BinomialHeap.tree'(sK12)),'const.list.CONS_2'(s('type.BinomialHeap.tree'(sK12),X5),s('type.list.list'('type.BinomialHeap.tree'(sK12)),X6)))))) )),
  inference(cnf_transformation,[],[f136])).
% SZS output end Proof for thm.BinomialHeap
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 356
% Passive clauses: 1441
% Generated clauses: 4323
% Final active clauses: 356
% Final passive clauses: 927
% Input formulas: 36
% Initial clauses: 167
% 
% Duplicate literals: 153
% Trivial inequalities: 15
% Fw subsumption resolutions: 292
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2243
% 
% Binary resolution: 2688
% Factoring: 766
% Forward superposition: 132
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 95
% Split components: 192
% SAT solver clauses: 172
% SAT solver unit clauses: 9
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 95
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 171
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 2174
% Time elapsed: 0.188 s
% ------------------------------
% ------------------------------
% Success in time 0.2 s
