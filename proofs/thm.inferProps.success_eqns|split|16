Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (53901)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 97
% Passive clauses: 2075
% Generated clauses: 11925
% Final active clauses: 91
% Final passive clauses: 1841
% Input formulas: 44
% Initial clauses: 80
% 
% Duplicate literals: 332
% Trivial inequalities: 92
% Fw subsumption resolutions: 1174
% Fw demodulations: 1454
% Bw demodulations: 4
% 
% Simple tautologies: 146
% Equational tautologies: 49
% Forward subsumptions: 6470
% 
% Binary resolution: 18
% Forward superposition: 4987
% Backward superposition: 3377
% Self superposition: 211
% Equality factoring: 128
% Equality resolution: 21
% 
% Split clauses: 126
% Split components: 258
% SAT solver clauses: 267
% SAT solver unit clauses: 1
% SAT solver binary clauses: 30
% 
% Sat splits: 126
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 267
% TWLsolver calls for satisfiability: 63
% 
% Memory used [KB]: 10874
% Time elapsed: 0.607 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (53933)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 87
% Passive clauses: 671
% Generated clauses: 5856
% Final active clauses: 83
% Final passive clauses: 571
% Input formulas: 44
% Initial clauses: 80
% 
% Duplicate literals: 86
% Trivial inequalities: 10
% Fw subsumption resolutions: 85
% Fw demodulations: 527
% Bw demodulations: 13
% Condensations: 239
% Global subsumptions: 7
% 
% Simple tautologies: 33
% Equational tautologies: 16
% Forward subsumptions: 2998
% 
% Binary resolution: 6
% Forward superposition: 3258
% Backward superposition: 680
% Self superposition: 79
% Equality factoring: 30
% Equality resolution: 5
% 
% Split clauses: 16
% Split components: 38
% SAT solver clauses: 1249
% SAT solver unit clauses: 123
% SAT solver binary clauses: 55
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 10
% 
% Sat splits: 16
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1221
% TWLsolver calls for satisfiability: 629
% 
% Memory used [KB]: 12792
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f44568,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f161,f244,f242,f240,f160,f243,f159,f241,f239,f260,f263,f261,f975,f976,f992,f977,f978,f993,f979,f994,f991,f3415,f3416,f3417,f3418,f3419,f3437,f3438,f3439,f3440,f3441,f3445,f3447,f3449,f3450,f3451,f3452,f3453,f3454,f3494,f3543,f3496,f3544,f3498,f3499,f3500,f3501,f3502,f3546,f3542,f3503,f3545,f3541,f3598,f3612,f3599,f3600,f3613,f3601,f3616,f3614,f8183,f8184,f8185,f8186,f8187,f8188,f8189,f8190,f8191,f8192,f8193,f8194,f8195,f8196,f8197,f8198,f8199,f8200,f8201,f8202,f8203,f8204,f8205,f8206,f8207,f8208,f8209,f8210,f8211,f8212,f8213,f8214,f8215,f8216,f8217,f8218,f8219,f8220,f8221,f8222,f8223,f8224,f8225,f8226,f8230,f8235,f8231,f8234,f8229,f8232,f8239,f8380,f26070,f26071,f26322,f26072,f26323,f26321,f26351,f27121,f36922,f37066,f44526,f44528,f44548])).
fof(f44548,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f44547,f37078])).
fof(f37078,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK4))) != s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f240,f243])).
fof(f44547,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f44477,f243])).
fof(f44477,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK6))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f243,f241,f200])).
fof(f200,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))))),
  inference(flattening,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6)) | s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4)))))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X7] : ! [X8,X9,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.pair.,_2'(s('type.infer.exc'(X6,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X6,X15))),s(X7,X18))) = s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9),s(X7,X16))) <=> (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X15))) = s('type.option.option'(X6),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9))) & s(X7,X16) = s(X7,X18)))),
  file('thm.inferProps.success_eqns|split|16','thm.inferProps.inferProps_34_prove_ltb')).
fof(f44528,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f44527,f37078])).
fof(f44527,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f44520,f243])).
fof(f44520,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f243,f241,f200])).
fof(f44526,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f44521])).
fof(f44521,plain,(
  s(sK1,sK4) != s(sK1,sK4) | ($spl1 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f241,f37078,f200])).
fof(f37066,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f36921,f242])).
fof(f36921,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) = s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | $spl0),
  inference(unit_resulting_resolution,[],[f27144,f198])).
fof(f198,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f27144,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | $spl0),
  inference(backward_demodulation,[],[f26350,f239])).
fof(f26350,plain,(
  s(sK1,sK4) = s(sK1,sK6) | $spl0),
  inference(unit_resulting_resolution,[],[f239,f199])).
fof(f199,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | s(X1,X4) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f138])).
fof(f36922,plain,(
  $false | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f242,f27144,f198])).
fof(f27121,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f26350,f244])).
fof(f26351,plain,(
  $false | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f244,f239,f199])).
fof(f26321,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X6)))) ) | $spl44),
  inference(cnf_transformation,[],[f26321_D])).
fof(f26321_D,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X6)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f26323,plain,(
  ( ! [X13] : (s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X13),'const.infer.Success_1'(s(bool,'F_0'))),s(sK1,sK4)))) ) | $spl48),
  inference(cnf_transformation,[],[f26323_D])).
fof(f26323_D,plain,(
  ( ! [X13] : (s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X13),'const.infer.Success_1'(s(bool,'F_0'))),s(sK1,sK4)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f26072,plain,(
  ( ! [X12,X13] : (s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.infer.st_ex_return_2'(s(bool,'F_0'),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X13),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X13),'const.infer.Success_1'(s(bool,'F_0'))),s(sK1,sK4))) | s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X12)))) ) | $spl4),
  inference(superposition,[],[f5601,f166])).
fof(f166,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.success_eqns|split|16',aHL_BOOL_CASES)).
fof(f5601,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.infer.st_ex_return_2'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s(sK1,sK4)))) ) | $spl4),
  inference(forward_demodulation,[],[f5600,f167])).
fof(f167,plain,(
  ( ! [X0,X1] : (s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X1))) = s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X1)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X38] : s(X6,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X6),X38))) = s(X6,happ(s(fun('type.infer.infer_st'(X6),X6),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X6),X38)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_1_const.infer.infer_st_subst')).
fof(f5600,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s(sK1,sK4)))) ) | $spl4),
  inference(forward_demodulation,[],[f5469,f243])).
fof(f5469,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.pair.,_2'(s('type.infer.exc'(X0,X1),'const.infer.Success_1'(s(X0,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X0),X2))))),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),sK1),'const.infer.st_ex_return_2'(s(X0,happ(s(fun('type.infer.infer_st'(X0),X0),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X0),X2))),s(sK1,sK6)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f167,f243,f211])).
fof(f211,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6))) & (s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(flattening,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) != s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) | (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6))) & ((s(X1,X3) != s(X1,X5) | s(X2,X4) != s(X2,X6)) | s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6)))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6)))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.infer.st_ex_return_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X2),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X5))),s(X2,X6))) <=> (s(X1,X3) = s(X1,X5) & s(X2,X4) = s(X2,X6)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X14,X6,X7] : ! [X15,X16,X17,X18] : (s('type.pair.prod'('type.infer.exc'(X6,X14),X7),'const.infer.st_ex_return_2'(s(X6,X15),s(X7,X16))) = s('type.pair.prod'('type.infer.exc'(X6,X14),X7),'const.pair.,_2'(s('type.infer.exc'(X6,X14),'const.infer.Success_1'(s(X6,X17))),s(X7,X18))) <=> (s(X6,X15) = s(X6,X17) & s(X7,X16) = s(X7,X18)))),
  file('thm.inferProps.success_eqns|split|16','thm.inferProps.inferProps_24_prove_ltb')).
fof(f26322,plain,(
  ( ! [X8,X7] : (s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.infer.st_ex_return_2'(s(bool,X7),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X8),'const.infer.Success_1'(s(bool,X7))),s(sK1,sK4))) | s(bool,'T_0') = s(bool,X7)) ) | $spl46),
  inference(cnf_transformation,[],[f26322_D])).
fof(f26322_D,plain,(
  ( ! [X8,X7] : (s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.infer.st_ex_return_2'(s(bool,X7),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X8),'const.infer.Success_1'(s(bool,X7))),s(sK1,sK4))) | s(bool,'T_0') = s(bool,X7)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f26071,plain,(
  ( ! [X10,X11,X9] : (s('type.pair.prod'('type.infer.exc'(bool,X11),sK1),'const.infer.st_ex_return_2'(s(bool,X10),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X11),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X11),'const.infer.Success_1'(s(bool,X10))),s(sK1,sK4))) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X9)))) ) | $spl4),
  inference(superposition,[],[f5601,f255])).
fof(f255,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f166,f166])).
fof(f26070,plain,(
  ( ! [X6,X8,X7] : (s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.infer.st_ex_return_2'(s(bool,X7),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(bool,X8),sK1),'const.pair.,_2'(s('type.infer.exc'(bool,X8),'const.infer.Success_1'(s(bool,X7))),s(sK1,sK4))) | s(bool,'T_0') = s(bool,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(bool),X6))) | s(bool,'T_0') = s(bool,X7)) ) | $spl4),
  inference(superposition,[],[f5601,f255])).
fof(f8380,plain,(
  $false | $spl40),
  inference(subsumption_resolution,[],[f8267,f162])).
fof(f162,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.success_eqns|split|16',aHL_TRUTH)).
fof(f8267,plain,(
  ~p(s(bool,'T_0')) | $spl40),
  inference(backward_demodulation,[],[f8232,f163])).
fof(f163,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.success_eqns|split|16',aHL_FALSITY)).
fof(f8239,plain,(
  ( ! [X6,X4,X2,X5,X3,X1] : (s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) ) | $spl42),
  inference(cnf_transformation,[],[f8239_D])).
fof(f8239_D,plain,(
  ( ! [X6,X4,X2,X5,X3,X1] : (s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f8232,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl40),
  inference(cnf_transformation,[],[f8232_D])).
fof(f8232_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f8229,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) )),
  inference(condensation,[],[f8228])).
fof(f8228,plain,(
  ( ! [X39,X45,X43,X41,X46,X44,X42,X40] : (s(X40,X41) != s(X40,X42) | s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.infer.guard_3'(s(bool,'T_0'),s(X43,X44),s(X40,X41))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X43),'const.infer.Success_1'(s('type.one.one',X45))),s(X40,X42))) | s(bool,X39) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f8176,f354])).
fof(f354,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f162,f255])).
fof(f8176,plain,(
  ( ! [X39,X45,X43,X41,X46,X44,X42,X40] : (~p(s(bool,X39)) | s(X40,X41) != s(X40,X42) | s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.infer.guard_3'(s(bool,'T_0'),s(X43,X44),s(X40,X41))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X43),X40),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X43),'const.infer.Success_1'(s('type.one.one',X45))),s(X40,X42))) | s(bool,X39) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f247,f255])).
fof(f247,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,X2)) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))) )),
  inference(subsumption_resolution,[],[f197,f164])).
fof(f164,plain,(
  ( ! [X0] : (s('type.one.one','const.one.one_0') = s('type.one.one',X0)) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : s('type.one.one','const.one.one_0') = s('type.one.one',X0)),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X15] : s('type.one.one','const.one.one_0') = s('type.one.one',X15)),
  file('thm.inferProps.success_eqns|split|16','thm.one.one')).
fof(f197,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | s(X1,X4) != s(X1,X6) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6))) & (~p(s(bool,X2)) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | s(X1,X4) != s(X1,X6) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) | (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6))) & ((~p(s(bool,X2)) | s('type.one.one','const.one.one_0') != s('type.one.one',X5) | s(X1,X4) != s(X1,X6)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) <=> (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6)))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6))) <=> (p(s(bool,X2)) & s('type.one.one','const.one.one_0') = s('type.one.one',X5) & s(X1,X4) = s(X1,X6)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7] : ! [X35,X33,X16,X15,X18] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),'const.infer.guard_3'(s(bool,X35),s(X6,X33),s(X7,X16))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X6),X7),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X6),'const.infer.Success_1'(s('type.one.one',X15))),s(X7,X18))) <=> (p(s(bool,X35)) & s('type.one.one','const.one.one_0') = s('type.one.one',X15) & s(X7,X16) = s(X7,X18)))),
  file('thm.inferProps.success_eqns|split|16','thm.inferProps.inferProps_38_prove_ltb')).
fof(f8234,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3) | s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X4,X5),s(X1,X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X4),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X4),'const.infer.Success_1'(s('type.one.one',X6))),s(X1,X3)))) )),
  inference(condensation,[],[f8233])).
fof(f8233,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s(bool,X47) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f8177,f354])).
fof(f8177,plain,(
  ( ! [X47,X54,X52,X50,X48,X53,X51,X49] : (~p(s(bool,X47)) | s(X48,X49) != s(X48,X50) | s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.infer.guard_3'(s(bool,'T_0'),s(X51,X52),s(X48,X49))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X51),X48),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X51),'const.infer.Success_1'(s('type.one.one',X53))),s(X48,X50))) | s(bool,X47) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f247,f255])).
fof(f8231,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) != s(X1,X3)) ) | $spl38),
  inference(cnf_transformation,[],[f8231_D])).
fof(f8231_D,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) != s(X1,X3)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f8235,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3)) ) | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8234,f3627])).
fof(f3627,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,'T_0'),s(X29,X31),s(X30,X32))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34)))) ) | ($spl20 | $spl24)),
  inference(backward_demodulation,[],[f3542,f3544])).
fof(f8230,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,X2) != s(X1,X3)) ) | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8229,f3627])).
fof(f8226,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8127,f3627])).
fof(f8127,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f167,f247])).
fof(f8225,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8128,f3627])).
fof(f8128,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f162,f205,f247])).
fof(f205,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X40,X41,X42] : ! [X44,X45,X47] : s(X40,happ(s(fun(X41,X40),X44),s(X41,happ(s(fun(X42,X41),X45),s(X42,X47))))) = s(X40,happ(s(fun(X42,X40),'_dst_x0x1_2'(s(fun(X41,X40),X44),s(fun(X42,X41),X45))),s(X42,X47)))),
  file('thm.inferProps.success_eqns|split|16','_dst_x0x1_ax')).
fof(f8224,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8129,f3627])).
fof(f8129,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f162,f556,f247])).
fof(f556,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,'type.one.one'),X1) = s(fun(X0,'type.one.one'),X2)) )),
  inference(unit_resulting_resolution,[],[f253,f181])).
fof(f181,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.inferProps.success_eqns|split|16',aHL_EXT)).
fof(f253,plain,(
  ( ! [X0,X1] : (s('type.one.one',X0) = s('type.one.one',X1)) )),
  inference(superposition,[],[f164,f164])).
fof(f8223,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8130,f3627])).
fof(f8130,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f162,f671,f247])).
fof(f671,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,fun(X1,'type.one.one')),X2) = s(fun(X0,fun(X1,'type.one.one')),X3)) )),
  inference(unit_resulting_resolution,[],[f556,f181])).
fof(f8222,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8131,f3627])).
fof(f8131,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f162,f699,f247])).
fof(f699,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X3) = s(fun(X0,fun(X1,fun(X2,'type.one.one'))),X4)) )),
  inference(unit_resulting_resolution,[],[f671,f181])).
fof(f8221,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8132,f3627])).
fof(f8132,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f162,f734,f247])).
fof(f734,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X4) = s(fun(X0,fun(X1,fun(X2,fun(X3,'type.one.one')))),X5)) )),
  inference(unit_resulting_resolution,[],[f699,f181])).
fof(f8220,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8133,f3627])).
fof(f8133,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f162,f762,f247])).
fof(f762,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X5) = s(fun(X0,fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),X6)) )),
  inference(unit_resulting_resolution,[],[f734,f181])).
fof(f8219,plain,(
  $false | ($spl10 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8134,f3627])).
fof(f8134,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(fun('type.one.one',bool),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s(fun('type.one.one',bool),X4)))) ) | $spl10),
  inference(unit_resulting_resolution,[],[f162,f991,f247])).
fof(f8218,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8135,f3627])).
fof(f8135,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f162,f179,f247])).
fof(f179,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X1),'type.list.list'(X0)),happ(s(fun(fun(X1,X0),fun('type.list.list'(X1),'type.list.list'(X0))),'const.list.MAP_0'),s(fun(X1,X0),X2))),s('type.list.list'(X1),X3)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X7,X6] : ! [X38,X39] : s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X38),s('type.list.list'(X6),X39))) = s('type.list.list'(X7),happ(s(fun('type.list.list'(X6),'type.list.list'(X7)),happ(s(fun(fun(X6,X7),fun('type.list.list'(X6),'type.list.list'(X7))),'const.list.MAP_0'),s(fun(X6,X7),X38))),s('type.list.list'(X6),X39)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_2_const.list.MAP')).
fof(f8217,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8136,f3627])).
fof(f8136,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X4))),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f176,f247])).
fof(f176,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X0),'const.infer.Success_1'(s(X1,X2))),s(X1,X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : ! [X5] : s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.infer.read_1'(s(X6,X5))) = s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.pair.,_2'(s('type.infer.exc'(X6,X7),'const.infer.Success_1'(s(X6,X5))),s(X6,X5)))),
  file('thm.inferProps.success_eqns|split|16','thm.infer.read_def')).
fof(f8216,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8137,f3627])).
fof(f8137,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f177,f247])).
fof(f177,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'(X1,X0),X1),'const.infer.read_1'(s(X1,X2))) = s('type.pair.prod'('type.infer.exc'(X1,X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X0),X1)),'const.infer.read_0'),s(X1,X2)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X7,X6] : ! [X38] : s('type.pair.prod'('type.infer.exc'(X6,X7),X6),'const.infer.read_1'(s(X6,X38))) = s('type.pair.prod'('type.infer.exc'(X6,X7),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'(X6,X7),X6)),'const.infer.read_0'),s(X6,X38)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_1_const.infer.read')).
fof(f8215,plain,(
  $false | ($spl4 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8138,f3627])).
fof(f8138,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(sK1,X1),sK1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.pair.prod'('type.infer.exc'(sK1,X1),sK1),'const.infer.read_1'(s(sK1,sK4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(sK1,X1),sK1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(sK1,X1),sK1),'const.infer.st_ex_return_2'(s(sK1,sK4),s(sK1,sK4)))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f162,f5570,f247])).
fof(f5570,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.infer.read_1'(s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.infer.st_ex_return_2'(s(sK1,sK4),s(sK1,sK4)))) ) | $spl4),
  inference(forward_demodulation,[],[f5569,f243])).
fof(f5569,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.infer.read_1'(s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.infer.st_ex_return_2'(s(sK1,sK6),s(sK1,sK6)))) ) | $spl4),
  inference(forward_demodulation,[],[f5489,f176])).
fof(f5489,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.infer.st_ex_return_2'(s(sK1,sK6),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK1,X0),sK1),'const.pair.,_2'(s('type.infer.exc'(sK1,X0),'const.infer.Success_1'(s(sK1,sK4))),s(sK1,sK4)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f243,f243,f211])).
fof(f8214,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8139,f3627])).
fof(f8139,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f178,f247])).
fof(f178,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : ! [X2] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X1),X2))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1)),happ(s(fun('type.infer.infer_st'(X1),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X0),'type.infer.infer_st'(X1))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X1),X2)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7] : ! [X38] : s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X7),X38))) = s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7)),happ(s(fun('type.infer.infer_st'(X7),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X6),'type.infer.infer_st'(X7))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X7),X38)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_1_const.infer.fresh_uvar')).
fof(f8213,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8140,f3627])).
fof(f8140,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f162,f203,f247])).
fof(f203,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.pair.prod'('type.infer.exc'(X0,X1),X2),'const.infer.failwith_2'(s(X1,X3),s(X2,X4))) = s('type.pair.prod'('type.infer.exc'(X0,X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'(X0,X1),X2)),'const.infer.failwith_1'(s(X1,X3))),s(X2,X4)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X14,X6,X7] : ! [X38,X39] : s('type.pair.prod'('type.infer.exc'(X14,X6),X7),'const.infer.failwith_2'(s(X6,X38),s(X7,X39))) = s('type.pair.prod'('type.infer.exc'(X14,X6),X7),happ(s(fun(X7,'type.pair.prod'('type.infer.exc'(X14,X6),X7)),'const.infer.failwith_1'(s(X6,X38))),s(X7,X39)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_1_2_const.infer.failwith')).
fof(f8212,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8141,f3627])).
fof(f8141,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f162,f182,f247])).
fof(f182,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'('type.one.one',X0),X1)),'const.infer.guard_2'(s(bool,X2),s(X0,X3))),s(X1,X4)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X7,X6] : ! [X38,X39,X48] : s('type.pair.prod'('type.infer.exc'('type.one.one',X7),X6),'const.infer.guard_3'(s(bool,X38),s(X7,X39),s(X6,X48))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X7),X6),happ(s(fun(X6,'type.pair.prod'('type.infer.exc'('type.one.one',X7),X6)),'const.infer.guard_2'(s(bool,X38),s(X7,X39))),s(X6,X48)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_2_3_const.infer.guard')).
fof(f8211,plain,(
  $false | ($spl2 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8142,f3627])).
fof(f8142,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.option.option'(sK0)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.option.option'(sK0)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3)))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f162,f241,f247])).
fof(f8210,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8143,f3627])).
fof(f8143,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f174,f247])).
fof(f174,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X38,X39] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X39))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X38))),s('type.num.num',X39)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_1_2_const.arithmetic.+')).
fof(f8209,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8144,f3627])).
fof(f8144,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f162,f165,f247])).
fof(f165,plain,(
  ( ! [X0] : (s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X38] : s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X38))) = s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X38)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_1_const.infer_t.Infer_Tuvar')).
fof(f8208,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8145,f3627])).
fof(f8145,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f175,f247])).
fof(f175,plain,(
  ( ! [X0,X1] : (s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))),s('type.infer_t.infer_t',X1)))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))),s('type.infer_t.infer_t',X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X38,X39] : s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X38),s('type.infer_t.infer_t',X39))) = s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X38))),s('type.infer_t.infer_t',X39)))),
  file('thm.inferProps.success_eqns|split|16','ARITY_0_2_const.unify.t_walkstar')).
fof(f8207,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8146,f3627])).
fof(f8146,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one','const.one.one_0'))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.one.one',X3)))) )),
  inference(unit_resulting_resolution,[],[f162,f164,f247])).
fof(f8206,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8147,f3627])).
fof(f8147,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f162,f253,f247])).
fof(f8205,plain,(
  $false | ($spl4 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8148,f3627])).
fof(f8148,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),sK1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(sK1,sK4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),sK1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(sK1,sK6)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f162,f243,f247])).
fof(f8204,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8149,f3627])).
fof(f8149,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,'const.infer.infer_st_subst_1'(s('type.infer.infer_st'(X1),X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(X1,happ(s(fun('type.infer.infer_st'(X1),X1),'const.infer.infer_st_subst_0'),s('type.infer.infer_st'(X1),X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f167,f247])).
fof(f8203,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8150,f3627])).
fof(f8150,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(X1,happ(s(fun(X3,X1),X4),s(X3,happ(s(fun(X5,X3),X6),s(X5,X7))))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X8),s(X1,happ(s(fun(X5,X1),'_dst_x0x1_2'(s(fun(X3,X1),X4),s(fun(X5,X3),X6))),s(X5,X7)))))) )),
  inference(unit_resulting_resolution,[],[f162,f205,f247])).
fof(f8202,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8151,f3627])).
fof(f8151,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s(fun(X1,'type.one.one'),X3))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,'type.one.one')),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s(fun(X1,'type.one.one'),X5)))) )),
  inference(unit_resulting_resolution,[],[f162,f556,f247])).
fof(f8201,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8152,f3627])).
fof(f8152,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s(fun(X1,fun(X2,'type.one.one')),X4))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,'type.one.one'))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(fun(X1,fun(X2,'type.one.one')),X6)))) )),
  inference(unit_resulting_resolution,[],[f162,f671,f247])).
fof(f8200,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8153,f3627])).
fof(f8153,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X5))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,'type.one.one')))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X6))),s(fun(X1,fun(X2,fun(X3,'type.one.one'))),X7)))) )),
  inference(unit_resulting_resolution,[],[f162,f699,f247])).
fof(f8199,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8154,f3627])).
fof(f8154,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one'))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X7))),s(fun(X1,fun(X2,fun(X3,fun(X4,'type.one.one')))),X8)))) )),
  inference(unit_resulting_resolution,[],[f162,f734,f247])).
fof(f8198,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8155,f3627])).
fof(f8155,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X7))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one')))))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X8))),s(fun(X1,fun(X2,fun(X3,fun(X4,fun(X5,'type.one.one'))))),X9)))) )),
  inference(unit_resulting_resolution,[],[f162,f762,f247])).
fof(f8197,plain,(
  $false | ($spl10 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8156,f3627])).
fof(f8156,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(fun('type.one.one',bool),X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),fun('type.one.one',bool)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s(fun('type.one.one',bool),X4)))) ) | $spl10),
  inference(unit_resulting_resolution,[],[f162,f991,f247])).
fof(f8196,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8157,f3627])).
fof(f8157,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X3,X1),X4),s('type.list.list'(X3),X5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.list.list'(X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X6),s('type.list.list'(X1),happ(s(fun('type.list.list'(X3),'type.list.list'(X1)),happ(s(fun(fun(X3,X1),fun('type.list.list'(X3),'type.list.list'(X1))),'const.list.MAP_0'),s(fun(X3,X1),X4))),s('type.list.list'(X3),X5)))))) )),
  inference(unit_resulting_resolution,[],[f162,f179,f247])).
fof(f8195,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8158,f3627])).
fof(f8158,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.pair.,_2'(s('type.infer.exc'(X1,X2),'const.infer.Success_1'(s(X1,X4))),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f176,f247])).
fof(f8194,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8159,f3627])).
fof(f8159,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),'const.infer.read_1'(s(X1,X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'(X1,X2),X1),happ(s(fun(X1,'type.pair.prod'('type.infer.exc'(X1,X2),X1)),'const.infer.read_0'),s(X1,X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f177,f247])).
fof(f8193,plain,(
  $false | ($spl4 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8160,f3627])).
fof(f8160,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(sK1,X1),sK1)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s('type.pair.prod'('type.infer.exc'(sK1,X1),sK1),'const.infer.read_1'(s(sK1,sK4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(sK1,X1),sK1)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.pair.prod'('type.infer.exc'(sK1,X1),sK1),'const.infer.st_ex_return_2'(s(sK1,sK4),s(sK1,sK4)))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f162,f5570,f247])).
fof(f8192,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8161,f3627])).
fof(f8161,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),'const.infer.fresh_uvar_1'(s('type.infer.infer_st'(X2),X4))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X5),s('type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2)),happ(s(fun('type.infer.infer_st'(X2),'type.pair.prod'('type.infer.exc'('type.infer_t.infer_t',X1),'type.infer.infer_st'(X2))),'const.infer.fresh_uvar_0'),s('type.infer.infer_st'(X2),X4)))))) )),
  inference(unit_resulting_resolution,[],[f162,f178,f247])).
fof(f8191,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8162,f3627])).
fof(f8162,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X4))),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),'const.infer.failwith_2'(s(X2,X5),s(X3,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'(X1,X2),X3),happ(s(fun(X3,'type.pair.prod'('type.infer.exc'(X1,X2),X3)),'const.infer.failwith_1'(s(X2,X5))),s(X3,X6)))))) )),
  inference(unit_resulting_resolution,[],[f162,f203,f247])).
fof(f8190,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8163,f3627])).
fof(f8163,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),'const.infer.guard_3'(s(bool,X4),s(X1,X5),s(X2,X6))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X7),s('type.pair.prod'('type.infer.exc'('type.one.one',X1),X2),happ(s(fun(X2,'type.pair.prod'('type.infer.exc'('type.one.one',X1),X2)),'const.infer.guard_2'(s(bool,X4),s(X1,X5))),s(X2,X6)))))) )),
  inference(unit_resulting_resolution,[],[f162,f182,f247])).
fof(f8189,plain,(
  $false | ($spl2 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8164,f3627])).
fof(f8164,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.option.option'(sK0)),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.option.option'(sK0)),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X2),s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3)))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f162,f241,f247])).
fof(f8188,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8165,f3627])).
fof(f8165,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.num.num'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f174,f247])).
fof(f8187,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8166,f3627])).
fof(f8166,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',X2))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X3),s('type.infer_t.infer_t',happ(s(fun('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',X2)))))) )),
  inference(unit_resulting_resolution,[],[f162,f165,f247])).
fof(f8186,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8167,f3627])).
fof(f8167,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X1))),s('type.infer_t.infer_t','const.unify.t_walkstar_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2),s('type.infer_t.infer_t',X3))))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.infer_t.infer_t'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X4),s('type.infer_t.infer_t',happ(s(fun('type.infer_t.infer_t','type.infer_t.infer_t'),happ(s(fun('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),fun('type.infer_t.infer_t','type.infer_t.infer_t')),'const.unify.t_walkstar_0'),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2))),s('type.infer_t.infer_t',X3)))))) )),
  inference(unit_resulting_resolution,[],[f162,f175,f247])).
fof(f8185,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8168,f3627])).
fof(f8168,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one','const.one.one_0')))) )),
  inference(unit_resulting_resolution,[],[f162,f164,f247])).
fof(f8184,plain,(
  $false | ($spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8169,f3627])).
fof(f8169,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s('type.one.one',X2))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),'type.one.one'),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X3))),s('type.one.one',X4)))) )),
  inference(unit_resulting_resolution,[],[f162,f253,f247])).
fof(f8183,plain,(
  $false | ($spl4 | $spl20 | $spl24)),
  inference(subsumption_resolution,[],[f8170,f3627])).
fof(f8170,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X0),sK1),'const.infer.guard_3'(s(bool,'T_0'),s(X0,X1),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'('type.one.one',X0),sK1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X2))),s(sK1,sK4)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f162,f243,f247])).
fof(f3614,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl34),
  inference(cnf_transformation,[],[f3614_D])).
fof(f3614_D,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3616,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | $spl37),
  inference(cnf_transformation,[],[f3616_D])).
fof(f3616_D,plain,(
  s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f3601,plain,(
  ( ! [X5] : (s(bool,'F_0') != s(bool,f(s('type.one.one','const.one.one_0'))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X5)))) ) | $spl16),
  inference(superposition,[],[f994,f164])).
fof(f3613,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) | $spl32),
  inference(cnf_transformation,[],[f3613_D])).
fof(f3613_D,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3600,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X3)))) ) | $spl16),
  inference(superposition,[],[f994,f253])).
fof(f3599,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X2))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X1)))) ) | $spl16),
  inference(superposition,[],[f994,f253])).
fof(f3612,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) | $spl30),
  inference(cnf_transformation,[],[f3612_D])).
fof(f3612_D,plain,(
  s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0'))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3598,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,g(s('type.one.one','const.one.one_0')))) ) | $spl16),
  inference(superposition,[],[f994,f164])).
fof(f3541,plain,(
  ( ! [X26,X29,X25] : (s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl18),
  inference(cnf_transformation,[],[f3541_D])).
fof(f3541_D,plain,(
  ( ! [X26,X29,X25] : (s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3545,plain,(
  ( ! [X28,X27] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))))) ) | $spl26),
  inference(cnf_transformation,[],[f3545_D])).
fof(f3545_D,plain,(
  ( ! [X28,X27] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3503,plain,(
  ( ! [X70,X72,X71,X69,X73] : (p(s(bool,happ(s(fun('type.one.one',bool),X71),s('type.one.one',X72)))) | s(bool,X73) = s(bool,happ(s(fun('type.one.one',bool),X69),s('type.one.one',X70))) | s(bool,'T_0') = s(bool,X73)) ) | $spl10),
  inference(superposition,[],[f354,f3289])).
fof(f3289,plain,(
  ( ! [X269,X271,X268,X270] : (s(bool,happ(s(fun('type.one.one',bool),X270),s('type.one.one',X268))) = s(bool,happ(s(fun('type.one.one',bool),X271),s('type.one.one',X269)))) ) | $spl10),
  inference(superposition,[],[f1934,f253])).
fof(f1934,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s(bool,happ(s(fun('type.one.one',bool),X125),s('type.one.one',X126))) = s(bool,happ(s(fun(X122,bool),X123),s(X122,happ(s(fun('type.one.one',X122),X124),s('type.one.one',X126)))))) ) | $spl10),
  inference(superposition,[],[f205,f991])).
fof(f3542,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) ) | $spl20),
  inference(cnf_transformation,[],[f3542_D])).
fof(f3542_D,plain,(
  ( ! [X28,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3546,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68))))) ) | $spl28),
  inference(cnf_transformation,[],[f3546_D])).
fof(f3546_D,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3502,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X65),s('type.one.one',X66)))) ) | $spl10),
  inference(superposition,[],[f257,f3289])).
fof(f257,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f163,f166])).
fof(f3501,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X62),s('type.one.one',X63))) | s(bool,X64) = s(bool,happ(s(fun('type.one.one',bool),X60),s('type.one.one',X61))) | s(bool,'T_0') = s(bool,X64)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3500,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X59) = s(bool,happ(s(fun('type.one.one',bool),X57),s('type.one.one',X58))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X55),s('type.one.one',X56))) | s(bool,'T_0') = s(bool,X59)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3499,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,X54) = s(bool,happ(s(fun('type.one.one',bool),X52),s('type.one.one',X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X50),s('type.one.one',X51)))) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3498,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,X49) = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46))) | s(bool,'T_0') = s(bool,X49)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3544,plain,(
  ( ! [X30,X26,X33,X31,X29,X25,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl24),
  inference(cnf_transformation,[],[f3544_D])).
fof(f3544_D,plain,(
  ( ! [X30,X26,X33,X31,X29,X25,X34,X32] : (s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3496,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X34,X32] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl10),
  inference(superposition,[],[f194,f3289])).
fof(f194,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,X2)) | s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.infer.guard_3'(s(bool,X2),s(X0,X3),s(X1,X4))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X0),X1),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X0),'const.infer.Success_1'(s('type.one.one',X5))),s(X1,X6)))) )),
  inference(cnf_transformation,[],[f136])).
fof(f3543,plain,(
  ( ! [X47,X48] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48)))) ) | $spl22),
  inference(cnf_transformation,[],[f3543_D])).
fof(f3543_D,plain,(
  ( ! [X47,X48] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3494,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X16))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X13),s('type.one.one',X14)))) ) | $spl10),
  inference(superposition,[],[f166,f3289])).
fof(f3454,plain,(
  ( ! [X70,X72,X71,X69,X73] : (p(s(bool,happ(s(fun('type.one.one',bool),X71),s('type.one.one',X72)))) | s(bool,X73) = s(bool,happ(s(fun('type.one.one',bool),X69),s('type.one.one',X70))) | s(bool,'T_0') = s(bool,X73)) ) | $spl10),
  inference(superposition,[],[f354,f3289])).
fof(f3453,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,happ(s(fun('type.one.one',bool),X67),s('type.one.one',X68)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X65),s('type.one.one',X66)))) ) | $spl10),
  inference(superposition,[],[f257,f3289])).
fof(f3452,plain,(
  ( ! [X61,X64,X62,X60,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X62),s('type.one.one',X63))) | s(bool,X64) = s(bool,happ(s(fun('type.one.one',bool),X60),s('type.one.one',X61))) | s(bool,'T_0') = s(bool,X64)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3451,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(bool,X59) = s(bool,happ(s(fun('type.one.one',bool),X57),s('type.one.one',X58))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X55),s('type.one.one',X56))) | s(bool,'T_0') = s(bool,X59)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3450,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,X54) = s(bool,happ(s(fun('type.one.one',bool),X52),s('type.one.one',X53))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X50),s('type.one.one',X51)))) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3449,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,X49) = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46))) | s(bool,'T_0') = s(bool,X49)) ) | $spl10),
  inference(superposition,[],[f255,f3289])).
fof(f3447,plain,(
  ( ! [X30,X28,X26,X33,X31,X29,X27,X25,X34,X32] : (p(s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28)))) | s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.pair.,_2'(s('type.infer.exc'('type.one.one',X29),'const.infer.Success_1'(s('type.one.one',X33))),s(X30,X34))) != s('type.pair.prod'('type.infer.exc'('type.one.one',X29),X30),'const.infer.guard_3'(s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))),s(X29,X31),s(X30,X32)))) ) | $spl10),
  inference(superposition,[],[f194,f3289])).
fof(f3445,plain,(
  ( ! [X14,X15,X13,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X15),s('type.one.one',X16))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X13),s('type.one.one',X14)))) ) | $spl10),
  inference(superposition,[],[f166,f3289])).
fof(f3441,plain,(
  ( ! [X47,X45,X48,X46] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46)))) ) | $spl10),
  inference(superposition,[],[f3289,f166])).
fof(f3440,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,X42) = s(bool,happ(s(fun('type.one.one',bool),X43),s('type.one.one',X44))) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X40),s('type.one.one',X41)))) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3439,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X37) = s(bool,happ(s(fun('type.one.one',bool),X38),s('type.one.one',X39))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X35),s('type.one.one',X36))) | s(bool,'T_0') = s(bool,X37)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3438,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X32),s('type.one.one',X33))) | s(bool,X34) = s(bool,happ(s(fun('type.one.one',bool),X30),s('type.one.one',X31))) | s(bool,'T_0') = s(bool,X34)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3437,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))) | s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3419,plain,(
  ( ! [X47,X45,X48,X46] : (s(bool,'F_0') = s(bool,happ(s(fun('type.one.one',bool),X47),s('type.one.one',X48))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X45),s('type.one.one',X46)))) ) | $spl10),
  inference(superposition,[],[f3289,f166])).
fof(f3418,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,X42) = s(bool,happ(s(fun('type.one.one',bool),X43),s('type.one.one',X44))) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X40),s('type.one.one',X41)))) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3417,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X37) = s(bool,happ(s(fun('type.one.one',bool),X38),s('type.one.one',X39))) | s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X35),s('type.one.one',X36))) | s(bool,'T_0') = s(bool,X37)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3416,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X32),s('type.one.one',X33))) | s(bool,X34) = s(bool,happ(s(fun('type.one.one',bool),X30),s('type.one.one',X31))) | s(bool,'T_0') = s(bool,X34)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f3415,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.one.one',bool),X27),s('type.one.one',X28))) | s(bool,X29) = s(bool,happ(s(fun('type.one.one',bool),X25),s('type.one.one',X26))) | s(bool,'T_0') = s(bool,X29)) ) | $spl10),
  inference(superposition,[],[f3289,f255])).
fof(f991,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) | $spl10),
  inference(cnf_transformation,[],[f991_D])).
fof(f991_D,plain,(
  ( ! [X2,X1] : (s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f994,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) | $spl16),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  ( ! [X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f979,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s('type.one.one',X16))) | s(fun('type.one.one',bool),X17) = s(fun('type.one.one',bool),X18) | s(bool,'T_0') = s(bool,g(s('type.one.one',X16)))) )),
  inference(superposition,[],[f562,f166])).
fof(f562,plain,(
  ( ! [X21,X19,X22,X20] : (s(X21,f(s('type.one.one',X22))) != s(X21,g(s('type.one.one',X22))) | s(fun('type.one.one',X21),X19) = s(fun('type.one.one',X21),X20)) )),
  inference(superposition,[],[f181,f253])).
fof(f993,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) | $spl14),
  inference(cnf_transformation,[],[f993_D])).
fof(f993_D,plain,(
  ( ! [X8,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f978,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X13) != s(bool,f(s('type.one.one',X12))) | s(fun('type.one.one',bool),X14) = s(fun('type.one.one',bool),X15) | s(bool,'T_0') = s(bool,X13) | s(bool,'T_0') = s(bool,g(s('type.one.one',X12)))) )),
  inference(superposition,[],[f562,f255])).
fof(f977,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X9) != s(bool,f(s('type.one.one',X8))) | s(fun('type.one.one',bool),X10) = s(fun('type.one.one',bool),X11) | s(bool,'T_0') = s(bool,g(s('type.one.one',X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f562,f255])).
fof(f992,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) | $spl12),
  inference(cnf_transformation,[],[f992_D])).
fof(f992_D,plain,(
  ( ! [X0,X3] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3) | s(bool,X3) = s(bool,g(s('type.one.one',X0)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f976,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X4))) | s(fun('type.one.one',bool),X5) = s(fun('type.one.one',bool),X6) | s(bool,X7) = s(bool,g(s('type.one.one',X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f562,f255])).
fof(f975,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s('type.one.one',X0))) | s(fun('type.one.one',bool),X1) = s(fun('type.one.one',bool),X2) | s(bool,X3) = s(bool,g(s('type.one.one',X0))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f562,f255])).
fof(f261,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f261_D])).
fof(f261_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f263,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f263_D])).
fof(f263_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f260,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f166])).
fof(f239,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | $spl0),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f241,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) = s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | $spl2),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) = s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f159,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) = s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4)))),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  (s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | (s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) = s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) & s(sK1,sK4) = s(sK1,sK6))) & (s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) != s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) != s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | s(sK1,sK4) != s(sK1,sK6))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f124])).
fof(f124,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6)))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6))) & (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) != s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) | (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) != s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) | s(X1,X4) != s(X1,X6))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <~> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.pair.,_2'(s('type.infer.exc'(X0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X0,X5))),s(X1,X6))) = s('type.pair.prod'('type.infer.exc'(X0,'type.list.list'('type.string.char')),X1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3),s(X1,X4))) <=> (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X5))) = s('type.option.option'(X0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X0))),X3))) & s(X1,X4) = s(X1,X6)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.pair.,_2'(s('type.infer.exc'(X6,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X6,X11))),s(X7,X12))) = s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9),s(X7,X10))) <=> (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X11))) = s('type.option.option'(X6),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9))) & s(X7,X10) = s(X7,X12)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12] : (s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.pair.,_2'(s('type.infer.exc'(X6,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(X6,X11))),s(X7,X12))) = s('type.pair.prod'('type.infer.exc'(X6,'type.list.list'('type.string.char')),X7),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9),s(X7,X10))) <=> (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X11))) = s('type.option.option'(X6),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),X6))),X9))) & s(X7,X10) = s(X7,X12)))),
  file('thm.inferProps.success_eqns|split|16','thm.inferProps.success_eqns|split|16')).
fof(f243,plain,(
  s(sK1,sK4) = s(sK1,sK6) | $spl4),
  inference(cnf_transformation,[],[f243_D])).
fof(f243_D,plain,(
  s(sK1,sK4) = s(sK1,sK6) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f160,plain,(
  s(sK1,sK4) = s(sK1,sK6) | s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) = s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4)))),
  inference(cnf_transformation,[],[f125])).
fof(f240,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) != s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) | $spl1),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) != s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f242,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) != s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | $spl3),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) != s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f244,plain,(
  s(sK1,sK4) != s(sK1,sK6) | $spl5),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  s(sK1,sK4) != s(sK1,sK6) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f161,plain,(
  s(sK1,sK4) != s(sK1,sK6) | s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK5))) != s('type.option.option'(sK0),'const.semanticPrimitives.lookup_alist_mod_env_2'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3))) | s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.pair.,_2'(s('type.infer.exc'(sK0,'type.list.list'('type.string.char')),'const.infer.Success_1'(s(sK0,sK5))),s(sK1,sK6))) != s('type.pair.prod'('type.infer.exc'(sK0,'type.list.list'('type.string.char')),sK1),'const.infer.lookup_tenvC_st_ex_3'(s('type.ast.id'('type.list.list'('type.string.char')),sK2),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0)))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),sK0))),sK3),s(sK1,sK4)))),
  inference(cnf_transformation,[],[f125])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 170
% Passive clauses: 5707
% Generated clauses: 44286
% Final active clauses: 92
% Final passive clauses: 1128
% Input formulas: 44
% Initial clauses: 80
% Discarded non-redundant clauses: 6949
% 
% Duplicate literals: 109
% Trivial inequalities: 9
% Fw subsumption resolutions: 77
% Fw demodulations: 14924
% Bw demodulations: 179
% Condensations: 331
% 
% Simple tautologies: 18
% Equational tautologies: 80
% Forward subsumptions: 18696
% Fw demodulations to eq. taut.: 1068
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 16950
% Forward superposition: 6050
% Backward superposition: 5140
% Self superposition: 212
% Equality factoring: 26
% Equality resolution: 19
% 
% Split clauses: 46
% Split components: 93
% SAT solver clauses: 5853
% SAT solver unit clauses: 636
% SAT solver binary clauses: 3028
% 
% Sat splits: 46
% Sat splitting refutations: 52
% 
% Memory used [KB]: 43751
% Time elapsed: 4.225 s
% ------------------------------
% ------------------------------
% Success in time 5.58 s
