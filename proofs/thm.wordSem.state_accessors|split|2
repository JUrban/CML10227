Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (120080)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 61
% Passive clauses: 1267
% Generated clauses: 11132
% Final active clauses: 57
% Final passive clauses: 1129
% Input formulas: 18
% Initial clauses: 18
% 
% Duplicate literals: 779
% Trivial inequalities: 160
% Fw subsumption resolutions: 1576
% Fw demodulations: 176
% Bw demodulations: 2
% 
% Simple tautologies: 246
% Equational tautologies: 106
% Forward subsumptions: 5069
% 
% Binary resolution: 16
% Forward superposition: 4727
% Backward superposition: 2899
% Self superposition: 373
% Equality factoring: 314
% Equality resolution: 16
% 
% Split clauses: 557
% Split components: 1119
% SAT solver clauses: 1559
% SAT solver unit clauses: 235
% SAT solver binary clauses: 486
% 
% Sat splits: 557
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1555
% TWLsolver calls for satisfiability: 72
% 
% Memory used [KB]: 6012
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f95,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f94,f55,f74,f66,f87])).
fof(f87,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) ) | $spl22),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f66,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.wordSem.stack_frame'(X7)),X10) = s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X7,X6),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X8),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X9),s('type.list.list'('type.wordSem.stack_frame'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X11),s(fun('type.fcp.cart'(bool,X7),bool),X12),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X14),s('type.num.num',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X18),s(bool,X19),s('type.ffi.ffi_state'(X6),X20)))))),
  file('thm.wordSem.state_accessors|split|2','thm.wordSem.state_stack')).
fof(f74,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK1,sK0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK5),s(fun('type.fcp.cart'(bool,sK1),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK0),sK14))))) | $spl1),
  inference(cnf_transformation,[],[f74_D])).
fof(f74_D,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK1,sK0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK5),s(fun('type.fcp.cart'(bool,sK1),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK0),sK14))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f55,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK1,sK0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK5),s(fun('type.fcp.cart'(bool,sK1),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK0),sK14)))))),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4) != s('type.list.list'('type.wordSem.stack_frame'(sK1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(sK1,sK0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK3),s('type.list.list'('type.wordSem.stack_frame'(sK1)),sK4),s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK5),s(fun('type.fcp.cart'(bool,sK1),bool),sK6),s(fun('type.num.num',fun('type.num.num','type.num.num')),sK7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK8),s('type.num.num',sK9),s('type.num.num',sK10),s('type.num.num',sK11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(sK1))),sK12),s(bool,sK13),s('type.ffi.ffi_state'(sK0),sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14])],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) != s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : s('type.list.list'('type.wordSem.stack_frame'(X1)),X4) = s('type.list.list'('type.wordSem.stack_frame'(X1)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X1,X0),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X2),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X3),s('type.list.list'('type.wordSem.stack_frame'(X1)),X4),s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X5),s(fun('type.fcp.cart'(bool,X1),bool),X6),s(fun('type.num.num',fun('type.num.num','type.num.num')),X7),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X1))),X12),s(bool,X13),s('type.ffi.ffi_state'(X0),X14)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.wordSem.stack_frame'(X7)),X10) = s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X7,X6),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X8),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X9),s('type.list.list'('type.wordSem.stack_frame'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X11),s(fun('type.fcp.cart'(bool,X7),bool),X12),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X14),s('type.num.num',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X18),s(bool,X19),s('type.ffi.ffi_state'(X6),X20)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.list.list'('type.wordSem.stack_frame'(X7)),X10) = s('type.list.list'('type.wordSem.stack_frame'(X7)),'const.wordSem.state_stack_1'(s('type.wordSem.state'(X7,X6),'const.wordSem.recordtype|46|state_13'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X8),s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X9),s('type.list.list'('type.wordSem.stack_frame'(X7)),X10),s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X11),s(fun('type.fcp.cart'(bool,X7),bool),X12),s(fun('type.num.num',fun('type.num.num','type.num.num')),X13),s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X14),s('type.num.num',X15),s('type.num.num',X16),s('type.num.num',X17),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.wordLang.prog'(X7))),X18),s(bool,X19),s('type.ffi.ffi_state'(X6),X20)))))),
  file('thm.wordSem.state_accessors|split|2','thm.wordSem.state_accessors|split|2')).
fof(f94,plain,(
  $false | ($spl1 | $spl22)),
  inference(subsumption_resolution,[],[f74,f87])).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 17
% Generated clauses: 37
% Final passive clauses: 17
% Input formulas: 18
% Initial clauses: 18
% 
% Fw subsumption resolutions: 1
% 
% SAT solver clauses: 38
% SAT solver unit clauses: 34
% SAT solver binary clauses: 3
% SAT solver learnt clauses: 1
% 
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 37
% TWLsolver calls for satisfiability: 27
% 
% Memory used [KB]: 895
% Time elapsed: 0.006 s
% ------------------------------
% ------------------------------
% Success in time 0.636 s
