Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exh_to_patProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exh_to_patProof
% SZS output start Proof for thm.exh_to_patProof
fof(f187,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f186,f125,f126,f80,f129])).
fof(f129,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f80,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb',aHL_FALSITY)).
fof(f126,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f125,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f97])).
fof(f97,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X10] : (s(X6,X10) = s(X6,X10) <=> p(s(bool,'T_0')))),
  file('thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb','thm.bool.REFL_CLAUSE')).
fof(f186,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f185,f77])).
fof(f77,plain,(
  s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK1))) != s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK2)))),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(sK0),sK2),s('type.patSem.state'(sK0),sK1)))) & s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK1))) != s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f45])).
fof(f45,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X2),s('type.patSem.state'(X0),X1)))) & s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) != s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X2),s('type.patSem.state'(X0),X1)))) => s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X2),s('type.patSem.state'(X0),X1)))) => s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X6),X8),s('type.patSem.state'(X6),X7)))) => s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X7))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X6),X8),s('type.patSem.state'(X6),X7)))) => s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X7))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X8))))),
  file('thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb','thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb')).
fof(f185,plain,(
  s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK2))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f183,f126])).
fof(f183,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(sK0),sK2))) | $spl3),
  inference(superposition,[],[f101,f142])).
fof(f142,plain,(
  s(bool,'T_0') = s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(sK0),sK2),s('type.patSem.state'(sK0),sK1))) | $spl3),
  inference(subsumption_resolution,[],[f139,f129])).
fof(f139,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(sK0),sK2),s('type.patSem.state'(sK0),sK1)))),
  inference(superposition,[],[f76,f81])).
fof(f81,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb',aHL_BOOL_CASES)).
fof(f76,plain,(
  p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(sK0),sK2),s('type.patSem.state'(sK0),sK1))))),
  inference(cnf_transformation,[],[f56])).
fof(f101,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2)))) | s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2)))) | (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) & s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2)))))))) & (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) != s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) | s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2)))))) | p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2))))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2)))) | (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) & s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2)))))))) & ((s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) != s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) | s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2))))))) | p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2))))))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2)))) <=> (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) & s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2))))))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X0),X1),s('type.patSem.state'(X0),X2)))) <=> (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X1))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X0),X2)))))) & s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.patSem.state_ffi_1'(s('type.patSem.state'(X0),X2))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X1))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X0),X2))))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X8,X7] : (p(s(bool,'const.exh_to_patProof.state_rel_2'(s('type.patSem.state'(X6),X8),s('type.patSem.state'(X6),X7)))) <=> (s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X7))) = s('type.num.num','const.patSem.state_clock_1'(s('type.patSem.state'(X6),X8))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.semanticPrimitives.store_v'('type.patSem.v'),fun('type.semanticPrimitives.store_v'('type.patSem.v'),bool)),'const.evalProps.sv_rel_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X6),X8))),s('type.list.list'('type.semanticPrimitives.store_v'('type.patSem.v')),'const.patSem.state_refs_1'(s('type.patSem.state'(X6),X7)))))) & s('type.ffi.ffi_state'(X6),'const.patSem.state_ffi_1'(s('type.patSem.state'(X6),X7))) = s('type.ffi.ffi_state'(X6),'const.patSem.state_ffi_1'(s('type.patSem.state'(X6),X8))) & p(s(bool,'const.list.LIST_REL_3'(s(fun('type.option.option'('type.patSem.v'),fun('type.option.option'('type.patSem.v'),bool)),'const.option.OPTREL_1'(s(fun('type.patSem.v',fun('type.patSem.v',bool)),'const.exh_to_patProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X6),X8))),s('type.list.list'('type.option.option'('type.patSem.v')),'const.patSem.state_globals_1'(s('type.patSem.state'(X6),X7))))))))),
  file('thm.exh_to_patProof.exh_to_patProof_7|48|_prove_ltb','thm.exh_to_patProof.state_rel_def')).
% SZS output end Proof for thm.exh_to_patProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 13
% Passive clauses: 33
% Generated clauses: 105
% Final active clauses: 10
% Final passive clauses: 12
% Input formulas: 19
% Initial clauses: 48
% 
% Duplicate literals: 2
% Trivial inequalities: 1
% Fw subsumption resolutions: 6
% Fw demodulations: 1
% Bw demodulations: 2
% 
% Simple tautologies: 21
% Equational tautologies: 3
% Forward subsumptions: 21
% 
% Binary resolution: 8
% Forward superposition: 14
% Backward superposition: 11
% Self superposition: 4
% Equality factoring: 2
% 
% Split clauses: 15
% Split components: 32
% SAT solver clauses: 23
% SAT solver unit clauses: 4
% SAT solver binary clauses: 15
% SAT solver learnt clauses: 1
% 
% Sat splits: 15
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 22
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 767
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.005 s
