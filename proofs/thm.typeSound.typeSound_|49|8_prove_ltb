Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSound
% SZS output start Proof for thm.typeSound
fof(f4745,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4744,f224,f407,f405,f403,f401,f4742,f4741,f4743])).
fof(f4743,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f405,f228])).
fof(f228,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),X5),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),X6))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0')))))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK14),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK16),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK17),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK19),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),sK20),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK21))))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK22),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK23),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),sK26),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK25))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK27),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,sK34),s('type.semanticPrimitives.v',sK35))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK30))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,sK31),s('type.ast.t',sK32))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK33)))))))))))) & ! [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) & ! [X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,X15),s('type.semanticPrimitives.v',X16))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),X17))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,X18),s('type.ast.t',X19))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),X20))))))))))) & ! [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),X10),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),X11))))))))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),X5),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),X6))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X43,X44,X45] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X43),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X44),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X45),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X38,X39,X40,X41,X42] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X38),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X39),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X40),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X41),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X42))))))))))) | ? [X33,X34,X35,X36,X37] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X33),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X34),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X35),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X37),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X36))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X24,X25,X26,X27,X28,X29,X30,X31,X32] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X31),s('type.semanticPrimitives.v',X32))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X27))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X28),s('type.ast.t',X29))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X30)))))))))))) & ! [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) & ! [X12,X13,X14,X15,X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X15),s('type.semanticPrimitives.v',X16))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X17))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X18),s('type.ast.t',X19))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X20))))))))))) & ! [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X10),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X11))))))))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X5),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X6))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X19),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X20))))))))))) | ? [X11,X12,X13,X14,X15] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X11),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X15),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X14))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X9),s('type.semanticPrimitives.v',X10))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X5))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X6),s('type.ast.t',X7))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X8)))))))))))) & ! [X43,X44,X45] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X43),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X44),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X45),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) & ! [X34,X35,X36,X37,X38,X39,X40,X41,X42] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X34),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X37),s('type.semanticPrimitives.v',X38))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X39))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X40),s('type.ast.t',X41))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X42))))))))))) & ! [X29,X30,X31,X32,X33] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X30),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X31),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X32),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X33))))))))))) & ! [X24,X25,X26,X27,X28] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X27),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X28))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X19),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X20))))))))))) | ? [X11,X12,X13,X14,X15] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X11),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X15),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X14))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X9),s('type.semanticPrimitives.v',X10))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X5))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X6),s('type.ast.t',X7))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X8)))))))))))) & (! [X43,X44,X45] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X43),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X44),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X45),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) & ! [X34,X35,X36,X37,X38,X39,X40,X41,X42] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X34),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X37),s('type.semanticPrimitives.v',X38))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X39))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X40),s('type.ast.t',X41))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X42))))))))))) & ! [X29,X30,X31,X32,X33] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X30),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X31),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X32),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X33))))))))))) & ! [X24,X25,X26,X27,X28] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X27),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X28))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0')))))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X19),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X20))))))))))) | ? [X11,X12,X13,X14,X15] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X11),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X15),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X14))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X9),s('type.semanticPrimitives.v',X10))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X5))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X6),s('type.ast.t',X7))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X8)))))))))))) => (? [X43,X44,X45] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X43),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X44),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X45),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X34,X35,X36,X37,X38,X39,X40,X41,X42] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X34),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X37),s('type.semanticPrimitives.v',X38))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X39))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X40),s('type.ast.t',X41))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X42))))))))))) | ? [X29,X30,X31,X32,X33] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X30),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X31),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X32),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X33))))))))))) | ? [X24,X25,X26,X27,X28] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X27),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X28))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0')))))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X21,X22,X23] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X16),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X17),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X18),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X19),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X20))))))))))) | ? [X11,X12,X13,X14,X15] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X11),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X12),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X13),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X15),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X14))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X2,X3,X4,X5,X6,X7,X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X2),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X3),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X4),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X9),s('type.semanticPrimitives.v',X10))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X5))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X6),s('type.ast.t',X7))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X8)))))))))))) => (? [X43,X44,X45] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X43),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X44),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X45),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X34,X35,X36,X37,X38,X39,X40,X41,X42] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X34),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X35),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X36),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X0,X37),s('type.semanticPrimitives.v',X38))),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X39))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),'const.pair.,_2'(s(X0,X40),s('type.ast.t',X41))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X42))))))))))) | ? [X29,X30,X31,X32,X33] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X29),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X30),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X31),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.ast.t'),X32),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),X33))))))))))) | ? [X24,X25,X26,X27,X28] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),X1) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X24),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X25),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X26),s('type.pair.prod'('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X0,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X0,'type.semanticPrimitives.v'),X27),s('type.list.list'('type.pair.prod'(X0,'type.semanticPrimitives.v')),X28))),s('type.list.list'('type.pair.prod'(X0,'type.ast.t')),'const.list.NIL_0')))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),X11),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X12))))))))))) | ? [X8,X9,X10,X13,X14] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),X14),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X13))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X15,X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X6,X19),s('type.semanticPrimitives.v',X20))),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X15))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),'const.pair.,_2'(s(X6,X16),s('type.ast.t',X17))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X18)))))))))))) => (? [X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X19,X20,X15,X16,X17,X18] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X6,X19),s('type.semanticPrimitives.v',X20))),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X15))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),'const.pair.,_2'(s(X6,X16),s('type.ast.t',X17))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X18))))))))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),X11),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X12))))))))))) | ? [X8,X9,X10,X14,X13] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),X14),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X13))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0')))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),X11),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X12))))))))))) | ? [X8,X9,X10,X13,X14] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),X14),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X13))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X15,X16,X17,X18,X19,X20] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X6,X19),s('type.semanticPrimitives.v',X20))),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X15))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),'const.pair.,_2'(s(X6,X16),s('type.ast.t',X17))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X18)))))))))))) => (? [X8,X9,X10] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0'))))))))) | ? [X8,X9,X10,X19,X20,X15,X16,X17,X18] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),'const.pair.,_2'(s(X6,X19),s('type.semanticPrimitives.v',X20))),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X15))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),'const.pair.,_2'(s(X6,X16),s('type.ast.t',X17))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X18))))))))))) | ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.ast.t'),X11),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),X12))))))))))) | ? [X8,X9,X10,X14,X13] : s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),X7) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X8),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X9),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X10),s('type.pair.prod'('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(X6,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(X6,'type.semanticPrimitives.v'),X14),s('type.list.list'('type.pair.prod'(X6,'type.semanticPrimitives.v')),X13))),s('type.list.list'('type.pair.prod'(X6,'type.ast.t')),'const.list.NIL_0')))))))))))),
  file('thm.typeSound.typeSound_|49|8_prove_ltb','thm.typeSound.typeSound_|49|8_prove_ltb')).
fof(f4741,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f407,f226])).
fof(f226,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X20,X18,X16] : (s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X12),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X13),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X14),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,X15),s('type.semanticPrimitives.v',X16))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),X17))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,X18),s('type.ast.t',X19))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),X20)))))))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4742,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f401,f225])).
fof(f225,plain,(
  ( ! [X23,X21,X22] : (s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X21),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X22),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X23),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0')))))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f401,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK14),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK16),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK14),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK16),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f403,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK17),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK19),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),sK20),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK21))))))))))) | $spl2),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK17),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK19),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),sK20),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK21))))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f405,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK22),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK23),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),sK26),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK25))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) | $spl4),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK22),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK23),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),sK26),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK25))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f407,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK27),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,sK34),s('type.semanticPrimitives.v',sK35))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK30))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,sK31),s('type.ast.t',sK32))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK33))))))))))) | $spl6),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK27),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,sK34),s('type.semanticPrimitives.v',sK35))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK30))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,sK31),s('type.ast.t',sK32))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK33))))))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f224,plain,(
  s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK27),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK28),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK29),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),'const.pair.,_2'(s(sK12,sK34),s('type.semanticPrimitives.v',sK35))),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK30))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),'const.pair.,_2'(s(sK12,sK31),s('type.ast.t',sK32))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK33))))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK22),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK23),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.semanticPrimitives.v'),sK26),s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),sK25))),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0'))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK17),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK18),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK19),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),sK20),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),sK21))))))))))) | s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) = s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),sK14),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),sK15),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',sK16),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.NIL_0')))))))))),
  inference(cnf_transformation,[],[f139])).
fof(f4744,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f403,f227])).
fof(f227,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),sK13) != s('type.pair.prod'('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.ast.t'))),X7),s('type.pair.prod'('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),'type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))))),'const.pair.,_2'(s('type.finite_map.fmap'('type.num.num','type.typeSoundInvariants.store_t'),X8),s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t')))),'const.pair.,_2'(s('type.num.num',X9),s('type.pair.prod'('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'type.list.list'('type.pair.prod'(sK12,'type.ast.t'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(sK12,'type.semanticPrimitives.v')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),'const.list.CONS_2'(s('type.pair.prod'(sK12,'type.ast.t'),X10),s('type.list.list'('type.pair.prod'(sK12,'type.ast.t')),X11)))))))))))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.typeSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 373
% Passive clauses: 1548
% Generated clauses: 4514
% Final active clauses: 373
% Final passive clauses: 994
% Input formulas: 37
% Initial clauses: 172
% 
% Duplicate literals: 153
% Trivial inequalities: 25
% Fw subsumption resolutions: 294
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2319
% 
% Binary resolution: 2810
% Factoring: 772
% Forward superposition: 166
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 101
% Split components: 205
% SAT solver clauses: 191
% SAT solver unit clauses: 10
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 1
% 
% Sat splits: 101
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 190
% TWLsolver calls for satisfiability: 162
% 
% Memory used [KB]: 2814
% Time elapsed: 0.198 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
