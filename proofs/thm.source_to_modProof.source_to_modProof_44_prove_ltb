Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.source_to_modProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.source_to_modProof
% SZS output start Proof for thm.source_to_modProof
fof(f4996,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4995,f223,f421,f419,f417,f415,f413,f411,f409,f407,f405,f4993,f4992,f4991,f4885,f4884,f4883,f4882,f4994])).
fof(f4994,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f419,f232])).
fof(f232,plain,(
  ( ! [X2,X3,X1] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK19))))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK21),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK22),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK23),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK25),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK26))))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK28),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK29))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK30),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK31),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK32))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK34),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK35))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK36)))))))))) & ! [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X23))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X24))))))))) & ! [X19,X20] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X19),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X20),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X17,X18] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X15,X16] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X13),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X14))))))))) & ! [X10,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X5),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X47,X48] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X47),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X48),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X45,X46] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X45),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X46),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X42,X43,X44] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X42),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X43),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X44))))))))) | ? [X40,X41] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X40),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X41),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X38,X39] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X38),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X39),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X35,X36,X37] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X35),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X36),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X37))))))))) | ? [X32,X33,X34] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X32),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X33),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X34))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X29,X30,X31] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X29),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X30),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X31))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X25,X26,X27,X28] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X26),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X27))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X28)))))))))) & ! [X21,X22,X23,X24] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X23))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X24))))))))) & ! [X19,X20] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X19),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X20),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X17,X18] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X15,X16] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X12,X13,X14] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X13),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X14))))))))) & ! [X10,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) & ! [X4,X5,X6] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X5),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X1,X2,X3] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X23,X24] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X23),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X24),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X21,X22] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X18,X19,X20] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X18),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X19),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X20))))))))) | ? [X16,X17] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X16),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X17),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X14,X15] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X15),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13))))))))) | ? [X8,X9,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X9),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X10))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X5),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X4)))))))))) & ! [X45,X46,X47,X48] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X45),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X46),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X47))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X48))))))))) & ! [X43,X44] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X43),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X44),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X41,X42] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X41),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X42),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X39,X40] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X39),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X40),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X36,X37,X38] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X36),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X37),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X38))))))))) & ! [X34,X35] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X34),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X35),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X31,X32,X33] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X31),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X32),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X33))))))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X28),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X29),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X30))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X25,X26,X27] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X26),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X27))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X23,X24] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X23),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X24),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X21,X22] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X18,X19,X20] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X18),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X19),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X20))))))))) | ? [X16,X17] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X16),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X17),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X14,X15] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X15),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13))))))))) | ? [X8,X9,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X9),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X10))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X5),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X4)))))))))) & (! [X45,X46,X47,X48] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X45),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X46),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X47))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X48))))))))) & ! [X43,X44] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X43),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X44),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X41,X42] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X41),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X42),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X39,X40] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X39),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X40),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) & ! [X36,X37,X38] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X36),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X37),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X38))))))))) & ! [X34,X35] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X34),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X35),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X31,X32,X33] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X31),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X32),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X33))))))))) & ! [X28,X29,X30] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X28),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X29),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X30))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) & ! [X25,X26,X27] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X26),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X27))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X23,X24] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X23),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X24),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X21,X22] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X18,X19,X20] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X18),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X19),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X20))))))))) | ? [X16,X17] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X16),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X17),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X14,X15] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X14),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X15),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X11,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X11),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13))))))))) | ? [X8,X9,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X8),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X9),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X10))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X5,X6,X7] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X5),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X7))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X1,X2,X3,X4] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X1),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X2),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X3))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X4)))))))))) => (? [X45,X46,X47,X48] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X45),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X46),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X47))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X48))))))))) | ? [X43,X44] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X43),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X44),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X41,X42] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X41),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X42),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X39,X40] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X39),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X40),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X36,X37,X38] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X36),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X37),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X38))))))))) | ? [X34,X35] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X34),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X35),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X31,X32,X33] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X31),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X32),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X33))))))))) | ? [X28,X29,X30] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X28),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X29),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X30))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X25,X26,X27] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X0) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X25),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X26),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X27))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X10))))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13)))))))))) => (? [X7,X8,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X10))))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X10))))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13)))))))))) => (? [X7,X8,X12,X13] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X12))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X13))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | ? [X7,X8,X9] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9))))))))) | ? [X7,X8] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X10] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X10))))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | ? [X7,X8,X11] : s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),X6) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))))),
  file('thm.source_to_modProof.source_to_modProof_44_prove_ltb','thm.source_to_modProof.source_to_modProof_44_prove_ltb')).
fof(f4882,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f415,f230])).
fof(f230,plain,(
  ( ! [X8,X7,X9] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X7),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X8),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X9)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4883,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f407,f227])).
fof(f227,plain,(
  ( ! [X15,X16] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4884,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f409,f228])).
fof(f228,plain,(
  ( ! [X14,X12,X13] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X12),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X13),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X14)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4885,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f411,f229])).
fof(f229,plain,(
  ( ! [X10,X11] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X10),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X11),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4991,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f421,f224])).
fof(f224,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X21),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X22),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X23))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),X24)))))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4992,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f417,f231])).
fof(f231,plain,(
  ( ! [X6,X4,X5] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X4),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X5),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X6))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4993,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f405,f225])).
fof(f225,plain,(
  ( ! [X19,X20] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X19),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X20),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f405,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | $spl0),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f407,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | $spl2),
  inference(cnf_transformation,[],[f407_D])).
fof(f407_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f409,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK19))))))))) | $spl4),
  inference(cnf_transformation,[],[f409_D])).
fof(f409_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK19))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f411,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK21),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | $spl6),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK21),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f413,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK22),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK23),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | $spl8),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK22),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK23),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f415,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK25),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK26))))))))) | $spl10),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK25),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK26))))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f417,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK28),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK29))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | $spl12),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK28),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK29))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f419,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK30),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK31),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK32))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | $spl14),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK30),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK31),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK32))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f421,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK34),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK35))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK36))))))))) | $spl16),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK34),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK35))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK36))))))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f223,plain,(
  s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK33),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK34),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK35))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK36))))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK30),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK31),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK32))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK27),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK28),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK29))),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK24),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK25),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK26))))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK22),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK23),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK20),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK21),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')),sK19))))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK15),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK16),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0'))))))) | s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) = s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),sK13),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),sK14),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.No_match_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.No_match_0')))))))),
  inference(cnf_transformation,[],[f138])).
fof(f4995,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f413,f226])).
fof(f226,plain,(
  ( ! [X17,X18] : (s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),sK12) != s('type.pair.prod'('type.list.list'('type.option.option'('type.modSem.v')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))))),'const.pair.,_2'(s('type.list.list'('type.option.option'('type.modSem.v')),X17),s('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),X18),s('type.pair.prod'('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v')))),'const.pair.,_2'(s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.semanticPrimitives.Match_type_error_0'),s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.modSem.v'))),'const.semanticPrimitives.Match_type_error_0')))))))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.source_to_modProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 405
% Passive clauses: 1562
% Generated clauses: 4766
% Final active clauses: 405
% Final passive clauses: 960
% Input formulas: 37
% Initial clauses: 177
% 
% Duplicate literals: 156
% Trivial inequalities: 29
% Fw subsumption resolutions: 325
% 
% Simple tautologies: 145
% Equational tautologies: 37
% Forward subsumptions: 2479
% 
% Binary resolution: 2946
% Factoring: 819
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 115
% Split components: 238
% SAT solver clauses: 240
% SAT solver unit clauses: 15
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 1
% 
% Sat splits: 115
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 239
% TWLsolver calls for satisfiability: 196
% 
% Memory used [KB]: 2942
% Time elapsed: 0.149 s
% ------------------------------
% ------------------------------
% Success in time 0.149 s
