Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_relationProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_relationProps
% SZS output start Proof for thm.clos_relationProps
fof(f534,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f515])).
fof(f515,plain,(
  s(bool,'T_0') != s(bool,'T_0')),
  inference(superposition,[],[f59,f72])).
fof(f72,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : ! [X9,X8] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X12)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X12),X8))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X12)),X9)))),
  file('thm.clos_relationProps.res_rel_typeerror','thm.clos_relation.res_rel_rw|split|3')).
fof(f59,plain,(
  s(bool,'T_0') != s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(sK0),sK2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),sK1)))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  s(bool,'T_0') != s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(sK0),sK2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(sK0)),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f41])).
fof(f41,plain,(
  ? [X0,X1,X2] : s(bool,'T_0') != s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1,X2] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ~! [X0] : ! [X1,X2] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X0),X2))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X0)),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X6),X8))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(bool,'T_0') = s(bool,'const.clos_relation.res_rel_2'(s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),s('type.closSem.state'(X6),X8))),s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(X6)),X7)))),
  file('thm.clos_relationProps.res_rel_typeerror','thm.clos_relationProps.res_rel_typeerror')).
% SZS output end Proof for thm.clos_relationProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 77
% Generated clauses: 448
% Final active clauses: 18
% Final passive clauses: 37
% Input formulas: 16
% Initial clauses: 31
% 
% Duplicate literals: 59
% Trivial inequalities: 20
% Fw subsumption resolutions: 31
% Bw demodulations: 3
% 
% Simple tautologies: 44
% Equational tautologies: 16
% Forward subsumptions: 195
% 
% Binary resolution: 16
% Forward superposition: 120
% Backward superposition: 110
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 4
% SAT solver unit clauses: 3
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 4
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 767
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 0.044 s
