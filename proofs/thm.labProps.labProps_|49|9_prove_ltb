Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labProps
% (60395)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 160
% Passive clauses: 2475
% Generated clauses: 20444
% Final active clauses: 156
% Final passive clauses: 1998
% Input formulas: 21
% Initial clauses: 43
% 
% Duplicate literals: 617
% Trivial inequalities: 847
% Fw subsumption resolutions: 2380
% Fw demodulations: 4827
% Bw demodulations: 1
% 
% Simple tautologies: 456
% Equational tautologies: 37
% Forward subsumptions: 8602
% 
% Binary resolution: 166
% Factoring: 1
% Forward superposition: 6083
% Backward superposition: 5209
% Self superposition: 111
% Equality factoring: 74
% Equality resolution: 35
% 
% Split clauses: 118
% Split components: 249
% SAT solver clauses: 433
% SAT solver unit clauses: 20
% SAT solver binary clauses: 171
% 
% Sat splits: 118
% Sat splitting refutations: 43
% 
% TWLsolver clauses: 430
% TWLsolver calls for satisfiability: 66
% 
% Memory used [KB]: 9594
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.labProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labProps
% SZS output start Proof for thm.labProps
fof(f5609,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5608,f3230,f3233,f81,f124,f122,f152])).
fof(f152,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),sK12(X4,X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK13(X4,X3,X2,X1,X0))))) ) | $spl50),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),sK12(X4,X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK13(X4,X3,X2,X1,X0))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f122,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),sK12(X4,X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK13(X4,X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),sK12(X4,X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK13(X4,X3,X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8,X13,X10] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X7),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X7),'const.labSem.state_ffi_1'(s('type.labSem.state'(X6,X7),X13))),s('type.num.num',X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8)))),
  file('thm.labProps.labProps_|49|9_prove_ltb','thm.labProps.labProps_|49|7_prove_ltb')).
fof(f124,plain,(
  ( ! [X6,X5] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK2),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3)))) ) | $spl0),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ( ! [X6,X5] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK2),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f81,plain,(
  ( ! [X6,X5] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK2),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK2),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2,X3,X4] : ! [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.labSem.state_ffi_1'(s('type.labSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X7),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X7),'const.labSem.state_ffi_1'(s('type.labSem.state'(X6,X7),X9))),s('type.num.num',X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X7),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X7),'const.labSem.state_ffi_1'(s('type.labSem.state'(X6,X7),X9))),s('type.num.num',X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8)))),
  file('thm.labProps.labProps_|49|9_prove_ltb','thm.labProps.labProps_|49|9_prove_ltb')).
fof(f3233,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(X3,sK2),X1))),s('type.num.num',X0),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))) ) | $spl524),
  inference(cnf_transformation,[],[f3233_D])).
fof(f3233_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(X3,sK2),X1))),s('type.num.num',X0),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))) ) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f3230,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(sK1,sK2),sK4))),s('type.num.num',sK5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK3))) != s('type.pair.prod'('type.ffi.ffi_state'(sK2),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK2),'const.labSem.state_ffi_1'(s('type.labSem.state'(X3,sK2),X1))),s('type.num.num',X0),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))) ) | ($spl0 | $spl50)),
  inference(superposition,[],[f124,f152])).
fof(f5608,plain,(
  $false | $spl524),
  inference(equality_resolution,[],[f3233])).
% SZS output end Proof for thm.labProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 77
% Passive clauses: 409
% Generated clauses: 5460
% Final active clauses: 68
% Final passive clauses: 277
% Input formulas: 21
% Initial clauses: 43
% 
% Duplicate literals: 328
% Trivial inequalities: 187
% Fw subsumption resolutions: 500
% Fw demodulations: 373
% Bw demodulations: 62
% Condensations: 519
% Global subsumptions: 1
% 
% Simple tautologies: 171
% Equational tautologies: 34
% Forward subsumptions: 2281
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 85
% Factoring: 1
% Forward superposition: 1372
% Backward superposition: 1398
% Self superposition: 84
% Equality factoring: 71
% Equality resolution: 19
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 688
% SAT solver unit clauses: 45
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 3
% 
% Sat splits: 22
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 683
% TWLsolver calls for satisfiability: 1511
% 
% Memory used [KB]: 5117
% Time elapsed: 0.277 s
% ------------------------------
% ------------------------------
% Success in time 0.91 s
