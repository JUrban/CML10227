Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.reg_allocProof
% (74494)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 874
% Passive clauses: 8150
% Generated clauses: 23067
% Final active clauses: 800
% Final passive clauses: 6878
% Input formulas: 132
% Initial clauses: 341
% 
% Duplicate literals: 171
% Trivial inequalities: 156
% Fw subsumption resolutions: 1112
% Fw demodulations: 3354
% Bw demodulations: 73
% 
% Simple tautologies: 301
% Equational tautologies: 26
% Forward subsumptions: 9135
% 
% Binary resolution: 5940
% Factoring: 477
% Forward superposition: 5026
% Backward superposition: 6133
% Self superposition: 56
% Equality factoring: 2
% Equality resolution: 34
% 
% Split clauses: 375
% Split components: 752
% SAT solver clauses: 514
% SAT solver unit clauses: 9
% SAT solver binary clauses: 94
% 
% Sat splits: 375
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 510
% TWLsolver calls for satisfiability: 288
% 
% Memory used [KB]: 15735
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.reg_allocProof
% (74511)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 404
% Passive clauses: 3313
% Generated clauses: 14400
% Final active clauses: 399
% Final passive clauses: 2887
% Input formulas: 132
% Initial clauses: 341
% 
% Duplicate literals: 92
% Trivial inequalities: 2
% Fw subsumption resolutions: 389
% Fw demodulations: 1857
% Bw demodulations: 27
% Condensations: 79
% Global subsumptions: 20
% 
% Simple tautologies: 257
% Equational tautologies: 12
% Forward subsumptions: 4778
% 
% Binary resolution: 2475
% Factoring: 156
% Forward superposition: 3223
% Backward superposition: 2361
% Self superposition: 51
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 16
% Split components: 32
% SAT solver clauses: 3946
% SAT solver unit clauses: 361
% SAT solver binary clauses: 97
% SAT solver learnt clauses: 40
% SAT solver learnt literals: 10
% 
% Sat splits: 16
% 
% TWLsolver clauses: 3866
% TWLsolver calls for satisfiability: 2437
% 
% Memory used [KB]: 21492
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.reg_allocProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.reg_allocProof
% SZS output start Proof for thm.reg_allocProof
fof(f22635,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f556,f853])).
fof(f853,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK41(X2,X1,X0)),s('type.list.list'('type.num.num'),sK42(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f553])).
fof(f553,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK41(X2,X1,X0)),s('type.list.list'('type.num.num'),sK42(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41,sK42])],[f315])).
fof(f315,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3),s('type.list.list'('type.num.num'),X4))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),X0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X2)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X26,X8,X10] : ? [X27,X28] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X27),s('type.list.list'('type.num.num'),X28))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X8),s('type.list.list'('type.num.num'),X26),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|4_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||48|3_prove_ltb')).
fof(f556,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4),s('type.list.list'('type.num.num'),X5))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),sK13),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK14))))))),s('type.list.list'('type.num.num'),sK12))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK15)))) )),
  inference(cnf_transformation,[],[f415])).
fof(f415,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4),s('type.list.list'('type.num.num'),X5))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),sK13),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),sK14))))))),s('type.list.list'('type.num.num'),sK12))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),sK15)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f342])).
fof(f342,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4),s('type.list.list'('type.num.num'),X5))) != s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X2))))))),s('type.list.list'('type.num.num'),X0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))),
  inference(ennf_transformation,[],[f134])).
fof(f134,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X4),s('type.list.list'('type.num.num'),X5))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X1),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X2))))))),s('type.list.list'('type.num.num'),X0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10),s('type.list.list'('type.num.num'),X11))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X7),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X8))))))),s('type.list.list'('type.num.num'),X6))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X10),s('type.list.list'('type.num.num'),X11))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),X7),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s(fun('type.num.num',bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun('type.num.num',bool),'_dst_x1x0_2'(s(fun('type.num.num',fun(fun('type.num.num',bool),bool)),'const.bool.IN_0'),s(fun('type.num.num',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),X8))))))),s('type.list.list'('type.num.num'),X6))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),X9)))),
  file('thm.reg_allocProof.reg_allocProof_|49||48|4_prove_ltb','thm.reg_allocProof.reg_allocProof_|49||48|4_prove_ltb')).
% SZS output end Proof for thm.reg_allocProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 437
% Passive clauses: 2612
% Generated clauses: 22163
% Final active clauses: 423
% Final passive clauses: 1963
% Input formulas: 132
% Initial clauses: 341
% 
% Duplicate literals: 7
% Trivial inequalities: 4
% Fw subsumption resolutions: 350
% Fw demodulations: 7377
% Bw demodulations: 101
% Condensations: 23
% 
% Simple tautologies: 101
% Equational tautologies: 30
% Forward subsumptions: 6451
% Fw demodulations to eq. taut.: 4686
% Bw demodulations to eq. taut.: 21
% 
% Unit resulting resolution: 9221
% Factoring: 1
% Forward superposition: 2855
% Backward superposition: 2060
% Self superposition: 51
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 16
% Split components: 32
% SAT solver clauses: 3093
% SAT solver unit clauses: 992
% SAT solver binary clauses: 1567
% 
% Sat splits: 16
% Sat splitting refutations: 447
% 
% Memory used [KB]: 22131
% Time elapsed: 0.771 s
% ------------------------------
% ------------------------------
% Success in time 2.12 s
