Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlProps
% SZS output start Proof for thm.bvlProps
fof(f4265,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4264,f223,f439,f437,f435,f433,f431,f429,f427,f425,f423,f421,f419,f417,f415,f413,f411,f4262,f4261,f4260,f4259,f4258,f4257,f4256,f4255,f4254,f4253,f4252,f4251,f451,f4263])).
fof(f4263,plain,(
  $false | $spl28),
  inference(subsumption_resolution,[],[f439,f238])).
fof(f238,plain,(
  ( ! [X2,X1] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  (s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK13))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK14),s('type.bvl.exp',sK15),s('type.bvl.exp',sK16))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK17),s('type.bvl.exp',sK18))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK19))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK20))),s('type.bvl.exp',sK21))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK22),s('type.bvl.exp',sK23),s('type.bvl.exp',sK24))),s('type.bvl.exp',sK25))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK26),s('type.bvl.exp',sK27))),s('type.bvl.exp',sK28))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK29))),s('type.bvl.exp',sK30))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK31),s('type.bvl.exp',sK32))),s('type.bvl.exp',sK33))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK34))),s('type.bvl.exp',sK35))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK36),s('type.option.option'('type.num.num'),sK37),s('type.list.list'('type.bvl.exp'),sK38))),s('type.bvl.exp',sK39))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK40),s('type.list.list'('type.bvl.exp'),sK41))),s('type.bvl.exp',sK42))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK43))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK44),s('type.option.option'('type.num.num'),sK45),s('type.list.list'('type.bvl.exp'),sK46))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK47),s('type.list.list'('type.bvl.exp'),sK48)))) & ! [X34,X35,X36] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X34),s('type.bvl.exp',X35))),s('type.bvl.exp',X36))) & ! [X32,X33] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X32))),s('type.bvl.exp',X33))) & ! [X28,X29,X30,X31] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X28),s('type.bvl.exp',X29),s('type.bvl.exp',X30))),s('type.bvl.exp',X31))) & ! [X26,X27] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X26))),s('type.bvl.exp',X27))) & ! [X23,X24,X25] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X23),s('type.bvl.exp',X24))),s('type.bvl.exp',X25))) & ! [X21,X22] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X22))) & ! [X17,X18,X19,X20] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X17),s('type.option.option'('type.num.num'),X18),s('type.list.list'('type.bvl.exp'),X19))),s('type.bvl.exp',X20))) & ! [X14,X15,X16] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.bvl.exp'),X15))),s('type.bvl.exp',X16))) & ! [X13] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X13))) & ! [X10,X11,X12] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X10),s('type.bvl.exp',X11),s('type.bvl.exp',X12))) & ! [X8,X9] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X8),s('type.bvl.exp',X9))) & ! [X7] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X7))) & ! [X6] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) & ! [X3,X4,X5] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) & ! [X1,X2] : s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37,sK38,sK39,sK40,sK41,sK42,sK43,sK44,sK45,sK46,sK47,sK48])],[f137])).
fof(f137,plain,(
  ? [X0] : ((? [X72] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X72))) | ? [X69,X70,X71] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X69),s('type.bvl.exp',X70),s('type.bvl.exp',X71))) | ? [X67,X68] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X67),s('type.bvl.exp',X68))) | ? [X66] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X66))) | ? [X64,X65] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X64))),s('type.bvl.exp',X65))) | ? [X60,X61,X62,X63] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X60),s('type.bvl.exp',X61),s('type.bvl.exp',X62))),s('type.bvl.exp',X63))) | ? [X57,X58,X59] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X57),s('type.bvl.exp',X58))),s('type.bvl.exp',X59))) | ? [X55,X56] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X55))),s('type.bvl.exp',X56))) | ? [X52,X53,X54] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X52),s('type.bvl.exp',X53))),s('type.bvl.exp',X54))) | ? [X50,X51] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X50))),s('type.bvl.exp',X51))) | ? [X46,X47,X48,X49] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X46),s('type.option.option'('type.num.num'),X47),s('type.list.list'('type.bvl.exp'),X48))),s('type.bvl.exp',X49))) | ? [X43,X44,X45] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X43),s('type.list.list'('type.bvl.exp'),X44))),s('type.bvl.exp',X45))) | ? [X42] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X42))) | ? [X39,X40,X41] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X39),s('type.option.option'('type.num.num'),X40),s('type.list.list'('type.bvl.exp'),X41))) | ? [X37,X38] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.bvl.exp'),X38)))) & ! [X34,X35,X36] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X34),s('type.bvl.exp',X35))),s('type.bvl.exp',X36))) & ! [X32,X33] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X32))),s('type.bvl.exp',X33))) & ! [X28,X29,X30,X31] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X28),s('type.bvl.exp',X29),s('type.bvl.exp',X30))),s('type.bvl.exp',X31))) & ! [X26,X27] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X26))),s('type.bvl.exp',X27))) & ! [X23,X24,X25] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X23),s('type.bvl.exp',X24))),s('type.bvl.exp',X25))) & ! [X21,X22] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X22))) & ! [X17,X18,X19,X20] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X17),s('type.option.option'('type.num.num'),X18),s('type.list.list'('type.bvl.exp'),X19))),s('type.bvl.exp',X20))) & ! [X14,X15,X16] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.bvl.exp'),X15))),s('type.bvl.exp',X16))) & ! [X13] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X13))) & ! [X10,X11,X12] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X10),s('type.bvl.exp',X11),s('type.bvl.exp',X12))) & ! [X8,X9] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X8),s('type.bvl.exp',X9))) & ! [X7] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X7))) & ! [X6] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) & ! [X3,X4,X5] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) & ! [X1,X2] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2))))),
  inference(rectify,[],[f97])).
fof(f97,plain,(
  ? [X0] : ((? [X36] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X36))) | ? [X33,X34,X35] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X33),s('type.bvl.exp',X34),s('type.bvl.exp',X35))) | ? [X31,X32] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X31),s('type.bvl.exp',X32))) | ? [X30] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X30))) | ? [X28,X29] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X28))),s('type.bvl.exp',X29))) | ? [X24,X25,X26,X27] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X24),s('type.bvl.exp',X25),s('type.bvl.exp',X26))),s('type.bvl.exp',X27))) | ? [X21,X22,X23] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X21),s('type.bvl.exp',X22))),s('type.bvl.exp',X23))) | ? [X19,X20] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X19))),s('type.bvl.exp',X20))) | ? [X16,X17,X18] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X16),s('type.bvl.exp',X17))),s('type.bvl.exp',X18))) | ? [X14,X15] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X14))),s('type.bvl.exp',X15))) | ? [X10,X11,X12,X13] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X10),s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.bvl.exp'),X12))),s('type.bvl.exp',X13))) | ? [X7,X8,X9] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X7),s('type.list.list'('type.bvl.exp'),X8))),s('type.bvl.exp',X9))) | ? [X6] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) | ? [X3,X4,X5] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) | ? [X1,X2] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))) & ! [X70,X71,X72] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X70),s('type.bvl.exp',X71))),s('type.bvl.exp',X72))) & ! [X68,X69] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X68))),s('type.bvl.exp',X69))) & ! [X64,X65,X66,X67] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X64),s('type.bvl.exp',X65),s('type.bvl.exp',X66))),s('type.bvl.exp',X67))) & ! [X62,X63] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X62))),s('type.bvl.exp',X63))) & ! [X59,X60,X61] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X59),s('type.bvl.exp',X60))),s('type.bvl.exp',X61))) & ! [X57,X58] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X57))),s('type.bvl.exp',X58))) & ! [X53,X54,X55,X56] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X53),s('type.option.option'('type.num.num'),X54),s('type.list.list'('type.bvl.exp'),X55))),s('type.bvl.exp',X56))) & ! [X50,X51,X52] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X50),s('type.list.list'('type.bvl.exp'),X51))),s('type.bvl.exp',X52))) & ! [X49] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X49))) & ! [X46,X47,X48] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X46),s('type.bvl.exp',X47),s('type.bvl.exp',X48))) & ! [X44,X45] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X44),s('type.bvl.exp',X45))) & ! [X43] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X43))) & ! [X42] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X42))) & ! [X39,X40,X41] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X39),s('type.option.option'('type.num.num'),X40),s('type.list.list'('type.bvl.exp'),X41))) & ! [X37,X38] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.bvl.exp'),X38))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ? [X0] : ((? [X36] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X36))) | ? [X33,X34,X35] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X33),s('type.bvl.exp',X34),s('type.bvl.exp',X35))) | ? [X31,X32] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X31),s('type.bvl.exp',X32))) | ? [X30] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X30))) | ? [X28,X29] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X28))),s('type.bvl.exp',X29))) | ? [X24,X25,X26,X27] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X24),s('type.bvl.exp',X25),s('type.bvl.exp',X26))),s('type.bvl.exp',X27))) | ? [X21,X22,X23] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X21),s('type.bvl.exp',X22))),s('type.bvl.exp',X23))) | ? [X19,X20] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X19))),s('type.bvl.exp',X20))) | ? [X16,X17,X18] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X16),s('type.bvl.exp',X17))),s('type.bvl.exp',X18))) | ? [X14,X15] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X14))),s('type.bvl.exp',X15))) | ? [X10,X11,X12,X13] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X10),s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.bvl.exp'),X12))),s('type.bvl.exp',X13))) | ? [X7,X8,X9] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X7),s('type.list.list'('type.bvl.exp'),X8))),s('type.bvl.exp',X9))) | ? [X6] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) | ? [X3,X4,X5] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) | ? [X1,X2] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))) & (! [X70,X71,X72] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X70),s('type.bvl.exp',X71))),s('type.bvl.exp',X72))) & ! [X68,X69] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X68))),s('type.bvl.exp',X69))) & ! [X64,X65,X66,X67] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X64),s('type.bvl.exp',X65),s('type.bvl.exp',X66))),s('type.bvl.exp',X67))) & ! [X62,X63] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X62))),s('type.bvl.exp',X63))) & ! [X59,X60,X61] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X59),s('type.bvl.exp',X60))),s('type.bvl.exp',X61))) & ! [X57,X58] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X57))),s('type.bvl.exp',X58))) & ! [X53,X54,X55,X56] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X53),s('type.option.option'('type.num.num'),X54),s('type.list.list'('type.bvl.exp'),X55))),s('type.bvl.exp',X56))) & ! [X50,X51,X52] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X50),s('type.list.list'('type.bvl.exp'),X51))),s('type.bvl.exp',X52))) & ! [X49] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X49))) & ! [X46,X47,X48] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X46),s('type.bvl.exp',X47),s('type.bvl.exp',X48))) & ! [X44,X45] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X44),s('type.bvl.exp',X45))) & ! [X43] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X43))) & ! [X42] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X42))) & ! [X39,X40,X41] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X39),s('type.option.option'('type.num.num'),X40),s('type.list.list'('type.bvl.exp'),X41))) & ! [X37,X38] : s('type.bvl.exp',X0) != s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.bvl.exp'),X38)))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ((? [X36] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X36))) | ? [X33,X34,X35] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X33),s('type.bvl.exp',X34),s('type.bvl.exp',X35))) | ? [X31,X32] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X31),s('type.bvl.exp',X32))) | ? [X30] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X30))) | ? [X28,X29] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X28))),s('type.bvl.exp',X29))) | ? [X24,X25,X26,X27] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X24),s('type.bvl.exp',X25),s('type.bvl.exp',X26))),s('type.bvl.exp',X27))) | ? [X21,X22,X23] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X21),s('type.bvl.exp',X22))),s('type.bvl.exp',X23))) | ? [X19,X20] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X19))),s('type.bvl.exp',X20))) | ? [X16,X17,X18] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X16),s('type.bvl.exp',X17))),s('type.bvl.exp',X18))) | ? [X14,X15] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X14))),s('type.bvl.exp',X15))) | ? [X10,X11,X12,X13] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X10),s('type.option.option'('type.num.num'),X11),s('type.list.list'('type.bvl.exp'),X12))),s('type.bvl.exp',X13))) | ? [X7,X8,X9] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X7),s('type.list.list'('type.bvl.exp'),X8))),s('type.bvl.exp',X9))) | ? [X6] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6))) | ? [X3,X4,X5] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5))) | ? [X1,X2] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X1),s('type.list.list'('type.bvl.exp'),X2)))) => (? [X70,X71,X72] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X70),s('type.bvl.exp',X71))),s('type.bvl.exp',X72))) | ? [X68,X69] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X68))),s('type.bvl.exp',X69))) | ? [X64,X65,X66,X67] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X64),s('type.bvl.exp',X65),s('type.bvl.exp',X66))),s('type.bvl.exp',X67))) | ? [X62,X63] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X62))),s('type.bvl.exp',X63))) | ? [X59,X60,X61] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X59),s('type.bvl.exp',X60))),s('type.bvl.exp',X61))) | ? [X57,X58] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X57))),s('type.bvl.exp',X58))) | ? [X53,X54,X55,X56] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X53),s('type.option.option'('type.num.num'),X54),s('type.list.list'('type.bvl.exp'),X55))),s('type.bvl.exp',X56))) | ? [X50,X51,X52] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X50),s('type.list.list'('type.bvl.exp'),X51))),s('type.bvl.exp',X52))) | ? [X49] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X49))) | ? [X46,X47,X48] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X46),s('type.bvl.exp',X47),s('type.bvl.exp',X48))) | ? [X44,X45] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X44),s('type.bvl.exp',X45))) | ? [X43] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X43))) | ? [X42] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X42))) | ? [X39,X40,X41] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X39),s('type.option.option'('type.num.num'),X40),s('type.list.list'('type.bvl.exp'),X41))) | ? [X37,X38] : s('type.bvl.exp',X0) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.bvl.exp'),X38)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((? [X7] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7))) | ? [X8,X9,X10] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10))) | ? [X11,X12] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12))) | ? [X13] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13))) | ? [X14,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X14))),s('type.bvl.exp',X15))) | ? [X16,X17,X18,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X16),s('type.bvl.exp',X17),s('type.bvl.exp',X18))),s('type.bvl.exp',X15))) | ? [X19,X20,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X19),s('type.bvl.exp',X20))),s('type.bvl.exp',X15))) | ? [X21,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X15))) | ? [X22,X23,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X22),s('type.bvl.exp',X23))),s('type.bvl.exp',X15))) | ? [X24,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X24))),s('type.bvl.exp',X15))) | ? [X25,X26,X27,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X25),s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.bvl.exp'),X27))),s('type.bvl.exp',X15))) | ? [X28,X29,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.bvl.exp'),X29))),s('type.bvl.exp',X15))) | ? [X30] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X30))) | ? [X31,X32,X33] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.bvl.exp'),X33))) | ? [X34,X35] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X34),s('type.list.list'('type.bvl.exp'),X35)))) => (? [X19,X20,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X19),s('type.bvl.exp',X20))),s('type.bvl.exp',X15))) | ? [X14,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X14))),s('type.bvl.exp',X15))) | ? [X16,X17,X18,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X16),s('type.bvl.exp',X17),s('type.bvl.exp',X18))),s('type.bvl.exp',X15))) | ? [X21,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X15))) | ? [X22,X23,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X22),s('type.bvl.exp',X23))),s('type.bvl.exp',X15))) | ? [X24,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X24))),s('type.bvl.exp',X15))) | ? [X25,X26,X27,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X25),s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.bvl.exp'),X27))),s('type.bvl.exp',X15))) | ? [X28,X29,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.bvl.exp'),X29))),s('type.bvl.exp',X15))) | ? [X7] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7))) | ? [X8,X9,X10] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10))) | ? [X11,X12] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12))) | ? [X13] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13))) | ? [X30] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X30))) | ? [X31,X32,X33] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.bvl.exp'),X33))) | ? [X34,X35] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X34),s('type.list.list'('type.bvl.exp'),X35)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((? [X7] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7))) | ? [X8,X9,X10] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10))) | ? [X11,X12] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12))) | ? [X13] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13))) | ? [X14,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X14))),s('type.bvl.exp',X15))) | ? [X16,X17,X18,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X16),s('type.bvl.exp',X17),s('type.bvl.exp',X18))),s('type.bvl.exp',X15))) | ? [X19,X20,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X19),s('type.bvl.exp',X20))),s('type.bvl.exp',X15))) | ? [X21,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X15))) | ? [X22,X23,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X22),s('type.bvl.exp',X23))),s('type.bvl.exp',X15))) | ? [X24,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X24))),s('type.bvl.exp',X15))) | ? [X25,X26,X27,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X25),s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.bvl.exp'),X27))),s('type.bvl.exp',X15))) | ? [X28,X29,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.bvl.exp'),X29))),s('type.bvl.exp',X15))) | ? [X30] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X30))) | ? [X31,X32,X33] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.bvl.exp'),X33))) | ? [X34,X35] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X34),s('type.list.list'('type.bvl.exp'),X35)))) => (? [X19,X20,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X19),s('type.bvl.exp',X20))),s('type.bvl.exp',X15))) | ? [X14,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X14))),s('type.bvl.exp',X15))) | ? [X16,X17,X18,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X16),s('type.bvl.exp',X17),s('type.bvl.exp',X18))),s('type.bvl.exp',X15))) | ? [X21,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X15))) | ? [X22,X23,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X22),s('type.bvl.exp',X23))),s('type.bvl.exp',X15))) | ? [X24,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X24))),s('type.bvl.exp',X15))) | ? [X25,X26,X27,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X25),s('type.option.option'('type.num.num'),X26),s('type.list.list'('type.bvl.exp'),X27))),s('type.bvl.exp',X15))) | ? [X28,X29,X15] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.bvl.exp'),X29))),s('type.bvl.exp',X15))) | ? [X7] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X7))) | ? [X8,X9,X10] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X8),s('type.bvl.exp',X9),s('type.bvl.exp',X10))) | ? [X11,X12] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X11),s('type.bvl.exp',X12))) | ? [X13] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X13))) | ? [X30] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X30))) | ? [X31,X32,X33] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X31),s('type.option.option'('type.num.num'),X32),s('type.list.list'('type.bvl.exp'),X33))) | ? [X34,X35] : s('type.bvl.exp',X6) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X34),s('type.list.list'('type.bvl.exp'),X35)))))),
  file('thm.bvlProps.bvlProps_65_prove_ltb','thm.bvlProps.bvlProps_65_prove_ltb')).
fof(f451,plain,(
  $false | $spl6),
  inference(subsumption_resolution,[],[f417,f235])).
fof(f235,plain,(
  ( ! [X7] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X7)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4251,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f431,f230])).
fof(f230,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X17),s('type.option.option'('type.num.num'),X18),s('type.list.list'('type.bvl.exp'),X19))),s('type.bvl.exp',X20)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4252,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f421,f226])).
fof(f226,plain,(
  ( ! [X30,X28,X31,X29] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X28),s('type.bvl.exp',X29),s('type.bvl.exp',X30))),s('type.bvl.exp',X31)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4253,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f413,f233])).
fof(f233,plain,(
  ( ! [X12,X10,X11] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',X10),s('type.bvl.exp',X11),s('type.bvl.exp',X12)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4254,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f429,f229])).
fof(f229,plain,(
  ( ! [X21,X22] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X21))),s('type.bvl.exp',X22)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4255,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f435,f236])).
fof(f236,plain,(
  ( ! [X6] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',X6)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4256,plain,(
  $false | $spl26),
  inference(subsumption_resolution,[],[f437,f237])).
fof(f237,plain,(
  ( ! [X4,X5,X3] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',X3),s('type.option.option'('type.num.num'),X4),s('type.list.list'('type.bvl.exp'),X5)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4257,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f427,f228])).
fof(f228,plain,(
  ( ! [X24,X23,X25] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',X23),s('type.bvl.exp',X24))),s('type.bvl.exp',X25)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4258,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f411,f232])).
fof(f232,plain,(
  ( ! [X13] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X13)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4259,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f415,f234])).
fof(f234,plain,(
  ( ! [X8,X9] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X8),s('type.bvl.exp',X9)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4260,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f425,f227])).
fof(f227,plain,(
  ( ! [X26,X27] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',X26))),s('type.bvl.exp',X27)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4261,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f423,f224])).
fof(f224,plain,(
  ( ! [X35,X36,X34] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),X34),s('type.bvl.exp',X35))),s('type.bvl.exp',X36)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f4262,plain,(
  $false | $spl22),
  inference(subsumption_resolution,[],[f433,f231])).
fof(f231,plain,(
  ( ! [X14,X15,X16] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.bvl.exp'),X15))),s('type.bvl.exp',X16)))) )),
  inference(cnf_transformation,[],[f138])).
fof(f411,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK13))) | $spl0),
  inference(cnf_transformation,[],[f411_D])).
fof(f411_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f413,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK14),s('type.bvl.exp',sK15),s('type.bvl.exp',sK16))) | $spl2),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK14),s('type.bvl.exp',sK15),s('type.bvl.exp',sK16))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f415,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK17),s('type.bvl.exp',sK18))) | $spl4),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK17),s('type.bvl.exp',sK18))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f417,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK19))) | $spl6),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK19))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f419,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK20))),s('type.bvl.exp',sK21))) | $spl8),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK20))),s('type.bvl.exp',sK21))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f421,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK22),s('type.bvl.exp',sK23),s('type.bvl.exp',sK24))),s('type.bvl.exp',sK25))) | $spl10),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK22),s('type.bvl.exp',sK23),s('type.bvl.exp',sK24))),s('type.bvl.exp',sK25))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f423,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK26),s('type.bvl.exp',sK27))),s('type.bvl.exp',sK28))) | $spl12),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK26),s('type.bvl.exp',sK27))),s('type.bvl.exp',sK28))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f425,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK29))),s('type.bvl.exp',sK30))) | $spl14),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK29))),s('type.bvl.exp',sK30))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f427,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK31),s('type.bvl.exp',sK32))),s('type.bvl.exp',sK33))) | $spl16),
  inference(cnf_transformation,[],[f427_D])).
fof(f427_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK31),s('type.bvl.exp',sK32))),s('type.bvl.exp',sK33))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f429,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK34))),s('type.bvl.exp',sK35))) | $spl18),
  inference(cnf_transformation,[],[f429_D])).
fof(f429_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK34))),s('type.bvl.exp',sK35))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f431,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK36),s('type.option.option'('type.num.num'),sK37),s('type.list.list'('type.bvl.exp'),sK38))),s('type.bvl.exp',sK39))) | $spl20),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK36),s('type.option.option'('type.num.num'),sK37),s('type.list.list'('type.bvl.exp'),sK38))),s('type.bvl.exp',sK39))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f433,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK40),s('type.list.list'('type.bvl.exp'),sK41))),s('type.bvl.exp',sK42))) | $spl22),
  inference(cnf_transformation,[],[f433_D])).
fof(f433_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK40),s('type.list.list'('type.bvl.exp'),sK41))),s('type.bvl.exp',sK42))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f435,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK43))) | $spl24),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK43))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f437,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK44),s('type.option.option'('type.num.num'),sK45),s('type.list.list'('type.bvl.exp'),sK46))) | $spl26),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK44),s('type.option.option'('type.num.num'),sK45),s('type.list.list'('type.bvl.exp'),sK46))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f439,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK47),s('type.list.list'('type.bvl.exp'),sK48))) | $spl28),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK47),s('type.list.list'('type.bvl.exp'),sK48))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f223,plain,(
  s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK47),s('type.list.list'('type.bvl.exp'),sK48))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK44),s('type.option.option'('type.num.num'),sK45),s('type.list.list'('type.bvl.exp'),sK46))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK43))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',sK40),s('type.list.list'('type.bvl.exp'),sK41))),s('type.bvl.exp',sK42))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',sK36),s('type.option.option'('type.num.num'),sK37),s('type.list.list'('type.bvl.exp'),sK38))),s('type.bvl.exp',sK39))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Tick_1'(s('type.bvl.exp',sK34))),s('type.bvl.exp',sK35))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp',sK31),s('type.bvl.exp',sK32))),s('type.bvl.exp',sK33))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK29))),s('type.bvl.exp',sK30))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK26),s('type.bvl.exp',sK27))),s('type.bvl.exp',sK28))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK22),s('type.bvl.exp',sK23),s('type.bvl.exp',sK24))),s('type.bvl.exp',sK25))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK20))),s('type.bvl.exp',sK21))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Raise_1'(s('type.bvl.exp',sK19))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),sK17),s('type.bvl.exp',sK18))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp',sK14),s('type.bvl.exp',sK15),s('type.bvl.exp',sK16))) | s('type.bvl.exp',sK12) = s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',sK13)))),
  inference(cnf_transformation,[],[f138])).
fof(f4264,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f419,f225])).
fof(f225,plain,(
  ( ! [X33,X32] : (s('type.bvl.exp',sK12) != s('type.bvl.exp','const.bvl.Handle_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',X32))),s('type.bvl.exp',X33)))) )),
  inference(cnf_transformation,[],[f138])).
% SZS output end Proof for thm.bvlProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 343
% Passive clauses: 1251
% Generated clauses: 4035
% Final active clauses: 343
% Final passive clauses: 761
% Input formulas: 37
% Initial clauses: 183
% 
% Duplicate literals: 151
% Trivial inequalities: 13
% Fw subsumption resolutions: 289
% 
% Simple tautologies: 145
% Equational tautologies: 26
% Forward subsumptions: 2143
% 
% Binary resolution: 2425
% Factoring: 737
% Forward superposition: 106
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 85
% Split components: 184
% SAT solver clauses: 174
% SAT solver unit clauses: 21
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 1
% 
% Sat splits: 85
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 173
% TWLsolver calls for satisfiability: 150
% 
% Memory used [KB]: 2174
% Time elapsed: 0.092 s
% ------------------------------
% ------------------------------
% Success in time 0.1 s
