Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvlSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvlSem
% SZS output start Proof for thm.bvlSem
fof(f11723,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f122,f179,f177,f175,f173,f171,f169,f7336,f117,f170,f118,f119,f174,f120,f121,f178,f168,f11718,f11715,f176,f11720,f11716,f172,f11722])).
fof(f11722,plain,(
  $false | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f11721,f175])).
fof(f11721,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK8) | $spl0),
  inference(forward_demodulation,[],[f11688,f137])).
fof(f137,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.num.num',X3) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X43,X22,X34,X44,X45] : s('type.num.num',X34) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X43),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22),s('type.num.num',X34),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44),s('type.ffi.ffi_state'(X6),X45)))))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_clock')).
fof(f11688,plain,(
  s('type.num.num',sK8) = s('type.num.num','const.bvlSem.state_clock_1'(s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))))) | $spl0),
  inference(superposition,[],[f137,f168])).
fof(f172,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | $spl4),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f11716,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | $spl0),
  inference(forward_demodulation,[],[f11685,f140])).
fof(f140,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X43,X22,X34,X44,X45] : s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X43),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22),s('type.num.num',X34),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44),s('type.ffi.ffi_state'(X6),X45)))))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_refs')).
fof(f11685,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),'const.bvlSem.state_refs_1'(s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))))) | $spl0),
  inference(superposition,[],[f140,f168])).
fof(f11720,plain,(
  $false | ($spl0 | $spl11)),
  inference(subsumption_resolution,[],[f11719,f179])).
fof(f11719,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) = s('type.ffi.ffi_state'(sK0),sK10) | $spl0),
  inference(forward_demodulation,[],[f11687,f138])).
fof(f138,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X43,X22,X34,X44,X45] : s('type.ffi.ffi_state'(X6),X45) = s('type.ffi.ffi_state'(X6),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X43),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22),s('type.num.num',X34),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44),s('type.ffi.ffi_state'(X6),X45)))))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_ffi')).
fof(f11687,plain,(
  s('type.ffi.ffi_state'(sK0),sK10) = s('type.ffi.ffi_state'(sK0),'const.bvlSem.state_ffi_1'(s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))))) | $spl0),
  inference(superposition,[],[f138,f168])).
fof(f176,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | $spl8),
  inference(cnf_transformation,[],[f176_D])).
fof(f176_D,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f11715,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | $spl0),
  inference(forward_demodulation,[],[f11684,f141])).
fof(f141,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X43,X22,X34,X44,X45] : s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X43),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22),s('type.num.num',X34),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44),s('type.ffi.ffi_state'(X6),X45)))))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_code')).
fof(f11684,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.bvlSem.state_code_1'(s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))))) | $spl0),
  inference(superposition,[],[f141,f168])).
fof(f11718,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f11717,f171])).
fof(f11717,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | $spl0),
  inference(forward_demodulation,[],[f11686,f139])).
fof(f139,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X43,X22,X34,X44,X45] : s('type.list.list'('type.option.option'('type.bvlSem.v')),X43) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X43),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X22),s('type.num.num',X34),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X44),s('type.ffi.ffi_state'(X6),X45)))))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_globals')).
fof(f11686,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) = s('type.list.list'('type.option.option'('type.bvlSem.v')),'const.bvlSem.state_globals_1'(s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))))) | $spl0),
  inference(superposition,[],[f139,f168])).
fof(f168,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) | $spl0),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f178,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) = s('type.ffi.ffi_state'(sK0),sK10) | $spl10),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) = s('type.ffi.ffi_state'(sK0),sK10) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f121,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) = s('type.ffi.ffi_state'(sK0),sK10) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  (s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) & s('type.num.num',sK3) = s('type.num.num',sK8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) & s('type.ffi.ffi_state'(sK0),sK5) = s('type.ffi.ffi_state'(sK0),sK10))) & (s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) | s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | s('type.num.num',sK3) != s('type.num.num',sK8) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | s('type.ffi.ffi_state'(sK0),sK5) != s('type.ffi.ffi_state'(sK0),sK10))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10])],[f110])).
fof(f110,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) & s('type.num.num',X3) = s('type.num.num',X8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) & s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),X10))) & (s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) != s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) | s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) | s('type.num.num',X3) != s('type.num.num',X8) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) | s('type.ffi.ffi_state'(X0),X5) != s('type.ffi.ffi_state'(X0),X10)))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : ((s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) & s('type.num.num',X3) = s('type.num.num',X8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) & s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),X10))) & (s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) != s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) | (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) | s('type.num.num',X3) != s('type.num.num',X8) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) | s('type.ffi.ffi_state'(X0),X5) != s('type.ffi.ffi_state'(X0),X10))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : (s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) <~> (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) & s('type.num.num',X3) = s('type.num.num',X8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) & s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),X10)))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : (s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) & s('type.num.num',X3) = s('type.num.num',X8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) & s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),X10)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5,X6,X7,X8,X9,X10] : (s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2),s('type.num.num',X3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4),s('type.ffi.ffi_state'(X0),X5))) = s('type.bvlSem.state'(X0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7),s('type.num.num',X8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9),s('type.ffi.ffi_state'(X0),X10))) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),X1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X6) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X7) & s('type.num.num',X3) = s('type.num.num',X8) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X9) & s('type.ffi.ffi_state'(X0),X5) = s('type.ffi.ffi_state'(X0),X10)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : (s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X7),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X10),s('type.ffi.ffi_state'(X6),X11))) = s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X13),s('type.num.num',X14),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X15),s('type.ffi.ffi_state'(X6),X16))) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),X7) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X12) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X13) & s('type.num.num',X9) = s('type.num.num',X14) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X10) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X15) & s('type.ffi.ffi_state'(X6),X11) = s('type.ffi.ffi_state'(X6),X16)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11,X12,X13,X14,X15,X16] : (s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X7),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8),s('type.num.num',X9),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X10),s('type.ffi.ffi_state'(X6),X11))) = s('type.bvlSem.state'(X6),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),X12),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X13),s('type.num.num',X14),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X15),s('type.ffi.ffi_state'(X6),X16))) <=> (s('type.list.list'('type.option.option'('type.bvlSem.v')),X7) = s('type.list.list'('type.option.option'('type.bvlSem.v')),X12) & s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X8) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),X13) & s('type.num.num',X9) = s('type.num.num',X14) & s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X10) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),X15) & s('type.ffi.ffi_state'(X6),X11) = s('type.ffi.ffi_state'(X6),X16)))),
  file('thm.bvlSem.state_|49||49|','thm.bvlSem.state_|49||49|')).
fof(f120,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
fof(f174,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK8) | $spl6),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK8) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f119,plain,(
  s('type.num.num',sK3) = s('type.num.num',sK8) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
fof(f118,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) = s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
fof(f170,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | $spl2),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f117,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) = s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) = s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
fof(f7336,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(trivial_inequality_removal,[],[f7335])).
fof(f7335,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f7334,f170])).
fof(f7334,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) | ($spl1 | $spl4 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f7333,f172])).
fof(f7333,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) | ($spl1 | $spl6 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f7332,f174])).
fof(f7332,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f7331,f176])).
fof(f7331,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK5))) | ($spl1 | $spl10)),
  inference(forward_demodulation,[],[f169,f178])).
fof(f169,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) | $spl1),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f171,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | $spl3),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f173,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | $spl5),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f175,plain,(
  s('type.num.num',sK3) != s('type.num.num',sK8) | $spl7),
  inference(cnf_transformation,[],[f175_D])).
fof(f175_D,plain,(
  s('type.num.num',sK3) != s('type.num.num',sK8) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f177,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | $spl9),
  inference(cnf_transformation,[],[f177_D])).
fof(f177_D,plain,(
  s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f179,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) != s('type.ffi.ffi_state'(sK0),sK10) | $spl11),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) != s('type.ffi.ffi_state'(sK0),sK10) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f122,plain,(
  s('type.ffi.ffi_state'(sK0),sK5) != s('type.ffi.ffi_state'(sK0),sK10) | s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4) != s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9) | s('type.num.num',sK3) != s('type.num.num',sK8) | s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2) != s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7) | s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1) != s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6) | s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK1),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK2),s('type.num.num',sK3),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK4),s('type.ffi.ffi_state'(sK0),sK5))) != s('type.bvlSem.state'(sK0),'const.bvlSem.recordtype|46|state_5'(s('type.list.list'('type.option.option'('type.bvlSem.v')),sK6),s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.bvlSem.v')),sK7),s('type.num.num',sK8),s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),sK9),s('type.ffi.ffi_state'(sK0),sK10)))),
  inference(cnf_transformation,[],[f111])).
% SZS output end Proof for thm.bvlSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 115
% Passive clauses: 1750
% Generated clauses: 11465
% Final active clauses: 87
% Final passive clauses: 1525
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 397
% Trivial inequalities: 157
% Fw subsumption resolutions: 938
% Fw demodulations: 1408
% Bw demodulations: 11
% 
% Simple tautologies: 114
% Equational tautologies: 36
% Forward subsumptions: 6481
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 214
% Factoring: 1
% Forward superposition: 4692
% Backward superposition: 3292
% Self superposition: 151
% Equality factoring: 77
% Equality resolution: 12
% 
% Split clauses: 92
% Split components: 188
% SAT solver clauses: 273
% SAT solver unit clauses: 41
% SAT solver binary clauses: 67
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 92
% Sat splitting refutations: 18
% 
% TWLsolver clauses: 271
% TWLsolver calls for satisfiability: 74
% 
% Memory used [KB]: 7931
% Time elapsed: 0.529 s
% ------------------------------
% ------------------------------
% Success in time 0.535 s
