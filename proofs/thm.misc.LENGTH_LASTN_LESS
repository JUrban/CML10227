Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.misc
% (143088)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1015
% Passive clauses: 5575
% Generated clauses: 34276
% Final active clauses: 925
% Final passive clauses: 4093
% Input formulas: 261
% Initial clauses: 488
% 
% Duplicate literals: 228
% Trivial inequalities: 60
% Fw subsumption resolutions: 1810
% Fw demodulations: 3329
% Bw demodulations: 81
% 
% Simple tautologies: 268
% Equational tautologies: 24
% Forward subsumptions: 22763
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 5577
% Factoring: 1229
% Forward superposition: 9357
% Backward superposition: 11894
% Self superposition: 55
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 427
% Split components: 856
% SAT solver clauses: 656
% SAT solver unit clauses: 19
% SAT solver binary clauses: 71
% 
% Sat splits: 427
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 656
% TWLsolver calls for satisfiability: 468
% 
% Memory used [KB]: 19189
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.misc
% (143099)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 591
% Passive clauses: 3558
% Generated clauses: 33445
% Final active clauses: 457
% Final passive clauses: 1653
% Input formulas: 261
% Initial clauses: 488
% 
% Duplicate literals: 111
% Trivial inequalities: 48
% Fw subsumption resolutions: 1179
% Fw demodulations: 5000
% Bw demodulations: 1436
% Condensations: 145
% Global subsumptions: 24
% 
% Simple tautologies: 276
% Equational tautologies: 14
% Forward subsumptions: 17766
% Fw demodulations to eq. taut.: 20
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 2684
% Factoring: 308
% Forward superposition: 10916
% Backward superposition: 6565
% Self superposition: 80
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 22
% Split components: 44
% SAT solver clauses: 4506
% SAT solver unit clauses: 624
% SAT solver binary clauses: 138
% SAT solver learnt clauses: 48
% SAT solver learnt literals: 12
% 
% Sat splits: 22
% Sat splitting refutations: 20
% 
% TWLsolver clauses: 4410
% TWLsolver calls for satisfiability: 2816
% 
% Memory used [KB]: 29423
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.misc
% (143123)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 753
% Passive clauses: 4377
% Generated clauses: 231904
% Final active clauses: 623
% Final passive clauses: 1473
% Input formulas: 261
% Initial clauses: 488
% 
% Duplicate literals: 20
% Trivial inequalities: 51
% Fw subsumption resolutions: 1665
% Fw demodulations: 97880
% Bw demodulations: 2274
% Condensations: 21
% Global subsumptions: 2298
% 
% Simple tautologies: 117
% Equational tautologies: 39
% Forward subsumptions: 40964
% Fw demodulations to eq. taut.: 64184
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 99157
% Factoring: 2
% Forward superposition: 15949
% Backward superposition: 11956
% Self superposition: 125
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 10403
% SAT solver unit clauses: 5988
% SAT solver binary clauses: 3648
% 
% Sat splits: 3
% Sat splitting refutations: 3719
% 
% Memory used [KB]: 274920
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 16 next slice time: 16
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f12712,plain,(
  $false),
  inference(subsumption_resolution,[],[f12561,f1084])).
fof(f1084,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(subsumption_resolution,[],[f1000,f808])).
fof(f808,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f332])).
fof(f332,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X22] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X22))))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.arithmetic.LESS_EQ_REFL')).
fof(f1000,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(superposition,[],[f594,f828])).
fof(f828,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f454])).
fof(f454,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f354])).
fof(f354,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f353])).
fof(f353,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))) => s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num',X8)))) => s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.misc.LASTN_LENGTH_LESS_EQ')).
fof(f594,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.rich_list.LASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(cnf_transformation,[],[f488])).
fof(f488,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),'const.rich_list.LASTN_2'(s('type.num.num',sK14),s('type.list.list'(sK12),sK13))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f422])).
fof(f422,plain,(
  ? [X0,X1,X2] : ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X2),s('type.list.list'(X0),X1))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X8),s('type.list.list'(X6),X7))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.misc.LENGTH_LASTN_LESS')).
fof(f12561,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(resolution,[],[f3319,f815])).
fof(f815,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f584])).
fof(f584,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(flattening,[],[f583])).
fof(f583,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f338])).
fof(f338,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X22,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X8)))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X8)))) | s('type.num.num',X8) = s('type.num.num',X22)))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.arithmetic.LESS_OR_EQ')).
fof(f3319,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))),s('type.num.num',sK14))))),
  inference(forward_demodulation,[],[f3158,f823])).
fof(f823,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f345])).
fof(f345,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f261])).
fof(f261,axiom,(
  ! [X22,X8] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X22))),s('type.num.num',X8)))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.arithmetic.LESS_EQ')).
fof(f3158,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))),s('type.num.num',sK14))))),
  inference(resolution,[],[f1061,f704])).
fof(f704,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f536])).
fof(f536,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f283])).
fof(f283,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f282])).
fof(f282,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f184])).
fof(f184,axiom,(
  ! [X8,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X22)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X8)))))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.arithmetic.NOT_SUC_LESS_EQ')).
fof(f1061,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(duplicate_literal_removal,[],[f1006])).
fof(f1006,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK12),sK13))))))),
  inference(superposition,[],[f594,f826])).
fof(f826,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f452])).
fof(f452,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f350])).
fof(f350,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f349])).
fof(f349,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X8,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) => s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num',X8),s('type.list.list'(X6),X9))))))),
  file('thm.misc.LENGTH_LASTN_LESS','thm.rich_list.LENGTH_LASTN')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 327
% Passive clauses: 4760
% Generated clauses: 11826
% Final active clauses: 309
% Final passive clauses: 4112
% Input formulas: 261
% Initial clauses: 281
% 
% Selected by SInE selection: 103
% SInE iterations: 1
% 
% Duplicate literals: 256
% Trivial inequalities: 19
% Fw subsumption resolutions: 1363
% Fw demodulations: 1846
% Bw demodulations: 8
% 
% Simple tautologies: 384
% Equational tautologies: 2
% Forward subsumptions: 2746
% 
% Binary resolution: 3069
% Forward superposition: 3590
% Backward superposition: 1608
% Equality resolution: 2
% 
% Split clauses: 166
% Split components: 352
% SAT solver clauses: 193
% SAT solver unit clauses: 22
% SAT solver binary clauses: 107
% 
% Sat splits: 166
% Sat splitting refutations: 26
% 
% Memory used [KB]: 5117
% Time elapsed: 0.355 s
% ------------------------------
% ------------------------------
% Success in time 13.699 s
