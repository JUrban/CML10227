Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f2514,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2513])).
fof(f2513,plain,(
  s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',sK0))))) != s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',sK0)))))),
  inference(superposition,[],[f34,f2512])).
fof(f2512,plain,(
  ( ! [X0] : (s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X0))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X0)))))) )),
  inference(superposition,[],[f2511,f40])).
fof(f40,plain,(
  ( ! [X0] : (s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X0))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X0)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0] : s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X0))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X6))) = s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X6)))))),
  file('thm.inferProps.unconvert_t_Tword','thm.ast.Tword_def')).
fof(f2511,plain,(
  ( ! [X0] : (s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor',X0))) = s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor',X0)))))) )),
  inference(superposition,[],[f1833,f45])).
fof(f45,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ! [X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X12] : ! [X13] : s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.MAP_2'(s(fun(X7,X12),X13),s('type.list.list'(X7),'const.list.NIL_0')))),
  file('thm.inferProps.unconvert_t_Tword','thm.list.MAP|split|0')).
fof(f1833,plain,(
  ( ! [X0,X1] : (s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X0),s('type.ast.tctor',X1))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.list.list'('type.ast.t'),X0))),s('type.ast.tctor',X1)))) )),
  inference(forward_demodulation,[],[f44,f39])).
fof(f39,plain,(
  ( ! [X0] : (s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t',X0)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',X0))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X16] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t',X16))) = s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t',X16)))),
  file('thm.inferProps.unconvert_t_Tword','ARITY_0_1_const.inferProps.unconvert_t')).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X0),s('type.ast.tctor',X1))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.list.list'('type.ast.t'),X0))),s('type.ast.tctor',X1)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X0),s('type.ast.tctor',X1))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.list.list'('type.ast.t'),X0))),s('type.ast.tctor',X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10,X11] : s('type.infer_t.infer_t',happ(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),X10),s('type.ast.tctor',X11))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.MAP_2'(s(fun('type.ast.t','type.infer_t.infer_t'),'const.inferProps.unconvert_t_0'),s('type.list.list'('type.ast.t'),X10))),s('type.ast.tctor',X11)))),
  file('thm.inferProps.unconvert_t_Tword','thm.inferProps.unconvert_t_def|split|1')).
fof(f34,plain,(
  s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',sK0))))) != s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',sK0)))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',sK0))))) != s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f29])).
fof(f29,plain,(
  ? [X0] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X0))))) != s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X0)))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X0))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X6))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.infer_t.infer_t','const.inferProps.unconvert_t_1'(s('type.ast.t','const.ast.Tword_1'(s('type.ast.word_size',X6))))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word_1'(s('type.ast.word_size',X6)))))),
  file('thm.inferProps.unconvert_t_Tword','thm.inferProps.unconvert_t_Tword')).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 27
% Passive clauses: 466
% Generated clauses: 2379
% Final active clauses: 25
% Final passive clauses: 427
% Input formulas: 13
% Initial clauses: 14
% 
% Duplicate literals: 291
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% Fw demodulations: 1
% 
% Simple tautologies: 91
% Equational tautologies: 80
% Forward subsumptions: 959
% 
% Binary resolution: 12
% Forward superposition: 703
% Backward superposition: 787
% Self superposition: 222
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 367
% SAT solver unit clauses: 217
% SAT solver binary clauses: 82
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 367
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1407
% Time elapsed: 0.098 s
% ------------------------------
% ------------------------------
% Success in time 0.097 s
