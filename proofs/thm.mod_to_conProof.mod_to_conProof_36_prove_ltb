Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.mod_to_conProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.mod_to_conProof
% SZS output start Proof for thm.mod_to_conProof
fof(f8775,plain,(
  $false),
  inference(subsumption_resolution,[],[f8738,f203])).
fof(f203,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),sK10))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),sK12)))),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK11),s('type.list.list'('type.modSem.v'),sK10),s('type.list.list'('type.conSem.v'),sK12)))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),sK10))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),sK12)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X1),s('type.list.list'('type.modSem.v'),X0),s('type.list.list'('type.conSem.v'),X2)))) & s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),X0))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),X2))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X1),s('type.list.list'('type.modSem.v'),X0),s('type.list.list'('type.conSem.v'),X2)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X7),s('type.list.list'('type.modSem.v'),X6),s('type.list.list'('type.conSem.v'),X8)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X7),s('type.list.list'('type.modSem.v'),X6),s('type.list.list'('type.conSem.v'),X8)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),X6))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),X8))))),
  file('thm.mod_to_conProof.mod_to_conProof_36_prove_ltb','thm.mod_to_conProof.mod_to_conProof_36_prove_ltb')).
fof(f8738,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),sK10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),sK12)))),
  inference(resolution,[],[f3829,f202])).
fof(f202,plain,(
  p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),sK11),s('type.list.list'('type.modSem.v'),sK10),s('type.list.list'('type.conSem.v'),sK12))))),
  inference(cnf_transformation,[],[f141])).
fof(f3829,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.modSem.v'),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.conSem.v'),X2)))) )),
  inference(superposition,[],[f284,f285])).
fof(f285,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2))) = s(bool,'const.list.LIST_REL_3'(s(fun('type.modSem.v',fun('type.conSem.v',bool)),'const.mod_to_conProof.v_rel_1'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0))),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2))) = s(bool,'const.list.LIST_REL_3'(s(fun('type.modSem.v',fun('type.conSem.v',bool)),'const.mod_to_conProof.v_rel_1'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X0))),s('type.list.list'('type.modSem.v'),X1),s('type.list.list'('type.conSem.v'),X2)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6,X8] : s(bool,'const.mod_to_conProof.vs_rel_3'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X7),s('type.list.list'('type.modSem.v'),X6),s('type.list.list'('type.conSem.v'),X8))) = s(bool,'const.list.LIST_REL_3'(s(fun('type.modSem.v',fun('type.conSem.v',bool)),'const.mod_to_conProof.v_rel_1'(s('type.finite_map.fmap'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'type.pair.prod'('type.num.num','type.num.num')),X7))),s('type.list.list'('type.modSem.v'),X6),s('type.list.list'('type.conSem.v'),X8)))),
  file('thm.mod_to_conProof.mod_to_conProof_36_prove_ltb','thm.mod_to_conProof.mod_to_conProof_35_prove_ltb')).
fof(f284,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))))),
  inference(ennf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X10,X9] : ! [X15,X14,X16] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X10,fun(X9,bool)),X15),s('type.list.list'(X10),X14),s('type.list.list'(X9),X16)))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X16))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X14))))),
  file('thm.mod_to_conProof.mod_to_conProof_36_prove_ltb','thm.list.LIST_REL_LENGTH')).
% SZS output end Proof for thm.mod_to_conProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 467
% Passive clauses: 2992
% Generated clauses: 8573
% Final active clauses: 422
% Final passive clauses: 2200
% Input formulas: 39
% Initial clauses: 142
% 
% Duplicate literals: 215
% Trivial inequalities: 90
% Fw subsumption resolutions: 895
% Fw demodulations: 108
% Bw demodulations: 44
% 
% Simple tautologies: 150
% Equational tautologies: 62
% Forward subsumptions: 3905
% 
% Binary resolution: 3921
% Factoring: 868
% Forward superposition: 735
% Backward superposition: 1360
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 32
% 
% Split clauses: 198
% Split components: 402
% SAT solver clauses: 399
% SAT solver unit clauses: 11
% SAT solver binary clauses: 89
% 
% Sat splits: 198
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 397
% TWLsolver calls for satisfiability: 248
% 
% Memory used [KB]: 3965
% Time elapsed: 0.298 s
% ------------------------------
% ------------------------------
% Success in time 0.31 s
