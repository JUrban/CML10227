Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.stack_removeProof
% (124911)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 166
% Passive clauses: 1649
% Generated clauses: 19109
% Final active clauses: 145
% Final passive clauses: 1338
% Input formulas: 16
% Initial clauses: 26
% 
% Duplicate literals: 913
% Trivial inequalities: 227
% Fw subsumption resolutions: 2758
% Fw demodulations: 2458
% Bw demodulations: 20
% 
% Simple tautologies: 342
% Equational tautologies: 52
% Forward subsumptions: 9091
% 
% Binary resolution: 245
% Forward superposition: 6084
% Backward superposition: 5721
% Self superposition: 265
% Equality factoring: 150
% Equality resolution: 33
% 
% Split clauses: 1042
% Split components: 2139
% SAT solver clauses: 1673
% SAT solver unit clauses: 48
% SAT solver binary clauses: 284
% 
% Sat splits: 1042
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1673
% TWLsolver calls for satisfiability: 122
% 
% Memory used [KB]: 10746
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stack_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_removeProof
% SZS output start Proof for thm.stack_removeProof
fof(f5577,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5571,f77,f103,f127,f134,f62,f87,f68,f99,f4879,f111,f116,f60,f90,f69,f98,f126,f132,f65,f95,f136,f141,f73,f100,f4974,f4987,f112,f117,f59,f91,f4812,f4811,f4809,f308,f322,f291,f293,f78,f104,f113,f118,f61,f88])).
fof(f88,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f61,plain,(
  ( ! [X4,X3] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4))))))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X5] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X5)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0')))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))))) & ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f46])).
fof(f46,plain,(
  ? [X0,X1] : (! [X5] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X5)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.NONE_0')))) & ! [X3,X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X3),s('type.num.num',X4)))))))) & ? [X2] : ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),X2)))))),
  inference(rectify,[],[f41])).
fof(f41,plain,(
  ? [X0,X1] : (! [X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.NONE_0')))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),X5)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ? [X0,X1] : ((! [X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.NONE_0')))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) & ? [X5] : ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),X5)))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : ((! [X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.NONE_0')))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) => ! [X5] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),X5)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ~! [X0] : ! [X1] : ((! [X4] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.NONE_0')))) & ! [X2,X3] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) => ! [X5] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),bool),X1),s('type.option.option'('type.wordSem.word_loc'(X0)),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X8)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.NONE_0')))) & ! [X9,X10] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X9),s('type.num.num',X10))))))))) => ! [X11] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X8)))))))) & p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.NONE_0')))) & ! [X9,X10] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),'const.option.SOME_1'(s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X9),s('type.num.num',X10))))))))) => ! [X11] : p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(X6)),bool),X7),s('type.option.option'('type.wordSem.word_loc'(X6)),X11)))))),
  file('thm.stack_removeProof.the_SOME_Word_ind','thm.stack_removeProof.the_SOME_Word_ind')).
fof(f118,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))))) ) | $spl44),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f113,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))))) ) | ($spl2 | $spl16)),
  inference(resolution,[],[f98,f88])).
fof(f104,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK5(X1,X0)),s('type.num.num',sK6(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK4(X1,X0))))) ) | $spl28),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK5(X1,X0)),s('type.num.num',sK6(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK4(X1,X0))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK5(X1,X0)),s('type.num.num',sK6(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK4(X1,X0))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK4(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK5(X1,X0)),s('type.num.num',sK6(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6])],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X18] : (? [X19] : s('type.wordSem.word_loc'(X6),X18) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X19))) | ? [X20,X21] : s('type.wordSem.word_loc'(X6),X18) = s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X20),s('type.num.num',X21))))),
  file('thm.stack_removeProof.the_SOME_Word_ind','thm.wordSem.word_loc_nchotomy')).
fof(f293,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),X2))))) | s('type.wordSem.word_loc'(sK0),X2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(X2,sK0))))) ) | $spl86),
  inference(cnf_transformation,[],[f293_D])).
fof(f293_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),X2))))) | s('type.wordSem.word_loc'(sK0),X2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(X2,sK0))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f291,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),X2))))) | s('type.wordSem.word_loc'(sK0),X2) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(X2,sK0))))) ) | ($spl28 | $spl44)),
  inference(superposition,[],[f118,f104])).
fof(f322,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),X0))) | s('type.wordSem.word_loc'(sK0),sK3(X0,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(X0,'type.wordSem.word_loc'(sK0)),sK0)))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),X0)) ) | $spl88),
  inference(cnf_transformation,[],[f322_D])).
fof(f322_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),X0))) | s('type.wordSem.word_loc'(sK0),sK3(X0,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(X0,'type.wordSem.word_loc'(sK0)),sK0)))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),X0)) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f308,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),X0))) | s('type.wordSem.word_loc'(sK0),sK3(X0,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(X0,'type.wordSem.word_loc'(sK0)),sK0)))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),X0)) ) | ($spl26 | $spl86)),
  inference(superposition,[],[f293,f103])).
fof(f4809,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | $spl740),
  inference(cnf_transformation,[],[f4809_D])).
fof(f4809_D,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f4811,plain,(
  s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(sK2,'type.wordSem.word_loc'(sK0)),sK0)))) | $spl742),
  inference(cnf_transformation,[],[f4811_D])).
fof(f4811_D,plain,(
  s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(sK2,'type.wordSem.word_loc'(sK0)),sK0)))) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f4812,plain,(
  s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(sK2,'type.wordSem.word_loc'(sK0)),sK0)))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | ($spl49 | $spl52 | $spl88)),
  inference(subsumption_resolution,[],[f4710,f132])).
fof(f4710,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))) = s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),sK4(sK3(sK2,'type.wordSem.word_loc'(sK0)),sK0)))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | ($spl52 | $spl88)),
  inference(superposition,[],[f322,f141])).
fof(f91,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X5))))))))) ) | $spl6),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X5))))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f59,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X5))))))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f117,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0)))))))) ) | $spl42),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0)))))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f112,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK0),X0)))))))) ) | ($spl6 | $spl16)),
  inference(resolution,[],[f98,f91])).
fof(f4987,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))))))) | $spl782),
  inference(cnf_transformation,[],[f4987_D])).
fof(f4987_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))))))) <=> ~$spl782),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl782])])).
fof(f4974,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.SOME_1'(s('type.wordSem.word_loc'(sK0),sK3(sK2,'type.wordSem.word_loc'(sK0))))))) | ($spl42 | $spl742)),
  inference(superposition,[],[f117,f4811])).
fof(f100,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl20),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f73,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.stack_removeProof.the_SOME_Word_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f141,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) | $spl52),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f136,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) | ($spl1 | $spl20)),
  inference(resolution,[],[f100,f87])).
fof(f95,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f65,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stack_removeProof.the_SOME_Word_ind',aHL_FALSITY)).
fof(f132,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl49),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f126,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl11 | $spl18)),
  inference(resolution,[],[f99,f95])).
fof(f98,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f69,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.stack_removeProof.the_SOME_Word_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f90,plain,(
  p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0')))) | $spl4),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f60,plain,(
  p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0'))))),
  inference(cnf_transformation,[],[f47])).
fof(f116,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0'))) | $spl40),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0'))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f111,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0'))) | ($spl4 | $spl16)),
  inference(resolution,[],[f98,f90])).
fof(f4879,plain,(
  $false | ($spl40 | $spl49 | $spl52 | $spl740)),
  inference(subsumption_resolution,[],[f4878,f132])).
fof(f4878,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl40 | $spl52 | $spl740)),
  inference(forward_demodulation,[],[f4872,f116])).
fof(f4872,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0'))) | ($spl52 | $spl740)),
  inference(backward_demodulation,[],[f4809,f141])).
fof(f99,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f68,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f48])).
fof(f87,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2)))) | $spl1),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f62,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))))),
  inference(cnf_transformation,[],[f47])).
fof(f134,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) | $spl51),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f127,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) | ($spl1 | $spl18)),
  inference(resolution,[],[f99,f87])).
fof(f103,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) | $spl26),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f77,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X13] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X13) | ? [X14] : s('type.option.option'(X6),X13) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X14))))),
  file('thm.stack_removeProof.the_SOME_Word_ind','thm.option.option_nchotomy')).
fof(f5571,plain,(
  $false | ($spl26 | $spl51 | $spl741 | $spl782)),
  inference(subsumption_resolution,[],[f5570,f4808])).
fof(f4808,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | $spl741),
  inference(cnf_transformation,[],[f4808_D])).
fof(f4808_D,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') != s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) <=> ~$spl741),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl741])])).
fof(f5570,plain,(
  s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | ($spl26 | $spl51 | $spl782)),
  inference(subsumption_resolution,[],[f5516,f134])).
fof(f5516,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.option.option'('type.wordSem.word_loc'(sK0)),bool),sK1),s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2))) | s('type.option.option'('type.wordSem.word_loc'(sK0)),'const.option.NONE_0') = s('type.option.option'('type.wordSem.word_loc'(sK0)),sK2) | ($spl26 | $spl782)),
  inference(superposition,[],[f4987,f103])).
% SZS output end Proof for thm.stack_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 108
% Passive clauses: 400
% Generated clauses: 5476
% Final active clauses: 82
% Final passive clauses: 198
% Input formulas: 16
% Initial clauses: 26
% 
% Duplicate literals: 395
% Trivial inequalities: 55
% Fw subsumption resolutions: 436
% Fw demodulations: 563
% Bw demodulations: 111
% Condensations: 276
% 
% Simple tautologies: 123
% Equational tautologies: 23
% Forward subsumptions: 2508
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 88
% Forward superposition: 1553
% Backward superposition: 1441
% Self superposition: 49
% Equality factoring: 44
% Equality resolution: 12
% 
% Split clauses: 130
% Split components: 275
% SAT solver clauses: 704
% SAT solver unit clauses: 34
% SAT solver binary clauses: 24
% SAT solver learnt clauses: 1
% 
% Sat splits: 130
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 703
% TWLsolver calls for satisfiability: 217
% 
% Memory used [KB]: 5628
% Time elapsed: 0.144 s
% ------------------------------
% ------------------------------
% Success in time 0.78 s
