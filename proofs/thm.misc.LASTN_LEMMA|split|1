Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.misc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.misc
% SZS output start Proof for thm.misc
fof(f1442,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1434])).
fof(f1434,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))),
  inference(superposition,[],[f883,f496])).
fof(f496,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(superposition,[],[f157,f160])).
fof(f160,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X17,X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X10))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),X10)))))),
  file('thm.misc.LASTN_LEMMA|split|1','thm.list.LENGTH|split|1')).
fof(f157,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : ! [X22] : s('type.list.list'(X6),X22) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22))),s('type.list.list'(X6),X22)))),
  file('thm.misc.LASTN_LEMMA|split|1','thm.rich_list.LASTN_LENGTH_ID')).
fof(f883,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))) != s('type.list.list'(sK0),'const.rich_list.LASTN_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))))),
  inference(forward_demodulation,[],[f112,f117])).
fof(f117,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.misc.LASTN_LEMMA|split|1','thm.arithmetic.ADD|49|')).
fof(f112,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))) != s('type.list.list'(sK0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1))) != s('type.list.list'(sK0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK2),s('type.list.list'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f67])).
fof(f67,plain,(
  ? [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))) != s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0,X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ~! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1))) = s('type.list.list'(X0),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7))) = s('type.list.list'(X6),'const.rich_list.LASTN_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X7)))))),
  file('thm.misc.LASTN_LEMMA|split|1','thm.misc.LASTN_LEMMA|split|1')).
% SZS output end Proof for thm.misc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 50
% Passive clauses: 215
% Generated clauses: 1251
% Final active clauses: 48
% Final passive clauses: 125
% Input formulas: 29
% Initial clauses: 69
% 
% Duplicate literals: 93
% Trivial inequalities: 34
% Fw subsumption resolutions: 138
% Fw demodulations: 46
% Bw demodulations: 2
% 
% Simple tautologies: 95
% Equational tautologies: 20
% Forward subsumptions: 511
% 
% Binary resolution: 51
% Forward superposition: 459
% Backward superposition: 294
% Self superposition: 30
% Equality factoring: 28
% Equality resolution: 16
% 
% Split clauses: 70
% Split components: 148
% SAT solver clauses: 132
% SAT solver unit clauses: 9
% SAT solver binary clauses: 35
% 
% Sat splits: 70
% 
% TWLsolver clauses: 131
% TWLsolver calls for satisfiability: 40
% 
% Memory used [KB]: 1407
% Time elapsed: 0.076 s
% ------------------------------
% ------------------------------
% Success in time 0.1 s
