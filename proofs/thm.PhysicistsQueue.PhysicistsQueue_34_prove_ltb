Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.PhysicistsQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.PhysicistsQueue
% SZS output start Proof for thm.PhysicistsQueue
fof(f1835,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1834])).
fof(f1834,plain,(
  s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7) != s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7)),
  inference(superposition,[],[f133,f132])).
fof(f132,plain,(
  s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(sK6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(sK6),sK8),s('type.num.num',sK9),s('type.list.list'(sK6),sK10),s('type.num.num',sK11),s('type.list.list'(sK6),sK12)))))),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(sK6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(sK6),sK8),s('type.num.num',sK9),s('type.list.list'(sK6),sK10),s('type.num.num',sK11),s('type.list.list'(sK6),sK12))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7) != s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(sK6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(sK6),X2),s('type.num.num',X3),s('type.list.list'(sK6),X4),s('type.num.num',X5),s('type.list.list'(sK6),X6)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7,sK8,sK9,sK10,sK11,sK12])],[f89])).
fof(f89,plain,(
  ? [X0,X1] : (? [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X7),s('type.num.num',X8),s('type.list.list'(X0),X9),s('type.num.num',X10),s('type.list.list'(X0),X11))))) & ! [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) != s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X2),s('type.num.num',X3),s('type.list.list'(X0),X4),s('type.num.num',X5),s('type.list.list'(X0),X6))))))),
  inference(rectify,[],[f64])).
fof(f64,plain,(
  ? [X0,X1] : (? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X2),s('type.num.num',X3),s('type.list.list'(X0),X4),s('type.num.num',X5),s('type.list.list'(X0),X6))))) & ! [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) != s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X7),s('type.num.num',X8),s('type.list.list'(X0),X9),s('type.num.num',X10),s('type.list.list'(X0),X11))))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1] : (? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X2),s('type.num.num',X3),s('type.list.list'(X0),X4),s('type.num.num',X5),s('type.list.list'(X0),X6))))) => ? [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X7),s('type.num.num',X8),s('type.list.list'(X0),X9),s('type.num.num',X10),s('type.list.list'(X0),X11))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ! [X1] : (? [X2,X3,X4,X5,X6] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X2),s('type.num.num',X3),s('type.list.list'(X0),X4),s('type.num.num',X5),s('type.list.list'(X0),X6))))) => ? [X7,X8,X9,X10,X11] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),X1) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X0)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X0),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X0),X7),s('type.num.num',X8),s('type.list.list'(X0),X9),s('type.num.num',X10),s('type.list.list'(X0),X11))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),X7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X6),X8),s('type.num.num',X9),s('type.list.list'(X6),X10),s('type.num.num',X11),s('type.list.list'(X6),X12))))) => ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),X7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X6),X8),s('type.num.num',X9),s('type.list.list'(X6),X10),s('type.num.num',X11),s('type.list.list'(X6),X12))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),X7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X6),X8),s('type.num.num',X9),s('type.list.list'(X6),X10),s('type.num.num',X11),s('type.list.list'(X6),X12))))) => ? [X8,X9,X10,X11,X12] : s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),X7) = s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(X6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(X6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(X6),X8),s('type.num.num',X9),s('type.list.list'(X6),X10),s('type.num.num',X11),s('type.list.list'(X6),X12))))))),
  file('thm.PhysicistsQueue.PhysicistsQueue_34_prove_ltb','thm.PhysicistsQueue.PhysicistsQueue_34_prove_ltb')).
fof(f133,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),sK7) != s('type.pair.prod'('type.one.one','type.PhysicistsQueue.queue'(sK6)),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.PhysicistsQueue.queue'(sK6),'const.PhysicistsQueue.QUEUE_5'(s('type.list.list'(sK6),X2),s('type.num.num',X3),s('type.list.list'(sK6),X4),s('type.num.num',X5),s('type.list.list'(sK6),X6)))))) )),
  inference(cnf_transformation,[],[f90])).
% SZS output end Proof for thm.PhysicistsQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 170
% Passive clauses: 595
% Generated clauses: 1698
% Final active clauses: 170
% Final passive clauses: 369
% Input formulas: 26
% Initial clauses: 92
% 
% Duplicate literals: 37
% Trivial inequalities: 14
% Fw subsumption resolutions: 126
% 
% Simple tautologies: 58
% Equational tautologies: 11
% Forward subsumptions: 836
% 
% Binary resolution: 1071
% Factoring: 200
% Forward superposition: 79
% Backward superposition: 51
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 42
% Split components: 85
% SAT solver clauses: 76
% SAT solver unit clauses: 6
% SAT solver binary clauses: 29
% 
% Sat splits: 42
% 
% TWLsolver clauses: 76
% TWLsolver calls for satisfiability: 58
% 
% Memory used [KB]: 1151
% Time elapsed: 0.039 s
% ------------------------------
% ------------------------------
% Success in time 0.041 s
