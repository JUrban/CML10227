Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f4576,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4575,f224,f404,f402,f400,f4013,f4574])).
fof(f4574,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f402,f227])).
fof(f227,plain,(
  ( ! [X2,X3] : (s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X2),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK14),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,sK15))))) | s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK16),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17))))) | s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK18),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),sK19)))))) & ! [X6,X7] : s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X6),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,X7))))) & ! [X4,X5] : s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X4),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),X5))))) & ! [X2,X3] : s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X2),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((? [X12,X13] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X12),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X13))))) | ? [X10,X11] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X10),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X11))))) | ? [X8,X9] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X8),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X9)))))) & ! [X6,X7] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X6),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X7))))) & ! [X4,X5] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X4),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X5))))) & ! [X2,X3] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X3))))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1] : ((? [X6,X7] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X6),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X7))))) | ? [X4,X5] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X4),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))))) | ? [X2,X3] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X3)))))) & ! [X12,X13] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X12),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X13))))) & ! [X10,X11] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X10),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X11))))) & ! [X8,X9] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X8),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : ((? [X6,X7] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X6),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X7))))) | ? [X4,X5] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X4),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))))) | ? [X2,X3] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X3)))))) & (! [X12,X13] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X12),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X13))))) & ! [X10,X11] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X10),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X11))))) & ! [X8,X9] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) != s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X8),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : ((? [X6,X7] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X6),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X7))))) | ? [X4,X5] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X4),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))))) | ? [X2,X3] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X3)))))) => (? [X12,X13] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X12),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X13))))) | ? [X10,X11] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X10),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X11))))) | ? [X8,X9] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X8),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : ((? [X6,X7] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X6),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X7))))) | ? [X4,X5] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X4),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))))) | ? [X2,X3] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X3)))))) => (? [X12,X13] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X12),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Refv_1'(s(X0,X13))))) | ? [X10,X11] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X10),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X0),X11))))) | ? [X8,X9] : s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),X1) = s('type.pair.prod'(fun(X0,bool),'type.semanticPrimitives.store_v'(X0)),'const.pair.,_2'(s(fun(X0,bool),X8),s('type.semanticPrimitives.store_v'(X0),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X9)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((? [X8,X9] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X9))))) | ? [X8,X10] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10))))) | ? [X8,X11] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),X11)))))) => (? [X8,X9] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X9))))) | ? [X8,X11] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),X11))))) | ? [X8,X10] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((? [X8,X9] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X9))))) | ? [X8,X10] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10))))) | ? [X8,X11] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),X11)))))) => (? [X8,X9] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Refv_1'(s(X6,X9))))) | ? [X8,X11] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.Varray_1'(s('type.list.list'(X6),X11))))) | ? [X8,X10] : s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),X7) = s('type.pair.prod'(fun(X6,bool),'type.semanticPrimitives.store_v'(X6)),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.semanticPrimitives.store_v'(X6),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X10)))))))),
  file('thm.evalProps.evalProps_96_prove_ltb','thm.evalProps.evalProps_96_prove_ltb')).
fof(f4013,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f400,f225])).
fof(f225,plain,(
  ( ! [X6,X7] : (s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X6),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,X7)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f400,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK14),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,sK15))))) | $spl0),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK14),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,sK15))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f402,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK16),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17))))) | $spl2),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK16),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f404,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK18),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),sK19))))) | $spl4),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK18),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),sK19))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f224,plain,(
  s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK18),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),sK19))))) | s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK16),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.W8array_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK17))))) | s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) = s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),sK14),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Refv_1'(s(sK12,sK15)))))),
  inference(cnf_transformation,[],[f139])).
fof(f4575,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f404,f226])).
fof(f226,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),sK13) != s('type.pair.prod'(fun(sK12,bool),'type.semanticPrimitives.store_v'(sK12)),'const.pair.,_2'(s(fun(sK12,bool),X4),s('type.semanticPrimitives.store_v'(sK12),'const.semanticPrimitives.Varray_1'(s('type.list.list'(sK12),X5)))))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 359
% Passive clauses: 1449
% Generated clauses: 4345
% Final active clauses: 359
% Final passive clauses: 927
% Input formulas: 37
% Initial clauses: 171
% 
% Duplicate literals: 153
% Trivial inequalities: 17
% Fw subsumption resolutions: 293
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2255
% 
% Binary resolution: 2693
% Factoring: 767
% Forward superposition: 138
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 96
% Split components: 194
% SAT solver clauses: 176
% SAT solver unit clauses: 9
% SAT solver binary clauses: 32
% SAT solver learnt clauses: 1
% 
% Sat splits: 96
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 175
% TWLsolver calls for satisfiability: 147
% 
% Memory used [KB]: 2302
% Time elapsed: 0.070 s
% ------------------------------
% ------------------------------
% Success in time 0.08 s
