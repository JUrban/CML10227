Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.labProps
% (9697)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 443
% Passive clauses: 4537
% Generated clauses: 33599
% Final active clauses: 221
% Final passive clauses: 3367
% Input formulas: 96
% Initial clauses: 173
% 
% Duplicate literals: 550
% Trivial inequalities: 374
% Fw subsumption resolutions: 1338
% Fw demodulations: 8332
% Bw demodulations: 167
% 
% Simple tautologies: 353
% Equational tautologies: 33
% Forward subsumptions: 18125
% Fw demodulations to eq. taut.: 36
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 151
% Forward superposition: 12175
% Backward superposition: 9896
% Self superposition: 97
% Equality factoring: 42
% Equality resolution: 76
% 
% Split clauses: 145
% Split components: 296
% SAT solver clauses: 399
% SAT solver unit clauses: 12
% SAT solver binary clauses: 154
% 
% Sat splits: 145
% Sat splitting refutations: 19
% 
% TWLsolver clauses: 399
% TWLsolver calls for satisfiability: 142
% 
% Memory used [KB]: 16758
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.labProps
% (9715)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 324
% Passive clauses: 1897
% Generated clauses: 26260
% Final active clauses: 224
% Final passive clauses: 1379
% Input formulas: 96
% Initial clauses: 173
% 
% Duplicate literals: 162
% Trivial inequalities: 363
% Fw subsumption resolutions: 1163
% Fw demodulations: 7407
% Bw demodulations: 258
% Condensations: 199
% Global subsumptions: 18
% 
% Simple tautologies: 175
% Equational tautologies: 29
% Forward subsumptions: 11912
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 133
% Factoring: 2
% Forward superposition: 8702
% Backward superposition: 5541
% Self superposition: 75
% Equality factoring: 26
% Equality resolution: 68
% 
% Split clauses: 31
% Split components: 62
% SAT solver clauses: 3033
% SAT solver unit clauses: 239
% SAT solver binary clauses: 65
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 2
% 
% Sat splits: 31
% Sat splitting refutations: 37
% 
% TWLsolver clauses: 2961
% TWLsolver calls for satisfiability: 669
% 
% Memory used [KB]: 18677
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.labProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.labProps
% SZS output start Proof for thm.labProps
fof(f89908,plain,(
  $false),
  inference(subsumption_resolution,[],[f89907,f286])).
fof(f286,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1)),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))) & s('type.num.num',sK0) != s('type.num.num',sK1) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK2))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f201])).
fof(f201,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & s('type.num.num',X0) != s('type.num.num',X1) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X2))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),
  inference(flattening,[],[f200])).
fof(f200,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & s('type.num.num',X0) != s('type.num.num',X1) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X2)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),
  inference(ennf_transformation,[],[f99])).
fof(f99,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & s('type.num.num',X0) != s('type.num.num',X1) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X2)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) & ~s('type.num.num',X0) = s('type.num.num',X1) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X2)))) => ~s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) & ~s('type.num.num',X6) = s('type.num.num',X7) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X8)))) => ~s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) & ~s('type.num.num',X6) = s('type.num.num',X7) & s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num',X8))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num',X8)))) => ~s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X8))))),
  file('thm.labProps.labProps_|49|4_prove_ltb','thm.labProps.labProps_|49|4_prove_ltb')).
fof(f89907,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1)),
  inference(forward_demodulation,[],[f89906,f13235])).
fof(f13235,plain,(
  ( ! [X4] : (s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X4),s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK2)))))) )),
  inference(subsumption_resolution,[],[f13184,f289])).
fof(f289,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.labProps.labProps_|49|4_prove_ltb',aHL_TRUTH)).
fof(f13184,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X4),s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X4),s('type.num.num',sK2)))))) )),
  inference(superposition,[],[f484,f490])).
fof(f490,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2)))),
  inference(unit_resulting_resolution,[],[f285,f333])).
fof(f333,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.labProps.labProps_|49|4_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f285,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f220])).
fof(f484,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f402,f330])).
fof(f330,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) => ! [X11] : (s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X11),s('type.num.num',X7))),s('type.num.num',X7))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X7))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X7))),s('type.num.num',X7))))))),
  file('thm.labProps.labProps_|49|4_prove_ltb','thm.arithmetic.DIVISION')).
fof(f402,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X9,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X7)))),
  file('thm.labProps.labProps_|49|4_prove_ltb','thm.arithmetic.MULT_SYM')).
fof(f89906,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))),
  inference(forward_demodulation,[],[f89613,f288])).
fof(f288,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f220])).
fof(f89613,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(superposition,[],[f13235,f485])).
fof(f485,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(forward_demodulation,[],[f483,f402])).
fof(f483,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))),
  inference(backward_demodulation,[],[f402,f287])).
fof(f287,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK0),s('type.num.num',sK2))),s('type.num.num',sK2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f220])).
% SZS output end Proof for thm.labProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 467
% Passive clauses: 6289
% Generated clauses: 88628
% Final active clauses: 332
% Final passive clauses: 2791
% Input formulas: 96
% Initial clauses: 173
% Discarded non-redundant clauses: 14206
% 
% Duplicate literals: 113
% Trivial inequalities: 126
% Fw subsumption resolutions: 427
% Fw demodulations: 36944
% Bw demodulations: 406
% Condensations: 117
% 
% Simple tautologies: 122
% Equational tautologies: 234
% Forward subsumptions: 34333
% Fw demodulations to eq. taut.: 373
% Bw demodulations to eq. taut.: 15
% 
% Unit resulting resolution: 33017
% Forward superposition: 10051
% Backward superposition: 7090
% Self superposition: 67
% Equality factoring: 26
% Equality resolution: 25
% 
% Split clauses: 45
% Split components: 90
% SAT solver clauses: 6382
% SAT solver unit clauses: 836
% SAT solver binary clauses: 3417
% 
% Sat splits: 45
% Sat splitting refutations: 1
% 
% Memory used [KB]: 50532
% Time elapsed: 4.696 s
% ------------------------------
% ------------------------------
% Success in time 6.03 s
