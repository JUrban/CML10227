Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.mod_to_conProof
% (143852)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 982
% Passive clauses: 7389
% Generated clauses: 40842
% Final active clauses: 920
% Final passive clauses: 6052
% Input formulas: 261
% Initial clauses: 528
% 
% Duplicate literals: 210
% Trivial inequalities: 64
% Fw subsumption resolutions: 2015
% Fw demodulations: 3671
% Bw demodulations: 30
% 
% Simple tautologies: 245
% Equational tautologies: 31
% Forward subsumptions: 26930
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 5609
% Factoring: 1025
% Forward superposition: 13728
% Backward superposition: 13720
% Self superposition: 80
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 238
% Split components: 478
% SAT solver clauses: 390
% SAT solver unit clauses: 15
% SAT solver binary clauses: 68
% 
% Sat splits: 238
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 390
% TWLsolver calls for satisfiability: 342
% 
% Memory used [KB]: 19573
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.mod_to_conProof
% (143892)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 485
% Passive clauses: 3013
% Generated clauses: 25069
% Final active clauses: 451
% Final passive clauses: 2030
% Input formulas: 261
% Initial clauses: 528
% 
% Duplicate literals: 88
% Trivial inequalities: 56
% Fw subsumption resolutions: 845
% Fw demodulations: 2897
% Bw demodulations: 506
% Condensations: 112
% Global subsumptions: 24
% 
% Simple tautologies: 227
% Equational tautologies: 15
% Forward subsumptions: 13966
% Fw demodulations to eq. taut.: 14
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 1882
% Factoring: 307
% Forward superposition: 9131
% Backward superposition: 5398
% Self superposition: 82
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 4172
% SAT solver unit clauses: 657
% SAT solver binary clauses: 206
% SAT solver learnt clauses: 49
% SAT solver learnt literals: 13
% 
% Sat splits: 5
% Sat splitting refutations: 41
% 
% TWLsolver clauses: 4075
% TWLsolver calls for satisfiability: 7769
% 
% Memory used [KB]: 22643
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.mod_to_conProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.mod_to_conProof
% SZS output start Proof for thm.mod_to_conProof
fof(f21886,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f1240,f897])).
fof(f897,plain,(
  ( ! [X4,X5] : (s('type.pair.prod'('type.modSem.state'(sK18),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(sK18),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(sK18),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',sK20),s('type.modSem.state'(sK18),sK19),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',sK21),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))) )),
  inference(cnf_transformation,[],[f702])).
fof(f702,plain,(
  ! [X4,X5] : s('type.pair.prod'('type.modSem.state'(sK18),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(sK18),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(sK18),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',sK20),s('type.modSem.state'(sK18),sK19),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',sK21),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19,sK20,sK21])],[f616])).
fof(f616,plain,(
  ? [X0,X1,X2,X3] : ! [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) != s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) = s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X5))) = s('type.pair.prod'('type.modSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X2),s('type.modSem.state'(X0),X1),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X3),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X11))) = s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X8),s('type.modSem.state'(X6),X7),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X9),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : ? [X10,X11] : s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.pair.,_2'(s('type.modSem.state'(X6),X10),s('type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v'),X11))) = s('type.pair.prod'('type.modSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.modSem.v'),'type.modSem.v')),'const.modSem.evaluate_3'(s('type.modSem.environment',X8),s('type.modSem.state'(X6),X7),s('type.list.list'('type.modLang.exp'),'const.list.CONS_2'(s('type.modLang.exp',X9),s('type.list.list'('type.modLang.exp'),'const.list.NIL_0')))))),
  file('thm.mod_to_conProof.mod_to_conProof_92_prove_ltb','thm.mod_to_conProof.mod_to_conProof_92_prove_ltb')).
fof(f1240,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK105(X2,X1,X0)),s(X1,sK106(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f836])).
fof(f836,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK105(X2,X1,X0)),s(X1,sK106(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK105,sK106])],[f491])).
fof(f491,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f490])).
fof(f490,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f254])).
fof(f254,axiom,(
  ! [X42,X43] : ! [X37] : ? [X48,X47] : s('type.pair.prod'(X42,X43),X37) = s('type.pair.prod'(X42,X43),'const.pair.,_2'(s(X42,X48),s(X43,X47)))),
  file('thm.mod_to_conProof.mod_to_conProof_92_prove_ltb','thm.pair.ABS_PAIR_THM')).
% SZS output end Proof for thm.mod_to_conProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 458
% Passive clauses: 1770
% Generated clauses: 21009
% Final active clauses: 452
% Final passive clauses: 1271
% Input formulas: 261
% Initial clauses: 528
% 
% Duplicate literals: 7
% Trivial inequalities: 11
% Fw subsumption resolutions: 152
% Fw demodulations: 2614
% Bw demodulations: 47
% Condensations: 22
% 
% Simple tautologies: 111
% Equational tautologies: 24
% Forward subsumptions: 15652
% Fw demodulations to eq. taut.: 616
% 
% Unit resulting resolution: 2682
% Factoring: 1
% Forward superposition: 9203
% Backward superposition: 5665
% Self superposition: 70
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 1776
% SAT solver unit clauses: 745
% SAT solver binary clauses: 775
% 
% Sat splits: 2
% 
% Memory used [KB]: 14072
% Time elapsed: 0.334 s
% ------------------------------
% ------------------------------
% Success in time 1.628 s
