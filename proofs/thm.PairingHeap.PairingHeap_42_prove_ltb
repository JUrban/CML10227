Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.PairingHeap
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.PairingHeap
% SZS output start Proof for thm.PairingHeap
fof(f4329,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4315,f63,f91,f65,f102,f2476,f3692,f62,f90,f61,f96,f60,f94,f92,f98,f495,f58,f93,f99,f3673,f4114,f368,f372,f320])).
fof(f320,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,X8)) ) | $spl22),
  inference(cnf_transformation,[],[f320_D])).
fof(f320_D,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,X8)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f372,plain,(
  s(bool,'F_0') = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) | $spl26),
  inference(cnf_transformation,[],[f372_D])).
fof(f372_D,plain,(
  s(bool,'F_0') = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f368,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl2)),
  inference(duplicate_literal_removal,[],[f328])).
fof(f328,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f293,f66])).
fof(f66,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.PairingHeap.PairingHeap_42_prove_ltb',aHL_BOOL_CASES)).
fof(f293,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f213,f91])).
fof(f213,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(superposition,[],[f90,f104])).
fof(f104,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f66,f66])).
fof(f4114,plain,(
  $false | ($spl5 | $spl160)),
  inference(subsumption_resolution,[],[f4113,f94])).
fof(f4113,plain,(
  sP0(sK5,sK6) | $spl160),
  inference(subsumption_resolution,[],[f4083,f57])).
fof(f57,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK2(X1,X0)),s('type.semanticPrimitives.v',sK4(X1,X0))))) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ! [X6,X7,X8,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X6),s('type.semanticPrimitives.v',X7)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X8),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9)))))) & ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),sK1(X1,X0)),s('type.semanticPrimitives.v',sK2(X1,X0))))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),sK3(X1,X0)),s('type.semanticPrimitives.v',sK4(X1,X0))))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK2(X1,X0)),s('type.semanticPrimitives.v',sK4(X1,X0)))))) | sP0(X0,X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4])],[f34])).
fof(f34,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ! [X6,X7,X8,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X6),s('type.semanticPrimitives.v',X7)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X8),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9)))))) & (? [X2,X3,X4,X5] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X2),s('type.semanticPrimitives.v',X3)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X4),s('type.semanticPrimitives.v',X5)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',X5))))) | sP0(X0,X1)))),
  inference(rectify,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ! [X7,X8,X9,X10] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10)))))) & (? [X7,X8,X9,X10] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> ! [X7,X8,X9,X10] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f4083,plain,(
  p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK2(sK6,sK5)),s('type.semanticPrimitives.v',sK4(sK6,sK5))))) | sP0(sK5,sK6) | $spl160),
  inference(resolution,[],[f3692,f55])).
fof(f55,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),sK1(X1,X0)),s('type.semanticPrimitives.v',sK2(X1,X0))))) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f35])).
fof(f3673,plain,(
  $false | ($spl2 | $spl6 | $spl8 | $spl10 | $spl15 | $spl26)),
  inference(subsumption_resolution,[],[f3672,f102])).
fof(f3672,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl6 | $spl8 | $spl10 | $spl15 | $spl26)),
  inference(forward_demodulation,[],[f3671,f372])).
fof(f3671,plain,(
  p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10)))) | ($spl2 | $spl6 | $spl8 | $spl10 | $spl15)),
  inference(subsumption_resolution,[],[f3644,f91])).
fof(f3644,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10)))) | ($spl2 | $spl6 | $spl8 | $spl10 | $spl15)),
  inference(superposition,[],[f2506,f136])).
fof(f136,plain,(
  s(bool,'T_0') = s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8))) | ($spl8 | $spl15)),
  inference(subsumption_resolution,[],[f135,f102])).
fof(f135,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8))) | $spl8),
  inference(superposition,[],[f98,f66])).
fof(f2506,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X0),s('type.semanticPrimitives.v',X1)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X1),s('type.semanticPrimitives.v',sK10))))) ) | ($spl2 | $spl6 | $spl10 | $spl15)),
  inference(subsumption_resolution,[],[f2479,f91])).
fof(f2479,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X0),s('type.semanticPrimitives.v',X1)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X1),s('type.semanticPrimitives.v',sK10))))) ) | ($spl6 | $spl10 | $spl15)),
  inference(superposition,[],[f99,f133])).
fof(f133,plain,(
  s(bool,'T_0') = s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10))) | ($spl6 | $spl15)),
  inference(subsumption_resolution,[],[f132,f102])).
fof(f132,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10))) | $spl6),
  inference(superposition,[],[f96,f66])).
fof(f99,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X8),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X6),s('type.semanticPrimitives.v',X7)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9))))) ) | $spl10),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X8),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X6),s('type.semanticPrimitives.v',X7)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f93,plain,(
  sP0(sK5,sK6) | $spl4),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  sP0(sK5,sK6) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f58,plain,(
  ( ! [X6,X8,X7,X9] : (sP0(sK5,sK6) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X8),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X6),s('type.semanticPrimitives.v',X7))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ((! [X6,X7,X8,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X6),s('type.semanticPrimitives.v',X7)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X8),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9))))) & p(s(bool,'T_0'))) | sP0(sK5,sK6)) & ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))))) | ~p(s(bool,'T_0')) | ~sP0(sK5,sK6))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6,sK7,sK8,sK9,sK10])],[f38])).
fof(f38,plain,(
  ? [X0,X1] : (((! [X6,X7,X8,X9] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X6),s('type.semanticPrimitives.v',X7)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X8),s('type.semanticPrimitives.v',X9)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9))))) & p(s(bool,'T_0'))) | sP0(X0,X1)) & (? [X2,X3,X4,X5] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X2),s('type.semanticPrimitives.v',X3)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X4),s('type.semanticPrimitives.v',X5)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',X5))))) | ~p(s(bool,'T_0')) | ~sP0(X0,X1)))),
  inference(rectify,[],[f37])).
fof(f37,plain,(
  ? [X0,X1] : (((! [X3,X4,X5,X6] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) | sP0(X0,X1)) & (? [X3,X4,X5,X6] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) | ~p(s(bool,'T_0')) | ~sP0(X0,X1)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ? [X0,X1] : (((! [X3,X4,X5,X6] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) | sP0(X0,X1)) & ((? [X3,X4,X5,X6] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) & ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) | ~p(s(bool,'T_0'))) | ~sP0(X0,X1)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ? [X0,X1] : ((! [X3,X4,X5,X6] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) <~> sP0(X0,X1))),
  inference(definition_folding,[],[f29,f31])).
fof(f29,plain,(
  ? [X0,X1] : ((! [X3,X4,X5,X6] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) <~> ! [X7,X8,X9,X10] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ? [X0,X1] : ((! [X3,X4,X5,X6] : ((~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6))))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) <~> ! [X7,X8,X9,X10] : ((~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10))))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : ((! [X3,X4,X5,X6] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) <=> ! [X7,X8,X9,X10] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0] : ! [X1] : ((! [X3,X4,X5,X6] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X3),s('type.semanticPrimitives.v',X4)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X5),s('type.semanticPrimitives.v',X6))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X4),s('type.semanticPrimitives.v',X6))))) & p(s(bool,'T_0'))) <=> ! [X7,X8,X9,X10] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X7),s('type.semanticPrimitives.v',X8)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X9),s('type.semanticPrimitives.v',X10))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X8),s('type.semanticPrimitives.v',X10))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : ((! [X8,X9,X10,X11] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X8),s('type.semanticPrimitives.v',X9)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X10),s('type.semanticPrimitives.v',X11))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.v',X11))))) & ! [X12] : p(s(bool,'T_0'))) <=> ! [X8,X9,X10,X11] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X8),s('type.semanticPrimitives.v',X9)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X10),s('type.semanticPrimitives.v',X11))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.v',X11))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : ((! [X8,X9,X10,X11] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X8),s('type.semanticPrimitives.v',X9)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X10),s('type.semanticPrimitives.v',X11))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.v',X11))))) & ! [X12] : p(s(bool,'T_0'))) <=> ! [X8,X9,X10,X11] : ((p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X8),s('type.semanticPrimitives.v',X9)))) & p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X6,fun('type.semanticPrimitives.v',bool)),X7),s('type.PairingHeap.heap'(X6),X10),s('type.semanticPrimitives.v',X11))))) => p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X9),s('type.semanticPrimitives.v',X11))))))),
  file('thm.PairingHeap.PairingHeap_42_prove_ltb','thm.PairingHeap.PairingHeap_42_prove_ltb')).
fof(f495,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X0),s('type.semanticPrimitives.v',X1)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X2),s('type.semanticPrimitives.v',X3)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',X1))))) ) | $spl4),
  inference(resolution,[],[f54,f93])).
fof(f54,plain,(
  ( ! [X6,X0,X8,X7,X1,X9] : (~sP0(X0,X1) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X8),s('type.semanticPrimitives.v',X9)))) | ~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),X6),s('type.semanticPrimitives.v',X7)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X7),s('type.semanticPrimitives.v',X9))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f98,plain,(
  p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8)))) | $spl8),
  inference(cnf_transformation,[],[f98_D])).
fof(f98_D,plain,(
  p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f92,plain,(
  ~p(s(bool,'T_0')) | $spl3),
  inference(cnf_transformation,[],[f92_D])).
fof(f92_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f94,plain,(
  ~sP0(sK5,sK6) | $spl5),
  inference(cnf_transformation,[],[f94_D])).
fof(f94_D,plain,(
  ~sP0(sK5,sK6) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f60,plain,(
  ~sP0(sK5,sK6) | ~p(s(bool,'T_0')) | p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK7),s('type.semanticPrimitives.v',sK8))))),
  inference(cnf_transformation,[],[f39])).
fof(f96,plain,(
  p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10)))) | $spl6),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f61,plain,(
  ~sP0(sK5,sK6) | ~p(s(bool,'T_0')) | p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),sK9),s('type.semanticPrimitives.v',sK10))))),
  inference(cnf_transformation,[],[f39])).
fof(f90,plain,(
  ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10)))) | $spl1),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f62,plain,(
  ~sP0(sK5,sK6) | ~p(s(bool,'T_0')) | ~p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',sK8),s('type.semanticPrimitives.v',sK10))))),
  inference(cnf_transformation,[],[f39])).
fof(f3692,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X2),s('type.semanticPrimitives.v',X3)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',sK4(sK6,sK5)))))) ) | $spl160),
  inference(cnf_transformation,[],[f3692_D])).
fof(f3692_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X2),s('type.semanticPrimitives.v',X3)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',sK4(sK6,sK5)))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f2476,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(sK5,fun('type.semanticPrimitives.v',bool)),sK6),s('type.PairingHeap.heap'(sK5),X2),s('type.semanticPrimitives.v',X3)))) | p(s(bool,'const.ml_translator.types_match_2'(s('type.semanticPrimitives.v',X3),s('type.semanticPrimitives.v',sK4(sK6,sK5))))) | sP0(sK5,sK6)) ) | $spl10),
  inference(resolution,[],[f99,f56])).
fof(f56,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.PairingHeap.PAIRINGHEAP_HEAP_TYPE_3'(s(fun(X0,fun('type.semanticPrimitives.v',bool)),X1),s('type.PairingHeap.heap'(X0),sK3(X1,X0)),s('type.semanticPrimitives.v',sK4(X1,X0))))) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f35])).
fof(f102,plain,(
  ~p(s(bool,'F_0')) | $spl15),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f65,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.PairingHeap.PairingHeap_42_prove_ltb',aHL_FALSITY)).
fof(f91,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f63,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.PairingHeap.PairingHeap_42_prove_ltb',aHL_TRUTH)).
fof(f4315,plain,(
  $false | ($spl2 | $spl15 | $spl22)),
  inference(subsumption_resolution,[],[f4149,f91])).
fof(f4149,plain,(
  ~p(s(bool,'T_0')) | ($spl15 | $spl22)),
  inference(backward_demodulation,[],[f320,f102])).
% SZS output end Proof for thm.PairingHeap
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 57
% Passive clauses: 543
% Generated clauses: 4118
% Final active clauses: 20
% Final passive clauses: 396
% Input formulas: 13
% Initial clauses: 33
% 
% Duplicate literals: 522
% Trivial inequalities: 56
% Fw subsumption resolutions: 418
% Fw demodulations: 27
% Bw demodulations: 25
% 
% Simple tautologies: 111
% Equational tautologies: 71
% Forward subsumptions: 1854
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 57
% Forward superposition: 1325
% Backward superposition: 1151
% Self superposition: 205
% Equality factoring: 188
% Equality resolution: 1
% 
% Split clauses: 315
% Split components: 634
% SAT solver clauses: 552
% SAT solver unit clauses: 62
% SAT solver binary clauses: 134
% SAT solver learnt clauses: 9
% SAT solver learnt literals: 14
% 
% Sat splits: 315
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 532
% TWLsolver calls for satisfiability: 50
% 
% Memory used [KB]: 2046
% Time elapsed: 0.116 s
% ------------------------------
% ------------------------------
% Success in time 0.12 s
