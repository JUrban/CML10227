Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f2336,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2325])).
fof(f2325,plain,(
  s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),sK2)))),
  inference(superposition,[],[f70,f95])).
fof(f95,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8,X9,X11] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X11),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X11),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  file('thm.wordProps.wordProps_|49|82_prove_ltb','thm.wordProps.get_vars_perm')).
fof(f70,plain,(
  s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK3))),s('type.wordSem.state'(sK0,sK1),sK2)))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),sK2))) != s('type.option.option'('type.list.list'('type.wordSem.word_loc'(sK0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),sK4),s('type.wordSem.state'(sK0,sK1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),sK3))),s('type.wordSem.state'(sK0,sK1),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f56])).
fof(f56,plain,(
  ? [X0,X1,X2,X3,X4] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) != s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),X2))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X0))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X4),s('type.wordSem.state'(X0,X1),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X3))),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X10),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X10),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X10),s('type.wordSem.state'(X6,X7),X8))) = s('type.option.option'('type.list.list'('type.wordSem.word_loc'(X6))),'const.wordSem.get_vars_2'(s('type.list.list'('type.num.num'),X10),s('type.wordSem.state'(X6,X7),'const.wordSem.state_permute_fupd_2'(s(fun(fun('type.num.num',fun('type.num.num','type.num.num')),fun('type.num.num',fun('type.num.num','type.num.num'))),'const.combin.K_1'(s(fun('type.num.num',fun('type.num.num','type.num.num')),X9))),s('type.wordSem.state'(X6,X7),X8)))))),
  file('thm.wordProps.wordProps_|49|82_prove_ltb','thm.wordProps.wordProps_|49|82_prove_ltb')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 61
% Passive clauses: 457
% Generated clauses: 2167
% Final active clauses: 54
% Final passive clauses: 309
% Input formulas: 21
% Initial clauses: 28
% 
% Duplicate literals: 180
% Trivial inequalities: 51
% Fw subsumption resolutions: 209
% Fw demodulations: 72
% Bw demodulations: 5
% 
% Simple tautologies: 89
% Equational tautologies: 22
% Forward subsumptions: 1010
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 52
% Forward superposition: 738
% Backward superposition: 695
% Self superposition: 68
% Equality factoring: 36
% Equality resolution: 14
% 
% Split clauses: 78
% Split components: 167
% SAT solver clauses: 121
% SAT solver unit clauses: 4
% SAT solver binary clauses: 32
% 
% Sat splits: 78
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 117
% TWLsolver calls for satisfiability: 33
% 
% Memory used [KB]: 2430
% Time elapsed: 0.064 s
% ------------------------------
% ------------------------------
% Success in time 0.064 s
