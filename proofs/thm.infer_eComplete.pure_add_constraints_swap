Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.infer_eComplete
% (105995)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 135
% Passive clauses: 1436
% Generated clauses: 14153
% Final active clauses: 128
% Final passive clauses: 1180
% Input formulas: 26
% Initial clauses: 67
% 
% Duplicate literals: 740
% Trivial inequalities: 330
% Fw subsumption resolutions: 2475
% Fw demodulations: 1432
% Bw demodulations: 7
% 
% Simple tautologies: 383
% Equational tautologies: 43
% Forward subsumptions: 5766
% 
% Binary resolution: 435
% Forward superposition: 3745
% Backward superposition: 4457
% Self superposition: 163
% Equality factoring: 131
% Equality resolution: 32
% 
% Split clauses: 1093
% Split components: 2296
% SAT solver clauses: 1672
% SAT solver unit clauses: 25
% SAT solver binary clauses: 184
% 
% Sat splits: 1093
% 
% TWLsolver clauses: 1669
% TWLsolver calls for satisfiability: 178
% 
% Memory used [KB]: 7036
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.infer_eComplete
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.infer_eComplete
% SZS output start Proof for thm.infer_eComplete
fof(f3801,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3797,f109,f197,f1114,f1118,f1116,f220,f224,f107,f193,f114,f201,f431,f432,f108,f191,f171,f217,f218,f222,f106,f195,f1125,f1136,f113,f202,f3750,f344,f348,f172,f216,f3701,f3703,f228,f232,f111,f199,f449,f457,f118,f203,f434,f435,f387,f388,f170,f215,f3637,f3639,f425,f438,f1432,f1434])).
fof(f1434,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | $spl222),
  inference(cnf_transformation,[],[f1434_D])).
fof(f1434_D,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f1432,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | ($spl6 | $spl30 | $spl32 | $spl80)),
  inference(subsumption_resolution,[],[f1431,f197])).
fof(f1431,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | ($spl6 | $spl30 | $spl32 | $spl80)),
  inference(forward_demodulation,[],[f1430,f222])).
fof(f1430,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | ($spl6 | $spl32 | $spl80)),
  inference(subsumption_resolution,[],[f1415,f197])).
fof(f1415,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | ($spl32 | $spl80)),
  inference(superposition,[],[f348,f224])).
fof(f438,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X20)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17)))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X18,X19,X17,X20))))) ) | $spl106),
  inference(cnf_transformation,[],[f438_D])).
fof(f438_D,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X20)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17)))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X18,X19,X17,X20))))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f425,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X20)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17)))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X17),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X19),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X18))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X18,X19,X17,X20))))) ) | ($spl12 | $spl28)),
  inference(resolution,[],[f217,f201])).
fof(f3639,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | $spl338),
  inference(cnf_transformation,[],[f3639_D])).
fof(f3639_D,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f3637,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl30 | $spl32 | $spl106)),
  inference(subsumption_resolution,[],[f3636,f197])).
fof(f3636,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl30 | $spl32 | $spl106)),
  inference(forward_demodulation,[],[f3635,f222])).
fof(f3635,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl32 | $spl106)),
  inference(subsumption_resolution,[],[f3612,f197])).
fof(f3612,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl32 | $spl106)),
  inference(superposition,[],[f438,f224])).
fof(f215,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) | $spl24),
  inference(cnf_transformation,[],[f215_D])).
fof(f215_D,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f170,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))))) => s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X2) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X20,X7,X21,X22] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X20),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X20),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22))))) => s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X21) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X22))),
  file('thm.infer_eComplete.pure_add_constraints_swap','thm.infer_eComplete.pure_add_constraints_functional')).
fof(f388,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)) ) | $spl90),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f387,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)) ) | ($spl6 | $spl24 | $spl30 | $spl32)),
  inference(subsumption_resolution,[],[f386,f197])).
fof(f386,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)) ) | ($spl6 | $spl24 | $spl30 | $spl32)),
  inference(forward_demodulation,[],[f385,f222])).
fof(f385,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))))) ) | ($spl6 | $spl24 | $spl32)),
  inference(subsumption_resolution,[],[f376,f197])).
fof(f376,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))))) ) | ($spl24 | $spl32)),
  inference(superposition,[],[f215,f224])).
fof(f435,plain,(
  ( ! [X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X1))) ) | $spl100),
  inference(cnf_transformation,[],[f435_D])).
fof(f435_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X1))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f434,plain,(
  ( ! [X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X1))) ) | ($spl6 | $spl28 | $spl30 | $spl90)),
  inference(subsumption_resolution,[],[f433,f197])).
fof(f433,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X1))) ) | ($spl28 | $spl30 | $spl90)),
  inference(forward_demodulation,[],[f421,f222])).
fof(f421,plain,(
  ( ! [X1] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X1))) ) | ($spl28 | $spl90)),
  inference(resolution,[],[f217,f388])).
fof(f203,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f118,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.infer_eComplete.pure_add_constraints_swap','thm.bool.EQ_CLAUSES|split|2')).
fof(f457,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X3))) ) | $spl112),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  ( ! [X3] : (s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3))) | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X3))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f449,plain,(
  ( ! [X3] : (s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,X3)) | s(bool,'F_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X3)))) ) | ($spl16 | $spl100)),
  inference(resolution,[],[f435,f203])).
fof(f199,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f199_D])).
fof(f199_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f111,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.infer_eComplete.pure_add_constraints_swap',aHL_FALSITY)).
fof(f232,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl35),
  inference(cnf_transformation,[],[f232_D])).
fof(f232_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f228,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl9 | $spl14)),
  inference(resolution,[],[f202,f199])).
fof(f3703,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))) | $spl342),
  inference(cnf_transformation,[],[f3703_D])).
fof(f3703_D,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f3701,plain,(
  s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))) | ($spl35 | $spl112 | $spl338)),
  inference(subsumption_resolution,[],[f3647,f232])).
fof(f3647,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0) = s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))) | ($spl112 | $spl338)),
  inference(superposition,[],[f3639,f457])).
fof(f216,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) | $spl26),
  inference(cnf_transformation,[],[f216_D])).
fof(f216_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f172,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0))))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ? [X4] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) | ? [X4] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) => ? [X4] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))))) => ? [X10] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))))))),
  file('thm.infer_eComplete.pure_add_constraints_swap','thm.infer_eComplete.infer_eComplete_4_prove_ltb')).
fof(f348,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X10))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X9,X10,X8,X11)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) ) | $spl80),
  inference(cnf_transformation,[],[f348_D])).
fof(f348_D,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X10))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X9,X10,X8,X11)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f344,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X10))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X8)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X9,X10,X8,X11)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))) ) | ($spl12 | $spl26)),
  inference(resolution,[],[f216,f201])).
fof(f3750,plain,(
  $false | ($spl6 | $spl30 | $spl80 | $spl185 | $spl338 | $spl342)),
  inference(subsumption_resolution,[],[f3749,f1136])).
fof(f3749,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl30 | $spl80 | $spl338 | $spl342)),
  inference(forward_demodulation,[],[f3720,f3703])).
fof(f3720,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl30 | $spl80 | $spl338)),
  inference(subsumption_resolution,[],[f3719,f197])).
fof(f3719,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl30 | $spl80 | $spl338)),
  inference(forward_demodulation,[],[f3718,f222])).
fof(f3718,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl6 | $spl80 | $spl338)),
  inference(subsumption_resolution,[],[f3664,f197])).
fof(f3664,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | s(bool,'T_0') = s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK2,sK3,sK1,sK5(sK3,sK2,sK1,sK0))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl80 | $spl338)),
  inference(superposition,[],[f348,f3639])).
fof(f202,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f113,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.infer_eComplete.pure_add_constraints_swap','thm.bool.EQ_CLAUSES|split|0')).
fof(f1136,plain,(
  s(bool,'T_0') != s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | $spl185),
  inference(cnf_transformation,[],[f1136_D])).
fof(f1136_D,plain,(
  s(bool,'T_0') != s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) <=> ~$spl185),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl185])])).
fof(f1125,plain,(
  s(bool,'T_0') != s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)))) | ($spl14 | $spl175)),
  inference(resolution,[],[f1116,f202])).
fof(f195,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | $spl4),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f106,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) & ! [X4] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f58])).
fof(f58,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & ! [X4] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) & ! [X4] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) => ? [X4] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))))) => ? [X10] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7)))) & p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6))))) => ? [X10] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X7),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X8),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X9))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X10))))))),
  file('thm.infer_eComplete.pure_add_constraints_swap','thm.infer_eComplete.pure_add_constraints_swap')).
fof(f222,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))) | $spl30),
  inference(cnf_transformation,[],[f222_D])).
fof(f222_D,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f218,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1))) | ($spl4 | $spl12)),
  inference(resolution,[],[f201,f195])).
fof(f217,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0))))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) | $spl28),
  inference(cnf_transformation,[],[f217_D])).
fof(f217_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0))))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f171,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(X3,X2,X1,X0))))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),X2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X1))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f191,plain,(
  ( ! [X4] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) ) | $spl0),
  inference(cnf_transformation,[],[f191_D])).
fof(f191_D,plain,(
  ( ! [X4] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f108,plain,(
  ( ! [X4] : (~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X4))))) )),
  inference(cnf_transformation,[],[f73])).
fof(f432,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)))))) ) | $spl98),
  inference(cnf_transformation,[],[f432_D])).
fof(f432_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)))))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f431,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)))))) ) | ($spl0 | $spl6 | $spl28 | $spl30)),
  inference(subsumption_resolution,[],[f430,f197])).
fof(f430,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)))))) ) | ($spl0 | $spl28 | $spl30)),
  inference(forward_demodulation,[],[f420,f222])).
fof(f420,plain,(
  ( ! [X0] : (~p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,X0)))))) ) | ($spl0 | $spl28)),
  inference(resolution,[],[f217,f191])).
fof(f201,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f201_D])).
fof(f201_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f114,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f74])).
fof(f193,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | $spl2),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f107,plain,(
  p(s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(cnf_transformation,[],[f73])).
fof(f224,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | $spl32),
  inference(cnf_transformation,[],[f224_D])).
fof(f224_D,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f220,plain,(
  s(bool,'T_0') = s(bool,'const.infer.pure_add_constraints_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK1),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK3),s('type.list.list'('type.pair.prod'('type.infer_t.infer_t','type.infer_t.infer_t')),sK2))),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))) | ($spl2 | $spl12)),
  inference(resolution,[],[f201,f193])).
fof(f1116,plain,(
  ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0))))) | $spl175),
  inference(cnf_transformation,[],[f1116_D])).
fof(f1116_D,plain,(
  ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0))))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f1118,plain,(
  ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | $spl177),
  inference(cnf_transformation,[],[f1118_D])).
fof(f1118_D,plain,(
  ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f1114,plain,(
  ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0))))) | ($spl6 | $spl32 | $spl98)),
  inference(subsumption_resolution,[],[f1100,f197])).
fof(f1100,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0)),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_compat_2'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5(sK3,sK2,sK1,sK0))))) | ($spl32 | $spl98)),
  inference(superposition,[],[f432,f224])).
fof(f197,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f109,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.infer_eComplete.pure_add_constraints_swap',aHL_TRUTH)).
fof(f3797,plain,(
  $false | ($spl6 | $spl177 | $spl222)),
  inference(subsumption_resolution,[],[f3796,f197])).
fof(f3796,plain,(
  ~p(s(bool,'T_0')) | ($spl177 | $spl222)),
  inference(forward_demodulation,[],[f1118,f1434])).
% SZS output end Proof for thm.infer_eComplete
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 105
% Passive clauses: 251
% Generated clauses: 3825
% Final active clauses: 53
% Final passive clauses: 90
% Input formulas: 26
% Initial clauses: 67
% 
% Duplicate literals: 214
% Trivial inequalities: 70
% Fw subsumption resolutions: 481
% Fw demodulations: 400
% Bw demodulations: 89
% Condensations: 180
% Global subsumptions: 8
% 
% Simple tautologies: 109
% Equational tautologies: 24
% Forward subsumptions: 1702
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 151
% Factoring: 4
% Forward superposition: 890
% Backward superposition: 816
% Self superposition: 32
% Equality factoring: 36
% Equality resolution: 9
% 
% Split clauses: 28
% Split components: 63
% SAT solver clauses: 431
% SAT solver unit clauses: 73
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 18
% SAT solver learnt literals: 1
% 
% Sat splits: 28
% Sat splitting refutations: 25
% 
% TWLsolver clauses: 396
% TWLsolver calls for satisfiability: 304
% 
% Memory used [KB]: 2942
% Time elapsed: 0.101 s
% ------------------------------
% ------------------------------
% Success in time 0.74 s
