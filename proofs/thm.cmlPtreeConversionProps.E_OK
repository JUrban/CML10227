Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.cmlPtreeConversionProps
% (133762)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 890
% Passive clauses: 6728
% Generated clauses: 41426
% Final active clauses: 413
% Final passive clauses: 3954
% Input formulas: 142
% Initial clauses: 215
% 
% Duplicate literals: 104
% Trivial inequalities: 604
% Fw subsumption resolutions: 1725
% Fw demodulations: 6002
% Bw demodulations: 234
% 
% Simple tautologies: 146
% Equational tautologies: 24
% Forward subsumptions: 25965
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 185
% Factoring: 1
% Forward superposition: 9062
% Backward superposition: 22409
% Self superposition: 63
% Equality factoring: 24
% Equality resolution: 30
% 
% Split clauses: 315
% Split components: 631
% SAT solver clauses: 515
% SAT solver unit clauses: 5
% SAT solver binary clauses: 120
% 
% Sat splits: 315
% Sat splitting refutations: 51
% 
% TWLsolver clauses: 515
% TWLsolver calls for satisfiability: 198
% 
% Memory used [KB]: 18421
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.cmlPtreeConversionProps
% (133787)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 369
% Passive clauses: 3592
% Generated clauses: 24425
% Final active clauses: 214
% Final passive clauses: 637
% Input formulas: 142
% Initial clauses: 215
% 
% Duplicate literals: 4
% Trivial inequalities: 44
% Fw subsumption resolutions: 293
% Fw demodulations: 3695
% Bw demodulations: 2669
% Condensations: 11
% Global subsumptions: 21
% 
% Simple tautologies: 44
% Equational tautologies: 13
% Forward subsumptions: 10955
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 47
% Factoring: 1
% Forward superposition: 4110
% Backward superposition: 9206
% Self superposition: 24
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 74
% Split components: 148
% SAT solver clauses: 4346
% SAT solver unit clauses: 349
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 42
% 
% Sat splits: 74
% Sat splitting refutations: 41
% 
% TWLsolver clauses: 4262
% TWLsolver calls for satisfiability: 910
% 
% Memory used [KB]: 23283
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.cmlPtreeConversionProps
% (133809)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1698
% Passive clauses: 11628
% Generated clauses: 1041580
% Final active clauses: 1011
% Final passive clauses: 3595
% Input formulas: 142
% Initial clauses: 215
% Discarded non-redundant clauses: 224
% 
% Duplicate literals: 215
% Trivial inequalities: 1083
% Fw subsumption resolutions: 2459
% Fw demodulations: 414207
% Bw demodulations: 4328
% Condensations: 400
% 
% Simple tautologies: 722
% Equational tautologies: 3974
% Forward subsumptions: 604621
% Fw demodulations to eq. taut.: 1746
% Bw demodulations to eq. taut.: 9
% 
% Unit resulting resolution: 545972
% Factoring: 1
% Forward superposition: 15061
% Backward superposition: 35965
% Self superposition: 45
% Equality factoring: 28
% Equality resolution: 13
% 
% Split clauses: 206
% Split components: 412
% SAT solver clauses: 12360
% SAT solver unit clauses: 6781
% SAT solver binary clauses: 4811
% 
% Sat splits: 206
% Sat splitting refutations: 318
% 
% Memory used [KB]: 66523
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.cmlPtreeConversionProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.cmlPtreeConversionProps
% SZS output start Proof for thm.cmlPtreeConversionProps
fof(f5426,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f364,f365,f366,f367,f368,f369,f371,f399,f398,f372,f379,f396,f414,f422,f426,f427,f428,f429,f430,f431,f432,f433,f434,f462,f463,f470,f493,f506,f539,f565,f564,f540,f567,f566,f549,f569,f550,f572,f571,f576,f578,f579,f580,f583,f590,f649,f653,f685,f680,f795,f796,f829,f822,f817,f847,f849,f850,f851,f854,f861,f621,f892,f894,f895,f896,f899,f906,f937,f907,f908,f913,f914,f915,f916,f1063,f1069,f1075,f1081,f1085,f1091,f1103,f570,f1154,f1155,f1156,f1328,f1157,f938,f1158,f1159,f1160,f1161,f1162,f1163,f1164,f1165,f1166,f1329,f1167,f939,f1168,f1330,f1169,f940,f1170,f1331,f1334,f1335,f1337,f1338,f1341,f1342,f1343,f1344,f1346,f1349,f1350,f1353,f1355,f1359,f1360,f1362,f1364,f1367,f1368,f1373,f1374,f1378,f1379,f1407,f1409,f1410,f1412,f1414,f1422,f1458,f1460,f1461,f1463,f1465,f1473,f1540,f1558,f1564,f912,f911,f910,f909,f917,f650,f967,f651,f1667,f1669,f1670,f1671,f1674,f1681,f1915,f1963,f1965,f1966,f1968,f1970,f1978,f1449,f2010,f2012,f2013,f2014,f2017,f2024,f2230,f2028,f2030,f2031,f2033,f2035,f2043,f2233,f2386,f2387,f2392,f2390,f2396,f2398,f2399,f2400,f2403,f2410,f3405,f2415,f2417,f2418,f2420,f2422,f2430,f3408,f2754,f2755,f2758,f2760,f2763,f2764,f2765,f2767,f2768,f2769,f2772,f2774,f2775,f2776,f2777,f2779,f2783,f2784,f2785,f2787,f2807,f2808,f2809,f2811,f2818,f2819,f2820,f2821,f3471,f2830,f2831,f2832,f2833,f2842,f3474,f3082,f3083,f3086,f3088,f3091,f3092,f3093,f3095,f3096,f3097,f3100,f3102,f3103,f3104,f3105,f3107,f3111,f3112,f3113,f3115,f3135,f3464,f3136,f3463,f3137,f3459,f3139,f3460,f3146,f3147,f3148,f3149,f3515,f3158,f3159,f3160,f3161,f3170,f3518,f3647,f3649,f3650,f3652,f3654,f3662,f3693,f3695,f395,f394,f3982,f3984,f3985,f3987,f3989,f3997,f4143,f4019,f524,f420,f4232,f4234,f4235,f4237,f4239,f4247,f4286,f4317,f4319,f4320,f4316,f4318,f4300,f4321,f725,f723,f4351,f724,f4352,f726,f4389,f4410,f4411,f4412,f4413,f4414,f4415,f4436,f4437,f4462,f4463,f4469,f4471,f4472,f4473,f4476,f4483,f4517,f4525,f4527,f4528,f4529,f4532,f4539,f4617,f4639,f4640,f4672,f4761,f4762,f4793,f4670,f5020,f5022,f5023,f397,f5025,f401,f5027,f400,f5035,f5174,f402,f5310,f5311,f5319,f5317,f5327,f5329,f423,f418,f5330,f467,f5331,f469,f465,f5334,f437,f436,f5335,f440,f439,f5336,f443,f442,f5337,f446,f445,f5338,f449,f448,f5339,f452,f451,f5340,f455,f454,f5341,f458,f457,f5342,f461,f460,f5425])).
fof(f5425,plain,(
  $false | $spl24),
  inference(equality_resolution,[],[f423])).
fof(f460,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | $spl59),
  inference(cnf_transformation,[],[f460_D])).
fof(f460_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f461,plain,(
  ( ! [X9] : (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X9,sK3))))) ) | $spl60),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X9,sK3))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f5342,plain,(
  ( ! [X9] : (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X9,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f263])).
fof(f263,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0,X1] : (~sP1(X0,X1) | ((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X1),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X1))))) | s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X1,X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X1),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & sP0(X0) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X1,X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X1,X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X1,X0))))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13])],[f202])).
fof(f202,plain,(
  ! [X0,X1] : (~sP1(X0,X1) | ((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X1),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X1))))) | ? [X11] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X11))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X1),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & sP0(X0) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ? [X10] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X10)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ? [X8] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X8))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ? [X7] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ? [X5] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X5))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ? [X4] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ? [X3] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X3)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ? [X2] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X2))))))),
  inference(rectify,[],[f201])).
fof(f201,plain,(
  ! [X1,X2] : (~sP1(X1,X2) | ((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2))))) | ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & sP0(X1) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  inference(nnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X1,X2] : (~sP1(X1,X2) | ((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2))))) | ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & sP0(X1) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f457,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | $spl55),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f458,plain,(
  ( ! [X8] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X8,sK3))))) ) | $spl56),
  inference(cnf_transformation,[],[f458_D])).
fof(f458_D,plain,(
  ( ! [X8] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X8,sK3))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f5341,plain,(
  ( ! [X8] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X8,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f262])).
fof(f262,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f454,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | $spl51),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f455,plain,(
  ( ! [X7] : (s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X7,sK3))))) ) | $spl52),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  ( ! [X7] : (s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X7,sK3))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5340,plain,(
  ( ! [X7] : (s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X7,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f261])).
fof(f261,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f451,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | $spl47),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f452,plain,(
  ( ! [X6] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X6,sK3))))) ) | $spl48),
  inference(cnf_transformation,[],[f452_D])).
fof(f452_D,plain,(
  ( ! [X6] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X6,sK3))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5339,plain,(
  ( ! [X6] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X6,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f260])).
fof(f260,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f448,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | $spl43),
  inference(cnf_transformation,[],[f448_D])).
fof(f448_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f449,plain,(
  ( ! [X5] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X5,sK3))))) ) | $spl44),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  ( ! [X5] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X5,sK3))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5338,plain,(
  ( ! [X5] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X5,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f259])).
fof(f259,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f445,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | $spl39),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f446,plain,(
  ( ! [X4] : (s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X4,sK3))))) ) | $spl40),
  inference(cnf_transformation,[],[f446_D])).
fof(f446_D,plain,(
  ( ! [X4] : (s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X4,sK3))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f5337,plain,(
  ( ! [X4] : (s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X4,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f258])).
fof(f258,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f442,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | $spl35),
  inference(cnf_transformation,[],[f442_D])).
fof(f442_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f443,plain,(
  ( ! [X3] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X3,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) | $spl36),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  ( ! [X3] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X3,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f5336,plain,(
  ( ! [X3] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X3,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f257])).
fof(f257,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X1,X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f439,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | $spl31),
  inference(cnf_transformation,[],[f439_D])).
fof(f439_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f440,plain,(
  ( ! [X2] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X2,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) | $spl32),
  inference(cnf_transformation,[],[f440_D])).
fof(f440_D,plain,(
  ( ! [X2] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X2,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f5335,plain,(
  ( ! [X2] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X2,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f256])).
fof(f256,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X1,X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f436,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | $spl27),
  inference(cnf_transformation,[],[f436_D])).
fof(f436_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f437,plain,(
  ( ! [X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,sK3))))) ) | $spl28),
  inference(cnf_transformation,[],[f437_D])).
fof(f437_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,sK3))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f5334,plain,(
  ( ! [X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f255])).
fof(f255,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,X0)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f465,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | $spl63),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f469,plain,(
  s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(sK3)) | $spl67),
  inference(cnf_transformation,[],[f469_D])).
fof(f469_D,plain,(
  s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(sK3)) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f5331,plain,(
  s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(sK3)) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | $spl2),
  inference(resolution,[],[f425,f265])).
fof(f265,plain,(
  ( ! [X0] : (s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(X0)) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0] : (~sP0(X0) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f205])).
fof(f205,plain,(
  ! [X0] : (~sP0(X0) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ? [X1] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X1))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X1)))),
  inference(rectify,[],[f204])).
fof(f204,plain,(
  ! [X1] : (~sP0(X1) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X12)))),
  inference(nnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X1] : (~sP0(X1) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X12)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f425,plain,(
  sP0(sK3) | $spl2),
  inference(resolution,[],[f395,f254])).
fof(f254,plain,(
  ( ! [X0,X1] : (sP0(X0) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f467,plain,(
  s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | $spl64),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f5330,plain,(
  s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | $spl2),
  inference(resolution,[],[f425,f264])).
fof(f264,plain,(
  ( ! [X0] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(X0)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f206])).
fof(f418,plain,(
  ~sP1(sK3,'const.gram.nE_0') | $spl19),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ~sP1(sK3,'const.gram.nE_0') <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f423,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3))))) ) | $spl24),
  inference(cnf_transformation,[],[f423_D])).
fof(f423_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f5329,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3)))) | ~sP1(sK3,'const.gram.nE_0')) )),
  inference(subsumption_resolution,[],[f5328,f1912])).
fof(f1912,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X1),s(fun(X0,bool),X2))))))) )),
  inference(equality_resolution,[],[f297])).
fof(f297,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))))),
  inference(flattening,[],[f216])).
fof(f216,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))))) & ((s(X0,X1) != s(X0,X2) & ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))))),
  inference(nnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f160])).
fof(f160,plain,(
  ! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) <=> (s(X0,X1) = s(X0,X2) | p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f141])).
fof(f141,axiom,(
  ! [X12] : ! [X13,X14,X29] : (p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.INSERT_2'(s(X12,X14),s(fun(X12,bool),X29)))))) <=> (s(X12,X13) = s(X12,X14) | p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),X29))))))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.pred_set.IN_INSERT')).
fof(f5328,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3)))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(sK3,'const.gram.nE_0')) )),
  inference(subsumption_resolution,[],[f4126,f251])).
fof(f251,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0')))))),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),sK2))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) & ! [X2] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X2))) != s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3])],[f187])).
fof(f187,plain,(
  ? [X0,X1] : (p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) & ! [X2] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X2))) != s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ? [X0,X1] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0')))))) & ! [X2] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X2))) != s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))))),
  inference(ennf_transformation,[],[f144])).
fof(f144,plain,(
  ~! [X0,X1] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0')))))) => ? [X2] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X2))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X6))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0')))))) => ? [X8] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X8))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X6))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0')))))) => ? [X8] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X8))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.cmlPtreeConversionProps.E_OK')).
fof(f4126,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(sK3,'const.gram.nE_0')) )),
  inference(superposition,[],[f252,f253])).
fof(f253,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X1,X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X1),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X1))))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X1),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f203])).
fof(f252,plain,(
  ( ! [X2] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X2))) != s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(cnf_transformation,[],[f200])).
fof(f5327,plain,(
  $false | $spl0),
  inference(trivial_inequality_removal,[],[f5324])).
fof(f5324,plain,(
  s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | $spl0),
  inference(superposition,[],[f394,f250])).
fof(f250,plain,(
  s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),sK2)))),
  inference(cnf_transformation,[],[f200])).
fof(f5317,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl165),
  inference(cnf_transformation,[],[f5317_D])).
fof(f5317_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl165])])).
fof(f5319,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl167),
  inference(cnf_transformation,[],[f5319_D])).
fof(f5319_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f5311,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl121),
  inference(superposition,[],[f5283,f279])).
fof(f279,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f114])).
fof(f114,axiom,(
  ! [X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X27))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_distrib|split|18')).
fof(f5283,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl121),
  inference(equality_resolution,[],[f3547])).
fof(f3547,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | $spl121),
  inference(superposition,[],[f2392,f269])).
fof(f269,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X27,X28] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))) <=> s('type.num.num',X27) = s('type.num.num',X28))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_distrib|split|19')).
fof(f5310,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl121),
  inference(superposition,[],[f5283,f277])).
fof(f277,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f113])).
fof(f113,axiom,(
  ! [X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X27))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_distrib|split|17')).
fof(f402,plain,(
  ( ! [X14] : (p(s(bool,X14))) ) | $spl16),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  ( ! [X14] : (p(s(bool,X14))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f5174,plain,(
  ( ! [X14,X12,X13,X16] : (s(X12,X13) = s(X12,X14) | s(bool,X16) != s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.INSERT_2'(s(X12,X14),s(fun(X12,bool),'const.pred_set.EMPTY_0'))))) | ~p(s(bool,X16))) ) | $spl162),
  inference(cnf_transformation,[],[f5174_D])).
fof(f5174_D,plain,(
  ( ! [X14,X12,X13,X16] : (s(X12,X13) = s(X12,X14) | s(bool,X16) != s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.INSERT_2'(s(X12,X14),s(fun(X12,bool),'const.pred_set.EMPTY_0'))))) | ~p(s(bool,X16))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f5035,plain,(
  ( ! [X87,X85,X83,X86,X84] : (s(X83,X84) = s(X83,X85) | p(s(bool,X86)) | ~p(s(bool,X87)) | s(bool,X87) != s(bool,'const.bool.IN_2'(s(X83,X84),s(fun(X83,bool),'const.pred_set.INSERT_2'(s(X83,X85),s(fun(X83,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(resolution,[],[f2393,f360])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f285])).
fof(f285,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X13,X15,X14,X16] : ((s(bool,X13) = s(bool,X15) & (p(s(bool,X15)) => s(bool,X14) = s(bool,X16))) => ((p(s(bool,X13)) => p(s(bool,X14))) <=> (p(s(bool,X15)) => p(s(bool,X16)))))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.IMP_CONG')).
fof(f2393,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),'const.pred_set.EMPTY_0')))))) | s(X0,X1) = s(X0,X2)) )),
  inference(resolution,[],[f296,f299])).
fof(f299,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f162])).
fof(f162,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f140])).
fof(f140,axiom,(
  ! [X12] : ! [X13] : ~p(s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.pred_set.NOT_IN_EMPTY')).
fof(f296,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3)))) | s(X0,X1) = s(X0,X2) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3))))))) )),
  inference(cnf_transformation,[],[f217])).
fof(f400,plain,(
  ( ! [X10,X9] : (s(bool,X9) != s(bool,X10) | ~p(s(bool,X9))) ) | $spl12),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  ( ! [X10,X9] : (s(bool,X9) != s(bool,X10) | ~p(s(bool,X9))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5027,plain,(
  ( ! [X59,X57,X54,X58,X56,X55] : (s(X54,X55) = s(X54,X56) | ~p(s(bool,X57)) | ~p(s(bool,X58)) | s(bool,X58) != s(bool,'const.bool.IN_2'(s(X54,X55),s(fun(X54,bool),'const.pred_set.INSERT_2'(s(X54,X56),s(fun(X54,bool),'const.pred_set.EMPTY_0'))))) | s(bool,X57) != s(bool,X59)) )),
  inference(resolution,[],[f2393,f288])).
fof(f288,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f401,plain,(
  ( ! [X15] : (~p(s(bool,X15))) ) | $spl14),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  ( ! [X15] : (~p(s(bool,X15))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f5025,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (s(X42,X43) = s(X42,X44) | p(s(bool,X45)) | ~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.bool.IN_2'(s(X42,X43),s(fun(X42,bool),'const.pred_set.INSERT_2'(s(X42,X44),s(fun(X42,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(resolution,[],[f2393,f287])).
fof(f287,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f397,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) | $spl6),
  inference(cnf_transformation,[],[f397_D])).
fof(f397_D,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f5023,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (s(X30,X31) = s(X30,X32) | p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.bool.IN_2'(s(X30,X31),s(fun(X30,bool),'const.pred_set.INSERT_2'(s(X30,X32),s(fun(X30,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(resolution,[],[f2393,f286])).
fof(f286,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f5022,plain,(
  ( ! [X28,X26,X24,X29,X27,X25] : (s(X24,X25) = s(X24,X26) | ~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) != s(bool,'const.bool.IN_2'(s(X24,X25),s(fun(X24,bool),'const.pred_set.INSERT_2'(s(X24,X26),s(fun(X24,bool),'const.pred_set.EMPTY_0'))))) | s(bool,X27) != s(bool,X29)) )),
  inference(resolution,[],[f2393,f284])).
fof(f284,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f5020,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (s(X12,X13) = s(X12,X14) | p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.INSERT_2'(s(X12,X14),s(fun(X12,bool),'const.pred_set.EMPTY_0')))))) )),
  inference(resolution,[],[f2393,f282])).
fof(f282,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f4670,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X30)) ) | $spl156),
  inference(cnf_transformation,[],[f4670_D])).
fof(f4670_D,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X30)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f4793,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl161),
  inference(cnf_transformation,[],[f4793_D])).
fof(f4793_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl161),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl161])])).
fof(f4762,plain,(
  ( ! [X31] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X31)) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1630,f278])).
fof(f278,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f211])).
fof(f1630,plain,(
  ( ! [X18] : (s('type.num.num',X18) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1452,f279])).
fof(f1452,plain,(
  ( ! [X53] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X53)))) ) | ($spl82 | $spl89)),
  inference(subsumption_resolution,[],[f1432,f651])).
fof(f1432,plain,(
  ( ! [X53] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X53)))) ) | $spl82),
  inference(resolution,[],[f571,f352])).
fof(f352,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f247])).
fof(f247,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f133])).
fof(f133,axiom,(
  ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|1')).
fof(f4761,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X30)) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1630,f280])).
fof(f280,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f212])).
fof(f4672,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | $spl159),
  inference(cnf_transformation,[],[f4672_D])).
fof(f4672_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f4640,plain,(
  ( ! [X31] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X31)) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1583,f278])).
fof(f1583,plain,(
  ( ! [X18] : (s('type.num.num',X18) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1451,f279])).
fof(f1451,plain,(
  ( ! [X52] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) | ($spl82 | $spl89)),
  inference(subsumption_resolution,[],[f1431,f651])).
fof(f1431,plain,(
  ( ! [X52] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) | $spl82),
  inference(resolution,[],[f571,f354])).
fof(f354,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f248])).
fof(f248,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f135])).
fof(f135,axiom,(
  ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|3')).
fof(f4639,plain,(
  ( ! [X30] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X30)) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1583,f280])).
fof(f4617,plain,(
  ( ! [X12,X13,X11,X9] : (p(s(bool,X9)) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X11,X12),s(fun(X11,bool),'const.pred_set.INSERT_2'(s(X11,X12),s(fun(X11,bool),X13)))))) ) | $spl154),
  inference(cnf_transformation,[],[f4617_D])).
fof(f4617_D,plain,(
  ( ! [X12,X13,X11,X9] : (p(s(bool,X9)) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X11,X12),s(fun(X11,bool),'const.pred_set.INSERT_2'(s(X11,X12),s(fun(X11,bool),X13)))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f4539,plain,(
  ( ! [X61,X64,X62,X65,X63] : (p(s(bool,X61)) | p(s(bool,X62)) | s(bool,X62) != s(bool,'const.bool.IN_2'(s(X63,X64),s(fun(X63,bool),'const.pred_set.INSERT_2'(s(X63,X64),s(fun(X63,bool),X65)))))) )),
  inference(resolution,[],[f1912,f360])).
fof(f4532,plain,(
  ( ! [X47,X52,X50,X48,X51,X49] : (p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,'const.bool.IN_2'(s(X49,X50),s(fun(X49,bool),'const.pred_set.INSERT_2'(s(X49,X50),s(fun(X49,bool),X51))))) | s(bool,X48) != s(bool,X52)) )),
  inference(resolution,[],[f1912,f288])).
fof(f4529,plain,(
  ( ! [X37,X35,X33,X36,X34,X32] : (p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.pred_set.INSERT_2'(s(X35,X36),s(fun(X35,bool),X37)))))) )),
  inference(resolution,[],[f1912,f287])).
fof(f4528,plain,(
  ( ! [X30,X28,X26,X31,X29,X27] : (p(s(bool,X26)) | p(s(bool,X27)) | s(bool,X26) != s(bool,X28) | s(bool,X27) != s(bool,'const.bool.IN_2'(s(X29,X30),s(fun(X29,bool),'const.pred_set.INSERT_2'(s(X29,X30),s(fun(X29,bool),X31)))))) )),
  inference(resolution,[],[f1912,f286])).
fof(f4527,plain,(
  ( ! [X24,X23,X21,X25,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s(X22,X23),s(fun(X22,bool),'const.pred_set.INSERT_2'(s(X22,X23),s(fun(X22,bool),X24))))) | s(bool,X21) != s(bool,X25)) )),
  inference(resolution,[],[f1912,f284])).
fof(f4525,plain,(
  ( ! [X12,X10,X8,X13,X11,X9] : (p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X11,X12),s(fun(X11,bool),'const.pred_set.INSERT_2'(s(X11,X12),s(fun(X11,bool),X13)))))) )),
  inference(resolution,[],[f1912,f282])).
fof(f4517,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X0)) ) | $spl152),
  inference(cnf_transformation,[],[f4517_D])).
fof(f4517_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f4483,plain,(
  ( ! [X57,X54,X56,X55] : (s(bool,X54) = s(bool,X55) | s(bool,'T_0') = s(bool,X54) | p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X55) != s(bool,X57)) ) | $spl82),
  inference(resolution,[],[f1971,f360])).
fof(f1971,plain,(
  ( ! [X33,X32] : (p(s(bool,X33)) | s(bool,X32) = s(bool,X33) | s(bool,'T_0') = s(bool,X32)) ) | $spl82),
  inference(resolution,[],[f571,f289])).
fof(f289,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.IMP_ANTISYM_AX')).
fof(f4476,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,X36) | s(bool,'T_0') = s(bool,X35) | p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X37) | s(bool,X38) != s(bool,X39)) ) | $spl82),
  inference(resolution,[],[f1971,f288])).
fof(f4473,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,X20) = s(bool,X21) | s(bool,'T_0') = s(bool,X20) | p(s(bool,X22)) | ~p(s(bool,X23)) | p(s(bool,X24)) | s(bool,X21) != s(bool,X24)) ) | $spl82),
  inference(resolution,[],[f1971,f287])).
fof(f4472,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,X16) | s(bool,'T_0') = s(bool,X15) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl82),
  inference(resolution,[],[f1971,f286])).
fof(f4471,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,X11) | s(bool,'T_0') = s(bool,X10) | p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X12) | s(bool,X13) != s(bool,X14)) ) | $spl82),
  inference(resolution,[],[f1971,f284])).
fof(f4469,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl82),
  inference(resolution,[],[f1971,f282])).
fof(f4463,plain,(
  $false | $spl92),
  inference(trivial_inequality_removal,[],[f4459])).
fof(f4459,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl92),
  inference(superposition,[],[f726,f1542])).
fof(f1542,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.EMPTY_0')))) )),
  inference(subsumption_resolution,[],[f1536,f361])).
fof(f361,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f316])).
fof(f316,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12] : ! [X13] : (s(X12,X13) = s(X12,X13) <=> p(s(bool,'T_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.REFL_CLAUSE')).
fof(f1536,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f299,f359])).
fof(f359,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.cmlPtreeConversionProps.E_OK',aHL_BOOL_CASES)).
fof(f4462,plain,(
  $false | $spl92),
  inference(equality_resolution,[],[f726])).
fof(f4437,plain,(
  $false | $spl90),
  inference(trivial_inequality_removal,[],[f4432])).
fof(f4432,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl90),
  inference(superposition,[],[f724,f403])).
fof(f403,plain,(
  s(bool,'T_0') = s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))),
  inference(subsumption_resolution,[],[f385,f357])).
fof(f357,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.cmlPtreeConversionProps.E_OK',aHL_FALSITY)).
fof(f385,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))),
  inference(superposition,[],[f249,f359])).
fof(f249,plain,(
  p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))))),
  inference(cnf_transformation,[],[f200])).
fof(f4436,plain,(
  $false | $spl90),
  inference(equality_resolution,[],[f724])).
fof(f4415,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4387,f1451])).
fof(f4387,plain,(
  ( ! [X52] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) | $spl6),
  inference(resolution,[],[f720,f355])).
fof(f355,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f248])).
fof(f720,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl6),
  inference(equality_resolution,[],[f397])).
fof(f4414,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4386,f1452])).
fof(f4386,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))) ) | $spl6),
  inference(resolution,[],[f720,f353])).
fof(f353,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f247])).
fof(f4413,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4385,f1451])).
fof(f4385,plain,(
  ( ! [X50] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X50)))) ) | $spl6),
  inference(resolution,[],[f720,f351])).
fof(f351,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f246])).
fof(f246,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f134])).
fof(f134,axiom,(
  ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|2')).
fof(f4412,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4384,f1452])).
fof(f4384,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X49)))) ) | $spl6),
  inference(resolution,[],[f720,f349])).
fof(f349,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f245])).
fof(f245,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f132])).
fof(f132,axiom,(
  ! [X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|0')).
fof(f4411,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4379,f2007])).
fof(f2007,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))) ) | ($spl82 | $spl89)),
  inference(subsumption_resolution,[],[f1991,f651])).
fof(f1991,plain,(
  ( ! [X57,X56] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X56))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))) ) | $spl82),
  inference(resolution,[],[f571,f314])).
fof(f314,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f223])).
fof(f223,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f136])).
fof(f136,axiom,(
  ! [X27,X28] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|4')).
fof(f4379,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44)))) ) | $spl6),
  inference(resolution,[],[f720,f315])).
fof(f315,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f223])).
fof(f4410,plain,(
  $false | ($spl6 | $spl82 | $spl89)),
  inference(subsumption_resolution,[],[f4378,f2007])).
fof(f4378,plain,(
  ( ! [X41,X42] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42)))) ) | $spl6),
  inference(resolution,[],[f720,f313])).
fof(f313,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f137])).
fof(f137,axiom,(
  ! [X27,X28] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.numeral.numeral_eq|split|5')).
fof(f4389,plain,(
  $false | $spl6),
  inference(resolution,[],[f720,f357])).
fof(f726,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3)) ) | $spl92),
  inference(cnf_transformation,[],[f726_D])).
fof(f726_D,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3)) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f4352,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14))) ) | $spl6),
  inference(subsumption_resolution,[],[f4329,f397])).
fof(f4329,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X14)) | s(bool,'T_0') = s(bool,X14)) ) | $spl6),
  inference(superposition,[],[f397,f359])).
fof(f724,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1)) ) | $spl90),
  inference(cnf_transformation,[],[f724_D])).
fof(f724_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1)) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f4351,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,X13) | p(s(bool,X12))) ) | $spl6),
  inference(subsumption_resolution,[],[f4328,f397])).
fof(f4328,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,X13) | p(s(bool,X12)) | s(bool,'F_0') = s(bool,X12)) ) | $spl6),
  inference(superposition,[],[f397,f359])).
fof(f723,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X0))) ) | $spl6),
  inference(subsumption_resolution,[],[f700,f397])).
fof(f700,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f397,f359])).
fof(f725,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X2))) ) | $spl6),
  inference(subsumption_resolution,[],[f701,f397])).
fof(f701,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | $spl6),
  inference(superposition,[],[f397,f359])).
fof(f4321,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X21,X22),s(fun(X21,bool),'const.pred_set.EMPTY_0')))) ) | $spl150),
  inference(cnf_transformation,[],[f4321_D])).
fof(f4321_D,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X21,X22),s(fun(X21,bool),'const.pred_set.EMPTY_0')))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f4300,plain,(
  ( ! [X23,X21,X22] : (s(bool,'F_0') != s(bool,X23) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X21,X22),s(fun(X21,bool),'const.pred_set.EMPTY_0')))) ) | ($spl10 | $spl94)),
  inference(superposition,[],[f4290,f1542])).
fof(f4290,plain,(
  ( ! [X2,X0] : (s(bool,X0) != s(bool,X2) | s(bool,'T_0') = s(bool,X0)) ) | ($spl10 | $spl94)),
  inference(subsumption_resolution,[],[f937,f568])).
fof(f568,plain,(
  ( ! [X17,X16] : (s(bool,X16) != s(bool,X17) | ~p(s(bool,X17)) | s(bool,'T_0') = s(bool,X16)) ) | $spl10),
  inference(subsumption_resolution,[],[f545,f357])).
fof(f545,plain,(
  ( ! [X17,X16] : (s(bool,X16) != s(bool,X17) | p(s(bool,'F_0')) | ~p(s(bool,X17)) | s(bool,'T_0') = s(bool,X16)) ) | $spl10),
  inference(superposition,[],[f399,f359])).
fof(f4318,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl148),
  inference(cnf_transformation,[],[f4318_D])).
fof(f4318_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f4316,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | s(bool,'T_0') = s(bool,X14)) ) | ($spl10 | $spl94)),
  inference(duplicate_literal_removal,[],[f4296])).
fof(f4296,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') != s(bool,X15) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) ) | ($spl10 | $spl94)),
  inference(superposition,[],[f4290,f359])).
fof(f4320,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,X13) | s(bool,'T_0') = s(bool,X12)) ) | ($spl10 | $spl94)),
  inference(subsumption_resolution,[],[f4295,f4290])).
fof(f4295,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') != s(bool,X13) | s(bool,'T_0') = s(bool,X12) | s(bool,'F_0') = s(bool,X12)) ) | ($spl10 | $spl94)),
  inference(superposition,[],[f4290,f359])).
fof(f4319,plain,(
  ( ! [X4,X5,X3] : (s(bool,X4) != s(bool,X5) | s(bool,'T_0') = s(bool,X3) | p(s(bool,X4))) ) | ($spl10 | $spl82 | $spl94)),
  inference(subsumption_resolution,[],[f4292,f571])).
fof(f4292,plain,(
  ( ! [X4,X5,X3] : (s(bool,X4) != s(bool,X5) | s(bool,'T_0') = s(bool,X3) | p(s(bool,X3)) | p(s(bool,X4))) ) | ($spl10 | $spl94)),
  inference(superposition,[],[f4290,f289])).
fof(f4317,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,X0) | p(s(bool,X1))) ) | ($spl10 | $spl82 | $spl94)),
  inference(subsumption_resolution,[],[f4291,f571])).
fof(f4291,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) != s(bool,X2) | s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X0))) ) | ($spl10 | $spl94)),
  inference(superposition,[],[f4290,f289])).
fof(f4286,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,X0)) ) | $spl146),
  inference(cnf_transformation,[],[f4286_D])).
fof(f4286_D,plain,(
  ( ! [X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) != s(bool,X3) | ~p(s(bool,X3)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f4247,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,X56) = s(bool,X57) | s(bool,'F_0') = s(bool,X56) | p(s(bool,X58)) | ~p(s(bool,X59)) | s(bool,X57) != s(bool,X59)) ) | $spl70),
  inference(resolution,[],[f855,f360])).
fof(f855,plain,(
  ( ! [X33,X32] : (~p(s(bool,X33)) | s(bool,X32) = s(bool,X33) | s(bool,'F_0') = s(bool,X32)) ) | $spl70),
  inference(resolution,[],[f564,f292])).
fof(f292,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f193])).
fof(f4239,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,X35) = s(bool,X36) | s(bool,'F_0') = s(bool,X35) | ~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,X39)) ) | $spl70),
  inference(resolution,[],[f855,f288])).
fof(f4237,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,X25) = s(bool,X26) | s(bool,'F_0') = s(bool,X25) | p(s(bool,X27)) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X26) != s(bool,X28)) ) | $spl70),
  inference(resolution,[],[f855,f287])).
fof(f4235,plain,(
  ( ! [X19,X17,X15,X18,X16] : (s(bool,X15) = s(bool,X16) | s(bool,'F_0') = s(bool,X15) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | $spl70),
  inference(resolution,[],[f855,f286])).
fof(f4234,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,X10) = s(bool,X11) | s(bool,'F_0') = s(bool,X10) | ~p(s(bool,X12)) | ~p(s(bool,X13)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,X14)) ) | $spl70),
  inference(resolution,[],[f855,f284])).
fof(f4232,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X0) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X1) != s(bool,X3)) ) | $spl70),
  inference(resolution,[],[f855,f282])).
fof(f420,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | $spl21),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f524,plain,(
  ( ! [X0] : (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | ~sP1(X0,'const.gram.nE_0') | s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) ) | $spl68),
  inference(cnf_transformation,[],[f524_D])).
fof(f524_D,plain,(
  ( ! [X0] : (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | ~sP1(X0,'const.gram.nE_0') | s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f4019,plain,(
  ( ! [X0] : (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(X0,'const.gram.nE_0')) )),
  inference(superposition,[],[f253,f251])).
fof(f4143,plain,(
  ( ! [X10,X8,X7] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X7,X8)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X7),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X7),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0'))))))))))))))))))))))))))))))))) | ~sP1(X8,X7) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X7)))))) ) | $spl144),
  inference(cnf_transformation,[],[f4143_D])).
fof(f4143_D,plain,(
  ( ! [X10,X8,X7] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X7,X8)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X7),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) | ~p(s(bool,X10)) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X7),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0'))))))))))))))))))))))))))))))))) | ~sP1(X8,X7) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X7)))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f3997,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X63,X64)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X63),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X64))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X64))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X63))))) | ~sP1(X64,X63) | p(s(bool,X65)) | ~p(s(bool,X66)) | s(bool,X66) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X63),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) )),
  inference(resolution,[],[f253,f360])).
fof(f3989,plain,(
  ( ! [X45,X43,X46,X44,X42] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X42,X43)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X42),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X43))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X43))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X42))))) | ~sP1(X43,X42) | ~p(s(bool,X44)) | ~p(s(bool,X45)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X42),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0'))))))))))))))))))))))))))))))))) | s(bool,X44) != s(bool,X46)) )),
  inference(resolution,[],[f253,f288])).
fof(f3987,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X32,X33)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X32),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X33))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X33))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X32))))) | ~sP1(X33,X32) | p(s(bool,X34)) | ~p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X35) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X32),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) )),
  inference(resolution,[],[f253,f287])).
fof(f3985,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X22,X23)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X22),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X23))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X23))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X22))))) | ~sP1(X23,X22) | p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,X26) | s(bool,X25) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X22),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) )),
  inference(resolution,[],[f253,f286])).
fof(f3984,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X17,X18)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X17),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X18))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X18))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X17))))) | ~sP1(X18,X17) | ~p(s(bool,X19)) | ~p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X17),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0'))))))))))))))))))))))))))))))))) | s(bool,X19) != s(bool,X21)) )),
  inference(resolution,[],[f253,f284])).
fof(f3982,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4(X7,X8)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X7),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X8))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X7))))) | ~sP1(X8,X7) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X7),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) )),
  inference(resolution,[],[f253,f282])).
fof(f394,plain,(
  ( ! [X1] : (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) ) | $spl0),
  inference(cnf_transformation,[],[f394_D])).
fof(f394_D,plain,(
  ( ! [X1] : (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f395,plain,(
  ( ! [X0] : (sP1(sK3,X0)) ) | $spl2),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  ( ! [X0] : (sP1(sK3,X0)) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f3695,plain,(
  ( ! [X0,X1] : (sP1(sK3,X0) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) )),
  inference(subsumption_resolution,[],[f3680,f361])).
fof(f3680,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP1(sK3,X0) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) )),
  inference(superposition,[],[f266,f403])).
fof(f266,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,X2) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) | ~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))))) )),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) | sP1(X1,X2))),
  inference(definition_folding,[],[f189,f198,f197])).
fof(f189,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0))) | ((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2))))) | ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X12))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  inference(flattening,[],[f188])).
fof(f188,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0)))) | (((~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2)))))) | ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X12))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) | ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) | ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) | ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) | ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) | ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) | ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) | ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) | ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) | ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  inference(ennf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0)))) => (((p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2)))))) => ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) => ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),X12))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) => ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) => ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) => ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) => ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) => ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) => ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) => ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) => ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) => ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X0)))) => (((p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X2),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X2)))))) => ? [X13] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X13))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) => ? [X12] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X12))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) & ~s('type.list.list'('type.ast.exp'),'const.list.NIL_0') = s('type.list.list'('type.ast.exp'),X12))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) => ? [X11] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X11)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) => ? [X10] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X10))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) => ? [X9] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X9))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) => ? [X8] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X8)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) => ? [X7] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X7))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) => ? [X6] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X6))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) => ? [X5] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X5)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) => ? [X4] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X4)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) => ? [X3] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X1))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X3))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7,X17] : ((p(s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X6)))) => (((p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT',X17),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',X17)))))) => ? [X8] : s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X8))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',X17),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) => ? [X18] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X18))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) & ~s('type.list.list'('type.ast.exp'),'const.list.NIL_0') = s('type.list.list'('type.ast.exp'),X18))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) => ? [X19] : s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),X19)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) => ? [X18] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X18))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) => ? [X18] : s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),X18))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) => ? [X20] : s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),X20)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) => ? [X21] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X21))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) => ? [X21] : s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),X21))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) => ? [X22] : s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),X22)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) => ? [X23] : s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),X23)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) => ? [X24] : s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X7))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),X24))))))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.cmlPtreeConversionProps.E_OK|48|')).
fof(f3693,plain,(
  ( ! [X4,X2,X0,X1] : (sP1(X0,X1) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X2)))) ) | $spl142),
  inference(cnf_transformation,[],[f3693_D])).
fof(f3693_D,plain,(
  ( ! [X4,X2,X0,X1] : (sP1(X0,X1) | ~p(s(bool,X4)) | s(bool,X4) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X2)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f3662,plain,(
  ( ! [X74,X72,X71,X75,X73] : (sP1(X71,X72) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X71))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X73))) | p(s(bool,X74)) | ~p(s(bool,X75)) | s(bool,X75) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X71)))) )),
  inference(resolution,[],[f266,f360])).
fof(f3654,plain,(
  ( ! [X47,X45,X43,X46,X44,X42] : (sP1(X42,X43) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X42))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X44))) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X46) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X42))) | s(bool,X45) != s(bool,X47)) )),
  inference(resolution,[],[f266,f288])).
fof(f3652,plain,(
  ( ! [X30,X35,X33,X31,X34,X32] : (sP1(X30,X31) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X30))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X32))) | p(s(bool,X33)) | ~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X30)))) )),
  inference(resolution,[],[f266,f287])).
fof(f3650,plain,(
  ( ! [X23,X21,X19,X22,X20,X18] : (sP1(X18,X19) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X18))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X20))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X18)))) )),
  inference(resolution,[],[f266,f286])).
fof(f3649,plain,(
  ( ! [X14,X12,X17,X15,X13,X16] : (sP1(X12,X13) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X12))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X14))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X16) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X12))) | s(bool,X15) != s(bool,X17)) )),
  inference(resolution,[],[f266,f284])).
fof(f3647,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP1(X0,X1) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X2))) | p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0)))) )),
  inference(resolution,[],[f266,f282])).
fof(f3518,plain,(
  ( ! [X404,X406] : (~p(s(bool,X404)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X406)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),X406))))) ) | $spl140),
  inference(cnf_transformation,[],[f3518_D])).
fof(f3518_D,plain,(
  ( ! [X404,X406] : (~p(s(bool,X404)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X406)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),X406))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f3170,plain,(
  ( ! [X441,X440,X442] : (~p(s(bool,X440)) | p(s(bool,X441)) | p(s(bool,'const.bool.IN_2'(s(bool,X440),s(fun(bool,bool),X442)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X440),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X442))))))) )),
  inference(superposition,[],[f356,f296])).
fof(f356,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8] : (p(s(bool,'F_0')) => p(s(bool,X8)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.FALSITY')).
fof(f3161,plain,(
  ( ! [X414,X413,X415] : (~p(s(bool,X413)) | p(s(bool,X414)) | p(s(bool,'const.bool.IN_2'(s(bool,X413),s(fun(bool,bool),X415)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X413),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X415))))))) )),
  inference(superposition,[],[f347,f296])).
fof(f347,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8] : ((p(s(bool,'F_0')) & p(s(bool,X8))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.AND_CLAUSES|split|2')).
fof(f3160,plain,(
  ( ! [X412,X410,X411] : (~p(s(bool,X410)) | p(s(bool,X411)) | p(s(bool,'const.bool.IN_2'(s(bool,X410),s(fun(bool,bool),X412)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X410),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X412))))))) )),
  inference(superposition,[],[f334,f296])).
fof(f334,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f235])).
fof(f235,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8] : ((p(s(bool,X8)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.AND_CLAUSES|split|3')).
fof(f3159,plain,(
  ( ! [X408,X407,X409] : (~p(s(bool,X407)) | p(s(bool,X408)) | p(s(bool,'const.bool.IN_2'(s(bool,X407),s(fun(bool,bool),X409)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X407),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X409))))))) )),
  inference(superposition,[],[f325,f296])).
fof(f325,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f229])).
fof(f229,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : ((p(s(bool,X0)) | p(s(bool,'F_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : ((p(s(bool,X8)) | p(s(bool,'F_0'))) <=> p(s(bool,X8)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.OR_CLAUSES|split|3')).
fof(f3158,plain,(
  ( ! [X405,X404,X406] : (~p(s(bool,X404)) | p(s(bool,X405)) | p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),X406)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X404),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'F_0'),s(fun(bool,bool),X406))))))) )),
  inference(superposition,[],[f321,f296])).
fof(f321,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f228])).
fof(f228,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f227])).
fof(f227,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8] : ((p(s(bool,'F_0')) | p(s(bool,X8))) <=> p(s(bool,X8)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.OR_CLAUSES|split|2')).
fof(f3515,plain,(
  ( ! [X365,X367] : (p(s(bool,X365)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X367)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),X367))))) ) | $spl138),
  inference(cnf_transformation,[],[f3515_D])).
fof(f3515_D,plain,(
  ( ! [X365,X367] : (p(s(bool,X365)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X367)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),X367))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f3149,plain,(
  ( ! [X374,X376,X375] : (p(s(bool,X374)) | ~p(s(bool,X375)) | p(s(bool,'const.bool.IN_2'(s(bool,X374),s(fun(bool,bool),X376)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X374),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X376))))))) )),
  inference(superposition,[],[f341,f296])).
fof(f341,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'T_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'T_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : ((p(s(bool,X8)) & p(s(bool,'T_0'))) <=> p(s(bool,X8)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.AND_CLAUSES|split|1')).
fof(f3148,plain,(
  ( ! [X372,X373,X371] : (p(s(bool,X371)) | ~p(s(bool,X372)) | p(s(bool,'const.bool.IN_2'(s(bool,X371),s(fun(bool,bool),X373)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X371),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X373))))))) )),
  inference(superposition,[],[f337,f296])).
fof(f337,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f237])).
fof(f237,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X8] : ((p(s(bool,'T_0')) & p(s(bool,X8))) <=> p(s(bool,X8)))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.AND_CLAUSES|split|0')).
fof(f3147,plain,(
  ( ! [X368,X370,X369] : (p(s(bool,X368)) | ~p(s(bool,X369)) | p(s(bool,'const.bool.IN_2'(s(bool,X368),s(fun(bool,bool),X370)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X368),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X370))))))) )),
  inference(superposition,[],[f331,f296])).
fof(f331,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f234])).
fof(f234,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f233])).
fof(f233,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0] : ((p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8] : ((p(s(bool,'T_0')) | p(s(bool,X8))) <=> p(s(bool,'T_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.OR_CLAUSES|split|0')).
fof(f3146,plain,(
  ( ! [X366,X365,X367] : (p(s(bool,X365)) | ~p(s(bool,X366)) | p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),X367)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X365),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,'T_0'),s(fun(bool,bool),X367))))))) )),
  inference(superposition,[],[f327,f296])).
fof(f327,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f232])).
fof(f232,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f231])).
fof(f231,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0] : ((p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : ((p(s(bool,X8)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.cmlPtreeConversionProps.E_OK','thm.bool.OR_CLAUSES|split|1')).
fof(f3460,plain,(
  ( ! [X59,X57,X62,X58] : (s(bool,X58) != s(bool,X59) | ~p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X58),s(fun(bool,bool),X62)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),X62)))) | p(s(bool,X59)) | ~p(s(bool,X57))) ) | $spl128),
  inference(cnf_transformation,[],[f3460_D])).
fof(f3460_D,plain,(
  ( ! [X59,X57,X62,X58] : (s(bool,X58) != s(bool,X59) | ~p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X58),s(fun(bool,bool),X62)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),X62)))) | p(s(bool,X59)) | ~p(s(bool,X57))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f3139,plain,(
  ( ! [X344,X341,X343,X340,X342] : (~p(s(bool,X341)) | p(s(bool,X342)) | p(s(bool,X343)) | s(bool,X340) != s(bool,X343) | p(s(bool,'const.bool.IN_2'(s(bool,X341),s(fun(bool,bool),X344)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X341),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X340),s(fun(bool,bool),X344))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f3459,plain,(
  ( ! [X52,X56,X53,X51] : (s(bool,X52) != s(bool,X53) | ~p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X52),s(fun(bool,bool),X56)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),X56)))) | p(s(bool,X51)) | ~p(s(bool,X53))) ) | $spl126),
  inference(cnf_transformation,[],[f3459_D])).
fof(f3459_D,plain,(
  ( ! [X52,X56,X53,X51] : (s(bool,X52) != s(bool,X53) | ~p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X52),s(fun(bool,bool),X56)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),X56)))) | p(s(bool,X51)) | ~p(s(bool,X53))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f3137,plain,(
  ( ! [X333,X331,X332,X334,X330] : (p(s(bool,X331)) | p(s(bool,X332)) | ~p(s(bool,X333)) | s(bool,X330) != s(bool,X333) | p(s(bool,'const.bool.IN_2'(s(bool,X331),s(fun(bool,bool),X334)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X331),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X330),s(fun(bool,bool),X334))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f3463,plain,(
  ( ! [X80,X78,X76,X75] : (p(s(bool,X76)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X76),s(fun(bool,bool),X80)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),X80)))) | ~p(s(bool,X78)) | s(bool,X75) != s(bool,X78)) ) | $spl130),
  inference(cnf_transformation,[],[f3463_D])).
fof(f3463_D,plain,(
  ( ! [X80,X78,X76,X75] : (p(s(bool,X76)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X76),s(fun(bool,bool),X80)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),X80)))) | ~p(s(bool,X78)) | s(bool,X75) != s(bool,X78)) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f3136,plain,(
  ( ! [X325,X327,X329,X326,X328] : (s(bool,X326) != s(bool,X327) | p(s(bool,X328)) | ~p(s(bool,X327)) | p(s(bool,X325)) | p(s(bool,'const.bool.IN_2'(s(bool,X326),s(fun(bool,bool),X329)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X326),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X325),s(fun(bool,bool),X329))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f3464,plain,(
  ( ! [X92,X90,X88,X87] : (~p(s(bool,X88)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X88),s(fun(bool,bool),X92)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),X92)))) | p(s(bool,X90)) | s(bool,X87) != s(bool,X90)) ) | $spl132),
  inference(cnf_transformation,[],[f3464_D])).
fof(f3464_D,plain,(
  ( ! [X92,X90,X88,X87] : (~p(s(bool,X88)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X88),s(fun(bool,bool),X92)))))) | p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),X92)))) | p(s(bool,X90)) | s(bool,X87) != s(bool,X90)) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f3135,plain,(
  ( ! [X321,X323,X324,X320,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X323)) | ~p(s(bool,X320)) | p(s(bool,X322)) | p(s(bool,'const.bool.IN_2'(s(bool,X321),s(fun(bool,bool),X324)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X321),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X320),s(fun(bool,bool),X324))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f3115,plain,(
  ( ! [X253,X251,X249,X254,X252,X250] : (~p(s(bool,X250)) | p(s(bool,X251)) | ~p(s(bool,X252)) | s(bool,X249) != s(bool,X251) | s(bool,X252) != s(bool,X253) | p(s(bool,'const.bool.IN_2'(s(bool,X250),s(fun(bool,bool),X254)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X250),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X249),s(fun(bool,bool),X254))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f3113,plain,(
  ( ! [X241,X239,X237,X242,X240,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | ~p(s(bool,X240)) | s(bool,X237) != s(bool,X240) | s(bool,X239) != s(bool,X241) | p(s(bool,'const.bool.IN_2'(s(bool,X238),s(fun(bool,bool),X242)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X238),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X237),s(fun(bool,bool),X242))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f3112,plain,(
  ( ! [X231,X235,X233,X236,X234,X232] : (s(bool,X232) != s(bool,X233) | p(s(bool,X233)) | ~p(s(bool,X234)) | ~p(s(bool,X231)) | s(bool,X234) != s(bool,X235) | p(s(bool,'const.bool.IN_2'(s(bool,X232),s(fun(bool,bool),X236)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X232),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X231),s(fun(bool,bool),X236))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f3111,plain,(
  ( ! [X229,X227,X225,X230,X228,X226] : (s(bool,X226) != s(bool,X227) | p(s(bool,X225)) | ~p(s(bool,X228)) | ~p(s(bool,X227)) | s(bool,X228) != s(bool,X229) | p(s(bool,'const.bool.IN_2'(s(bool,X226),s(fun(bool,bool),X230)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X226),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X225),s(fun(bool,bool),X230))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f3107,plain,(
  ( ! [X206,X204,X202,X205,X203,X201] : (~p(s(bool,X202)) | p(s(bool,X203)) | ~p(s(bool,X204)) | p(s(bool,X205)) | s(bool,X201) != s(bool,X205) | p(s(bool,'const.bool.IN_2'(s(bool,X202),s(fun(bool,bool),X206)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X202),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X201),s(fun(bool,bool),X206))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f3105,plain,(
  ( ! [X191,X189,X194,X192,X190,X193] : (p(s(bool,X190)) | p(s(bool,X191)) | ~p(s(bool,X192)) | ~p(s(bool,X193)) | s(bool,X189) != s(bool,X192) | p(s(bool,'const.bool.IN_2'(s(bool,X190),s(fun(bool,bool),X194)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X190),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X189),s(fun(bool,bool),X194))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f3104,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,X184) != s(bool,X185) | p(s(bool,X186)) | ~p(s(bool,X185)) | ~p(s(bool,X187)) | p(s(bool,X183)) | p(s(bool,'const.bool.IN_2'(s(bool,X184),s(fun(bool,bool),X188)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X184),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X183),s(fun(bool,bool),X188))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f3103,plain,(
  ( ! [X177,X182,X180,X178,X181,X179] : (s(bool,X178) != s(bool,X179) | p(s(bool,X180)) | ~p(s(bool,X177)) | ~p(s(bool,X181)) | p(s(bool,X179)) | p(s(bool,'const.bool.IN_2'(s(bool,X178),s(fun(bool,bool),X182)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X178),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X177),s(fun(bool,bool),X182))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f3102,plain,(
  ( ! [X175,X173,X171,X176,X174,X172] : (~p(s(bool,X172)) | p(s(bool,X173)) | p(s(bool,X174)) | s(bool,X173) != s(bool,X175) | s(bool,X171) != s(bool,X174) | p(s(bool,'const.bool.IN_2'(s(bool,X172),s(fun(bool,bool),X176)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X172),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X171),s(fun(bool,bool),X176))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f3100,plain,(
  ( ! [X163,X161,X159,X164,X162,X160] : (p(s(bool,X160)) | p(s(bool,X161)) | ~p(s(bool,X162)) | s(bool,X161) != s(bool,X163) | s(bool,X159) != s(bool,X162) | p(s(bool,'const.bool.IN_2'(s(bool,X160),s(fun(bool,bool),X164)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X160),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X159),s(fun(bool,bool),X164))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f3097,plain,(
  ( ! [X146,X144,X142,X145,X143,X141] : (s(bool,X142) != s(bool,X143) | p(s(bool,X144)) | ~p(s(bool,X143)) | p(s(bool,X141)) | s(bool,X144) != s(bool,X145) | p(s(bool,'const.bool.IN_2'(s(bool,X142),s(fun(bool,bool),X146)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X142),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X141),s(fun(bool,bool),X146))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f3096,plain,(
  ( ! [X140,X138,X136,X135,X139,X137] : (s(bool,X136) != s(bool,X137) | p(s(bool,X138)) | ~p(s(bool,X135)) | p(s(bool,X137)) | s(bool,X138) != s(bool,X139) | p(s(bool,'const.bool.IN_2'(s(bool,X136),s(fun(bool,bool),X140)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X136),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X135),s(fun(bool,bool),X140))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f3095,plain,(
  ( ! [X134,X132,X130,X133,X131,X129] : (~p(s(bool,X130)) | p(s(bool,X131)) | ~p(s(bool,X132)) | s(bool,X129) != s(bool,X131) | s(bool,X132) != s(bool,X133) | p(s(bool,'const.bool.IN_2'(s(bool,X130),s(fun(bool,bool),X134)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X130),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X129),s(fun(bool,bool),X134))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f3093,plain,(
  ( ! [X121,X118,X122,X120,X119,X117] : (p(s(bool,X118)) | ~p(s(bool,X119)) | ~p(s(bool,X120)) | s(bool,X117) != s(bool,X120) | s(bool,X119) != s(bool,X121) | p(s(bool,'const.bool.IN_2'(s(bool,X118),s(fun(bool,bool),X122)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X118),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X117),s(fun(bool,bool),X122))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f3092,plain,(
  ( ! [X111,X116,X114,X112,X115,X113] : (s(bool,X112) != s(bool,X113) | p(s(bool,X111)) | ~p(s(bool,X114)) | ~p(s(bool,X113)) | s(bool,X114) != s(bool,X115) | p(s(bool,'const.bool.IN_2'(s(bool,X112),s(fun(bool,bool),X116)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X112),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X111),s(fun(bool,bool),X116))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f3091,plain,(
  ( ! [X109,X107,X105,X110,X108,X106] : (s(bool,X106) != s(bool,X107) | p(s(bool,X107)) | ~p(s(bool,X108)) | ~p(s(bool,X105)) | s(bool,X108) != s(bool,X109) | p(s(bool,'const.bool.IN_2'(s(bool,X106),s(fun(bool,bool),X110)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X106),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X105),s(fun(bool,bool),X110))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f3088,plain,(
  ( ! [X92,X90,X88,X87,X91,X89] : (~p(s(bool,X88)) | p(s(bool,X89)) | p(s(bool,X90)) | s(bool,X89) != s(bool,X91) | s(bool,X87) != s(bool,X90) | p(s(bool,'const.bool.IN_2'(s(bool,X88),s(fun(bool,bool),X92)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X88),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X87),s(fun(bool,bool),X92))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f3086,plain,(
  ( ! [X80,X78,X76,X79,X77,X75] : (p(s(bool,X76)) | p(s(bool,X77)) | ~p(s(bool,X78)) | s(bool,X77) != s(bool,X79) | s(bool,X75) != s(bool,X78) | p(s(bool,'const.bool.IN_2'(s(bool,X76),s(fun(bool,bool),X80)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X76),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X75),s(fun(bool,bool),X80))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f3083,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,X58) != s(bool,X59) | p(s(bool,X60)) | ~p(s(bool,X57)) | p(s(bool,X59)) | s(bool,X60) != s(bool,X61) | p(s(bool,'const.bool.IN_2'(s(bool,X58),s(fun(bool,bool),X62)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X58),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X57),s(fun(bool,bool),X62))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f3082,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,X52) != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X53)) | p(s(bool,X51)) | s(bool,X54) != s(bool,X55) | p(s(bool,'const.bool.IN_2'(s(bool,X52),s(fun(bool,bool),X56)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X52),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X51),s(fun(bool,bool),X56))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f3474,plain,(
  ( ! [X404,X406] : (~p(s(bool,X404)) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X404),s(fun(bool,bool),X406)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X406))))) ) | $spl136),
  inference(cnf_transformation,[],[f3474_D])).
fof(f3474_D,plain,(
  ( ! [X404,X406] : (~p(s(bool,X404)) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X404),s(fun(bool,bool),X406)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X406))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f2842,plain,(
  ( ! [X441,X440,X442] : (~p(s(bool,X440)) | p(s(bool,X441)) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X442)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X440),s(fun(bool,bool),X442))))))) )),
  inference(superposition,[],[f356,f296])).
fof(f2833,plain,(
  ( ! [X414,X413,X415] : (~p(s(bool,X413)) | p(s(bool,X414)) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X415)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X413),s(fun(bool,bool),X415))))))) )),
  inference(superposition,[],[f347,f296])).
fof(f2832,plain,(
  ( ! [X412,X410,X411] : (~p(s(bool,X410)) | p(s(bool,X411)) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X412)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X410),s(fun(bool,bool),X412))))))) )),
  inference(superposition,[],[f334,f296])).
fof(f2831,plain,(
  ( ! [X408,X407,X409] : (~p(s(bool,X407)) | p(s(bool,X408)) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X409)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X407),s(fun(bool,bool),X409))))))) )),
  inference(superposition,[],[f325,f296])).
fof(f2830,plain,(
  ( ! [X405,X404,X406] : (~p(s(bool,X404)) | p(s(bool,X405)) | p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X406)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X404),s(fun(bool,bool),X406))))))) )),
  inference(superposition,[],[f321,f296])).
fof(f3471,plain,(
  ( ! [X365,X367] : (p(s(bool,X365)) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X365),s(fun(bool,bool),X367)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X367))))) ) | $spl134),
  inference(cnf_transformation,[],[f3471_D])).
fof(f3471_D,plain,(
  ( ! [X365,X367] : (p(s(bool,X365)) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X365),s(fun(bool,bool),X367)))))) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X367))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f2821,plain,(
  ( ! [X374,X376,X375] : (p(s(bool,X374)) | ~p(s(bool,X375)) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X376)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X374),s(fun(bool,bool),X376))))))) )),
  inference(superposition,[],[f341,f296])).
fof(f2820,plain,(
  ( ! [X372,X373,X371] : (p(s(bool,X371)) | ~p(s(bool,X372)) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X373)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X371),s(fun(bool,bool),X373))))))) )),
  inference(superposition,[],[f337,f296])).
fof(f2819,plain,(
  ( ! [X368,X370,X369] : (p(s(bool,X368)) | ~p(s(bool,X369)) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X370)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X368),s(fun(bool,bool),X370))))))) )),
  inference(superposition,[],[f331,f296])).
fof(f2818,plain,(
  ( ! [X366,X365,X367] : (p(s(bool,X365)) | ~p(s(bool,X366)) | p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X367)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X365),s(fun(bool,bool),X367))))))) )),
  inference(superposition,[],[f327,f296])).
fof(f2811,plain,(
  ( ! [X344,X341,X343,X340,X342] : (~p(s(bool,X341)) | p(s(bool,X342)) | p(s(bool,X343)) | s(bool,X340) != s(bool,X343) | p(s(bool,'const.bool.IN_2'(s(bool,X340),s(fun(bool,bool),X344)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X340),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X341),s(fun(bool,bool),X344))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f2809,plain,(
  ( ! [X333,X331,X332,X334,X330] : (p(s(bool,X331)) | p(s(bool,X332)) | ~p(s(bool,X333)) | s(bool,X330) != s(bool,X333) | p(s(bool,'const.bool.IN_2'(s(bool,X330),s(fun(bool,bool),X334)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X330),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X331),s(fun(bool,bool),X334))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f2808,plain,(
  ( ! [X325,X327,X329,X326,X328] : (s(bool,X326) != s(bool,X327) | p(s(bool,X328)) | ~p(s(bool,X327)) | p(s(bool,X325)) | p(s(bool,'const.bool.IN_2'(s(bool,X325),s(fun(bool,bool),X329)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X325),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X326),s(fun(bool,bool),X329))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f2807,plain,(
  ( ! [X321,X323,X324,X320,X322] : (s(bool,X321) != s(bool,X322) | p(s(bool,X323)) | ~p(s(bool,X320)) | p(s(bool,X322)) | p(s(bool,'const.bool.IN_2'(s(bool,X320),s(fun(bool,bool),X324)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X320),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X321),s(fun(bool,bool),X324))))))) )),
  inference(superposition,[],[f360,f296])).
fof(f2787,plain,(
  ( ! [X253,X251,X249,X254,X252,X250] : (~p(s(bool,X250)) | p(s(bool,X251)) | ~p(s(bool,X252)) | s(bool,X249) != s(bool,X251) | s(bool,X252) != s(bool,X253) | p(s(bool,'const.bool.IN_2'(s(bool,X249),s(fun(bool,bool),X254)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X249),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X250),s(fun(bool,bool),X254))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f2785,plain,(
  ( ! [X241,X239,X237,X242,X240,X238] : (p(s(bool,X238)) | ~p(s(bool,X239)) | ~p(s(bool,X240)) | s(bool,X237) != s(bool,X240) | s(bool,X239) != s(bool,X241) | p(s(bool,'const.bool.IN_2'(s(bool,X237),s(fun(bool,bool),X242)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X237),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X238),s(fun(bool,bool),X242))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f2784,plain,(
  ( ! [X231,X235,X233,X236,X234,X232] : (s(bool,X232) != s(bool,X233) | p(s(bool,X233)) | ~p(s(bool,X234)) | ~p(s(bool,X231)) | s(bool,X234) != s(bool,X235) | p(s(bool,'const.bool.IN_2'(s(bool,X231),s(fun(bool,bool),X236)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X231),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X232),s(fun(bool,bool),X236))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f2783,plain,(
  ( ! [X229,X227,X225,X230,X228,X226] : (s(bool,X226) != s(bool,X227) | p(s(bool,X225)) | ~p(s(bool,X228)) | ~p(s(bool,X227)) | s(bool,X228) != s(bool,X229) | p(s(bool,'const.bool.IN_2'(s(bool,X225),s(fun(bool,bool),X230)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X225),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X226),s(fun(bool,bool),X230))))))) )),
  inference(superposition,[],[f288,f296])).
fof(f2779,plain,(
  ( ! [X206,X204,X202,X205,X203,X201] : (~p(s(bool,X202)) | p(s(bool,X203)) | ~p(s(bool,X204)) | p(s(bool,X205)) | s(bool,X201) != s(bool,X205) | p(s(bool,'const.bool.IN_2'(s(bool,X201),s(fun(bool,bool),X206)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X201),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X202),s(fun(bool,bool),X206))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f2777,plain,(
  ( ! [X191,X189,X194,X192,X190,X193] : (p(s(bool,X190)) | p(s(bool,X191)) | ~p(s(bool,X192)) | ~p(s(bool,X193)) | s(bool,X189) != s(bool,X192) | p(s(bool,'const.bool.IN_2'(s(bool,X189),s(fun(bool,bool),X194)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X189),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X190),s(fun(bool,bool),X194))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f2776,plain,(
  ( ! [X187,X185,X188,X186,X184,X183] : (s(bool,X184) != s(bool,X185) | p(s(bool,X186)) | ~p(s(bool,X185)) | ~p(s(bool,X187)) | p(s(bool,X183)) | p(s(bool,'const.bool.IN_2'(s(bool,X183),s(fun(bool,bool),X188)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X183),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X184),s(fun(bool,bool),X188))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f2775,plain,(
  ( ! [X177,X182,X180,X178,X181,X179] : (s(bool,X178) != s(bool,X179) | p(s(bool,X180)) | ~p(s(bool,X177)) | ~p(s(bool,X181)) | p(s(bool,X179)) | p(s(bool,'const.bool.IN_2'(s(bool,X177),s(fun(bool,bool),X182)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X177),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X178),s(fun(bool,bool),X182))))))) )),
  inference(superposition,[],[f287,f296])).
fof(f2774,plain,(
  ( ! [X175,X173,X171,X176,X174,X172] : (~p(s(bool,X172)) | p(s(bool,X173)) | p(s(bool,X174)) | s(bool,X173) != s(bool,X175) | s(bool,X171) != s(bool,X174) | p(s(bool,'const.bool.IN_2'(s(bool,X171),s(fun(bool,bool),X176)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X171),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X172),s(fun(bool,bool),X176))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f2772,plain,(
  ( ! [X163,X161,X159,X164,X162,X160] : (p(s(bool,X160)) | p(s(bool,X161)) | ~p(s(bool,X162)) | s(bool,X161) != s(bool,X163) | s(bool,X159) != s(bool,X162) | p(s(bool,'const.bool.IN_2'(s(bool,X159),s(fun(bool,bool),X164)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X159),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X160),s(fun(bool,bool),X164))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f2769,plain,(
  ( ! [X146,X144,X142,X145,X143,X141] : (s(bool,X142) != s(bool,X143) | p(s(bool,X144)) | ~p(s(bool,X143)) | p(s(bool,X141)) | s(bool,X144) != s(bool,X145) | p(s(bool,'const.bool.IN_2'(s(bool,X141),s(fun(bool,bool),X146)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X141),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X142),s(fun(bool,bool),X146))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f2768,plain,(
  ( ! [X140,X138,X136,X135,X139,X137] : (s(bool,X136) != s(bool,X137) | p(s(bool,X138)) | ~p(s(bool,X135)) | p(s(bool,X137)) | s(bool,X138) != s(bool,X139) | p(s(bool,'const.bool.IN_2'(s(bool,X135),s(fun(bool,bool),X140)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X135),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X136),s(fun(bool,bool),X140))))))) )),
  inference(superposition,[],[f286,f296])).
fof(f2767,plain,(
  ( ! [X134,X132,X130,X133,X131,X129] : (~p(s(bool,X130)) | p(s(bool,X131)) | ~p(s(bool,X132)) | s(bool,X129) != s(bool,X131) | s(bool,X132) != s(bool,X133) | p(s(bool,'const.bool.IN_2'(s(bool,X129),s(fun(bool,bool),X134)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X129),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X130),s(fun(bool,bool),X134))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f2765,plain,(
  ( ! [X121,X118,X122,X120,X119,X117] : (p(s(bool,X118)) | ~p(s(bool,X119)) | ~p(s(bool,X120)) | s(bool,X117) != s(bool,X120) | s(bool,X119) != s(bool,X121) | p(s(bool,'const.bool.IN_2'(s(bool,X117),s(fun(bool,bool),X122)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X117),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X118),s(fun(bool,bool),X122))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f2764,plain,(
  ( ! [X111,X116,X114,X112,X115,X113] : (s(bool,X112) != s(bool,X113) | p(s(bool,X111)) | ~p(s(bool,X114)) | ~p(s(bool,X113)) | s(bool,X114) != s(bool,X115) | p(s(bool,'const.bool.IN_2'(s(bool,X111),s(fun(bool,bool),X116)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X111),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X112),s(fun(bool,bool),X116))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f2763,plain,(
  ( ! [X109,X107,X105,X110,X108,X106] : (s(bool,X106) != s(bool,X107) | p(s(bool,X107)) | ~p(s(bool,X108)) | ~p(s(bool,X105)) | s(bool,X108) != s(bool,X109) | p(s(bool,'const.bool.IN_2'(s(bool,X105),s(fun(bool,bool),X110)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X105),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X106),s(fun(bool,bool),X110))))))) )),
  inference(superposition,[],[f284,f296])).
fof(f2760,plain,(
  ( ! [X92,X90,X88,X87,X91,X89] : (~p(s(bool,X88)) | p(s(bool,X89)) | p(s(bool,X90)) | s(bool,X89) != s(bool,X91) | s(bool,X87) != s(bool,X90) | p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),X92)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X87),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X88),s(fun(bool,bool),X92))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f2758,plain,(
  ( ! [X80,X78,X76,X79,X77,X75] : (p(s(bool,X76)) | p(s(bool,X77)) | ~p(s(bool,X78)) | s(bool,X77) != s(bool,X79) | s(bool,X75) != s(bool,X78) | p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),X80)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X75),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X76),s(fun(bool,bool),X80))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f2755,plain,(
  ( ! [X61,X59,X57,X62,X60,X58] : (s(bool,X58) != s(bool,X59) | p(s(bool,X60)) | ~p(s(bool,X57)) | p(s(bool,X59)) | s(bool,X60) != s(bool,X61) | p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),X62)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X57),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X58),s(fun(bool,bool),X62))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f2754,plain,(
  ( ! [X54,X52,X56,X55,X53,X51] : (s(bool,X52) != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X53)) | p(s(bool,X51)) | s(bool,X54) != s(bool,X55) | p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),X56)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X51),s(fun(bool,bool),'const.pred_set.INSERT_2'(s(bool,X52),s(fun(bool,bool),X56))))))) )),
  inference(superposition,[],[f282,f296])).
fof(f3408,plain,(
  ( ! [X14,X15,X13,X18,X16] : (p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X15)))) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X16),s(fun(X13,bool),X15))))) | ~p(s(bool,X18)) | s(X13,X14) = s(X13,X16)) ) | $spl124),
  inference(cnf_transformation,[],[f3408_D])).
fof(f3408_D,plain,(
  ( ! [X14,X15,X13,X18,X16] : (p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X15)))) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X16),s(fun(X13,bool),X15))))) | ~p(s(bool,X18)) | s(X13,X14) = s(X13,X16)) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f2430,plain,(
  ( ! [X103,X101,X99,X102,X100,X104] : (p(s(bool,'const.bool.IN_2'(s(X99,X100),s(fun(X99,bool),X101)))) | s(X99,X100) = s(X99,X102) | p(s(bool,X103)) | ~p(s(bool,X104)) | s(bool,X104) != s(bool,'const.bool.IN_2'(s(X99,X100),s(fun(X99,bool),'const.pred_set.INSERT_2'(s(X99,X102),s(fun(X99,bool),X101)))))) )),
  inference(resolution,[],[f296,f360])).
fof(f2422,plain,(
  ( ! [X68,X66,X64,X62,X67,X65,X63] : (p(s(bool,'const.bool.IN_2'(s(X62,X63),s(fun(X62,bool),X64)))) | s(X62,X63) = s(X62,X65) | ~p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X67) != s(bool,'const.bool.IN_2'(s(X62,X63),s(fun(X62,bool),'const.pred_set.INSERT_2'(s(X62,X65),s(fun(X62,bool),X64))))) | s(bool,X66) != s(bool,X68)) )),
  inference(resolution,[],[f296,f288])).
fof(f2420,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (p(s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),X50)))) | s(X48,X49) = s(X48,X51) | p(s(bool,X52)) | ~p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X53) != s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),'const.pred_set.INSERT_2'(s(X48,X51),s(fun(X48,bool),X50)))))) )),
  inference(resolution,[],[f296,f287])).
fof(f2418,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (p(s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),X36)))) | s(X34,X35) = s(X34,X37) | p(s(bool,X38)) | ~p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.INSERT_2'(s(X34,X37),s(fun(X34,bool),X36)))))) )),
  inference(resolution,[],[f296,f286])).
fof(f2417,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),X29)))) | s(X27,X28) = s(X27,X30) | ~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X32) != s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.pred_set.INSERT_2'(s(X27,X30),s(fun(X27,bool),X29))))) | s(bool,X31) != s(bool,X33)) )),
  inference(resolution,[],[f296,f284])).
fof(f2415,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X15)))) | s(X13,X14) = s(X13,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X16),s(fun(X13,bool),X15)))))) )),
  inference(resolution,[],[f296,f282])).
fof(f3405,plain,(
  ( ! [X14,X15,X13,X18,X16] : (s(X13,X14) = s(X13,X15) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X16))) | p(s(bool,X18)) | ~p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X15),s(fun(X13,bool),X16))))))) ) | $spl122),
  inference(cnf_transformation,[],[f3405_D])).
fof(f3405_D,plain,(
  ( ! [X14,X15,X13,X18,X16] : (s(X13,X14) = s(X13,X15) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X16))) | p(s(bool,X18)) | ~p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X15),s(fun(X13,bool),X16))))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f2410,plain,(
  ( ! [X99,X97,X95,X100,X98,X96] : (s(X95,X96) = s(X95,X97) | ~p(s(bool,'const.bool.IN_2'(s(X95,X96),s(fun(X95,bool),'const.pred_set.INSERT_2'(s(X95,X97),s(fun(X95,bool),X98)))))) | p(s(bool,X99)) | p(s(bool,X100)) | s(bool,X100) != s(bool,'const.bool.IN_2'(s(X95,X96),s(fun(X95,bool),X98)))) )),
  inference(resolution,[],[f296,f360])).
fof(f2403,plain,(
  ( ! [X68,X66,X64,X62,X67,X65,X63] : (s(X62,X63) = s(X62,X64) | ~p(s(bool,'const.bool.IN_2'(s(X62,X63),s(fun(X62,bool),'const.pred_set.INSERT_2'(s(X62,X64),s(fun(X62,bool),X65)))))) | p(s(bool,X66)) | ~p(s(bool,X67)) | s(bool,X66) != s(bool,'const.bool.IN_2'(s(X62,X63),s(fun(X62,bool),X65))) | s(bool,X67) != s(bool,X68)) )),
  inference(resolution,[],[f296,f288])).
fof(f2400,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (s(X41,X42) = s(X41,X43) | ~p(s(bool,'const.bool.IN_2'(s(X41,X42),s(fun(X41,bool),'const.pred_set.INSERT_2'(s(X41,X43),s(fun(X41,bool),X44)))))) | p(s(bool,X45)) | ~p(s(bool,X46)) | p(s(bool,X47)) | s(bool,X47) != s(bool,'const.bool.IN_2'(s(X41,X42),s(fun(X41,bool),X44)))) )),
  inference(resolution,[],[f296,f287])).
fof(f2399,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (s(X34,X35) = s(X34,X36) | ~p(s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),'const.pred_set.INSERT_2'(s(X34,X36),s(fun(X34,bool),X37)))))) | p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X38) != s(bool,X40) | s(bool,X39) != s(bool,'const.bool.IN_2'(s(X34,X35),s(fun(X34,bool),X37)))) )),
  inference(resolution,[],[f296,f286])).
fof(f2398,plain,(
  ( ! [X30,X28,X33,X31,X29,X27,X32] : (s(X27,X28) = s(X27,X29) | ~p(s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),'const.pred_set.INSERT_2'(s(X27,X29),s(fun(X27,bool),X30)))))) | p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X31) != s(bool,'const.bool.IN_2'(s(X27,X28),s(fun(X27,bool),X30))) | s(bool,X32) != s(bool,X33)) )),
  inference(resolution,[],[f296,f284])).
fof(f2396,plain,(
  ( ! [X14,X19,X17,X15,X13,X18,X16] : (s(X13,X14) = s(X13,X15) | ~p(s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),'const.pred_set.INSERT_2'(s(X13,X15),s(fun(X13,bool),X16)))))) | p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X18) != s(bool,'const.bool.IN_2'(s(X13,X14),s(fun(X13,bool),X16)))) )),
  inference(resolution,[],[f296,f282])).
fof(f2390,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) ) | $spl118),
  inference(cnf_transformation,[],[f2390_D])).
fof(f2390_D,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2392,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl121),
  inference(cnf_transformation,[],[f2392_D])).
fof(f2392_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f2387,plain,(
  ( ! [X19] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))))) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1616,f279])).
fof(f1616,plain,(
  ( ! [X23] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) ) | ($spl82 | $spl89)),
  inference(trivial_inequality_removal,[],[f1615])).
fof(f1615,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1451,f279])).
fof(f2386,plain,(
  ( ! [X18] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))))))) ) | ($spl82 | $spl89)),
  inference(superposition,[],[f1616,f277])).
fof(f2233,plain,(
  ( ! [X12,X10,X15,X13,X11] : (p(s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.INSERT_2'(s(X10,X12),s(fun(X10,bool),X13)))))) | s(bool,X15) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),X13))) | ~p(s(bool,X15))) ) | $spl116),
  inference(cnf_transformation,[],[f2233_D])).
fof(f2233_D,plain,(
  ( ! [X12,X10,X15,X13,X11] : (p(s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.INSERT_2'(s(X10,X12),s(fun(X10,bool),X13)))))) | s(bool,X15) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),X13))) | ~p(s(bool,X15))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f2043,plain,(
  ( ! [X101,X99,X97,X100,X98,X96] : (p(s(bool,'const.bool.IN_2'(s(X96,X97),s(fun(X96,bool),'const.pred_set.INSERT_2'(s(X96,X98),s(fun(X96,bool),X99)))))) | p(s(bool,X100)) | ~p(s(bool,X101)) | s(bool,X101) != s(bool,'const.bool.IN_2'(s(X96,X97),s(fun(X96,bool),X99)))) )),
  inference(resolution,[],[f298,f360])).
fof(f298,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X3)))))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f217])).
fof(f2035,plain,(
  ( ! [X61,X59,X64,X62,X60,X65,X63] : (p(s(bool,'const.bool.IN_2'(s(X59,X60),s(fun(X59,bool),'const.pred_set.INSERT_2'(s(X59,X61),s(fun(X59,bool),X62)))))) | ~p(s(bool,X63)) | ~p(s(bool,X64)) | s(bool,X64) != s(bool,'const.bool.IN_2'(s(X59,X60),s(fun(X59,bool),X62))) | s(bool,X63) != s(bool,X65)) )),
  inference(resolution,[],[f298,f288])).
fof(f2033,plain,(
  ( ! [X47,X45,X50,X48,X46,X51,X49] : (p(s(bool,'const.bool.IN_2'(s(X45,X46),s(fun(X45,bool),'const.pred_set.INSERT_2'(s(X45,X47),s(fun(X45,bool),X48)))))) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X50) != s(bool,'const.bool.IN_2'(s(X45,X46),s(fun(X45,bool),X48)))) )),
  inference(resolution,[],[f298,f287])).
fof(f2031,plain,(
  ( ! [X37,X35,X33,X31,X36,X34,X32] : (p(s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),'const.pred_set.INSERT_2'(s(X31,X33),s(fun(X31,bool),X34)))))) | p(s(bool,X35)) | ~p(s(bool,X36)) | s(bool,X35) != s(bool,X37) | s(bool,X36) != s(bool,'const.bool.IN_2'(s(X31,X32),s(fun(X31,bool),X34)))) )),
  inference(resolution,[],[f298,f286])).
fof(f2030,plain,(
  ( ! [X30,X28,X26,X24,X29,X27,X25] : (p(s(bool,'const.bool.IN_2'(s(X24,X25),s(fun(X24,bool),'const.pred_set.INSERT_2'(s(X24,X26),s(fun(X24,bool),X27)))))) | ~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X29) != s(bool,'const.bool.IN_2'(s(X24,X25),s(fun(X24,bool),X27))) | s(bool,X28) != s(bool,X30)) )),
  inference(resolution,[],[f298,f284])).
fof(f2028,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X16] : (p(s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.INSERT_2'(s(X10,X12),s(fun(X10,bool),X13)))))) | p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),X13)))) )),
  inference(resolution,[],[f298,f282])).
fof(f2230,plain,(
  ( ! [X6,X7,X5,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),X7)))) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.pred_set.INSERT_2'(s(X5,X11),s(fun(X5,bool),X7))))) | p(s(bool,X9))) ) | $spl114),
  inference(cnf_transformation,[],[f2230_D])).
fof(f2230_D,plain,(
  ( ! [X6,X7,X5,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),X7)))) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.pred_set.INSERT_2'(s(X5,X11),s(fun(X5,bool),X7))))) | p(s(bool,X9))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f2024,plain,(
  ( ! [X87,X85,X83,X86,X84,X82] : (~p(s(bool,'const.bool.IN_2'(s(X82,X83),s(fun(X82,bool),X84)))) | p(s(bool,X85)) | p(s(bool,X86)) | s(bool,X86) != s(bool,'const.bool.IN_2'(s(X82,X83),s(fun(X82,bool),'const.pred_set.INSERT_2'(s(X82,X87),s(fun(X82,bool),X84)))))) )),
  inference(resolution,[],[f298,f360])).
fof(f2017,plain,(
  ( ! [X59,X57,X54,X58,X56,X55,X53] : (~p(s(bool,'const.bool.IN_2'(s(X53,X54),s(fun(X53,bool),X55)))) | p(s(bool,X56)) | ~p(s(bool,X57)) | s(bool,X56) != s(bool,'const.bool.IN_2'(s(X53,X54),s(fun(X53,bool),'const.pred_set.INSERT_2'(s(X53,X58),s(fun(X53,bool),X55))))) | s(bool,X57) != s(bool,X59)) )),
  inference(resolution,[],[f298,f288])).
fof(f2014,plain,(
  ( ! [X39,X37,X35,X33,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s(X33,X34),s(fun(X33,bool),X35)))) | p(s(bool,X36)) | ~p(s(bool,X37)) | p(s(bool,X38)) | s(bool,X38) != s(bool,'const.bool.IN_2'(s(X33,X34),s(fun(X33,bool),'const.pred_set.INSERT_2'(s(X33,X39),s(fun(X33,bool),X35)))))) )),
  inference(resolution,[],[f298,f287])).
fof(f2013,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X32] : (~p(s(bool,'const.bool.IN_2'(s(X26,X27),s(fun(X26,bool),X28)))) | p(s(bool,X29)) | p(s(bool,X30)) | s(bool,X29) != s(bool,X31) | s(bool,X30) != s(bool,'const.bool.IN_2'(s(X26,X27),s(fun(X26,bool),'const.pred_set.INSERT_2'(s(X26,X32),s(fun(X26,bool),X28)))))) )),
  inference(resolution,[],[f298,f286])).
fof(f2012,plain,(
  ( ! [X24,X23,X21,X19,X25,X22,X20] : (~p(s(bool,'const.bool.IN_2'(s(X19,X20),s(fun(X19,bool),X21)))) | p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,'const.bool.IN_2'(s(X19,X20),s(fun(X19,bool),'const.pred_set.INSERT_2'(s(X19,X24),s(fun(X19,bool),X21))))) | s(bool,X23) != s(bool,X25)) )),
  inference(resolution,[],[f298,f284])).
fof(f2010,plain,(
  ( ! [X6,X10,X8,X7,X5,X11,X9] : (~p(s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),X7)))) | p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,'const.bool.IN_2'(s(X5,X6),s(fun(X5,bool),'const.pred_set.INSERT_2'(s(X5,X11),s(fun(X5,bool),X7)))))) )),
  inference(resolution,[],[f298,f282])).
fof(f1449,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) | $spl108),
  inference(cnf_transformation,[],[f1449_D])).
fof(f1449_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | ~p(s(bool,X2))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f1978,plain,(
  ( ! [X43,X41,X42] : (s(bool,'T_0') = s(bool,X41) | p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X41) != s(bool,X43)) ) | $spl82),
  inference(resolution,[],[f571,f360])).
fof(f1970,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl82),
  inference(resolution,[],[f571,f288])).
fof(f1968,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl82),
  inference(resolution,[],[f571,f287])).
fof(f1966,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,X12) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl82),
  inference(resolution,[],[f571,f286])).
fof(f1965,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,X8) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl82),
  inference(resolution,[],[f571,f284])).
fof(f1963,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl82),
  inference(resolution,[],[f571,f282])).
fof(f1915,plain,(
  ( ! [X6,X4,X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(bool,X4) != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X6))))) | p(s(bool,X4))) ) | $spl112),
  inference(cnf_transformation,[],[f1915_D])).
fof(f1915_D,plain,(
  ( ! [X6,X4,X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s(bool,X4) != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X6))))) | p(s(bool,X4))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f1681,plain,(
  ( ! [X80,X78,X81,X79,X77,X82] : (s(X77,X78) != s(X77,X79) | p(s(bool,X80)) | p(s(bool,X81)) | s(bool,X81) != s(bool,'const.bool.IN_2'(s(X77,X78),s(fun(X77,bool),'const.pred_set.INSERT_2'(s(X77,X79),s(fun(X77,bool),X82)))))) )),
  inference(resolution,[],[f297,f360])).
fof(f1674,plain,(
  ( ! [X54,X52,X50,X48,X53,X51,X49] : (s(X48,X49) != s(X48,X50) | p(s(bool,X51)) | ~p(s(bool,X52)) | s(bool,X51) != s(bool,'const.bool.IN_2'(s(X48,X49),s(fun(X48,bool),'const.pred_set.INSERT_2'(s(X48,X50),s(fun(X48,bool),X53))))) | s(bool,X52) != s(bool,X54)) )),
  inference(resolution,[],[f297,f288])).
fof(f1671,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (s(X28,X29) != s(X28,X30) | p(s(bool,X31)) | ~p(s(bool,X32)) | p(s(bool,X33)) | s(bool,X33) != s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.INSERT_2'(s(X28,X30),s(fun(X28,bool),X34)))))) )),
  inference(resolution,[],[f297,f287])).
fof(f1670,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (s(X21,X22) != s(X21,X23) | p(s(bool,X24)) | p(s(bool,X25)) | s(bool,X24) != s(bool,X26) | s(bool,X25) != s(bool,'const.bool.IN_2'(s(X21,X22),s(fun(X21,bool),'const.pred_set.INSERT_2'(s(X21,X23),s(fun(X21,bool),X27)))))) )),
  inference(resolution,[],[f297,f286])).
fof(f1669,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s(X14,X15) != s(X14,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,'const.bool.IN_2'(s(X14,X15),s(fun(X14,bool),'const.pred_set.INSERT_2'(s(X14,X16),s(fun(X14,bool),X19))))) | s(bool,X18) != s(bool,X20)) )),
  inference(resolution,[],[f297,f284])).
fof(f1667,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(X0,X1) != s(X0,X2) | p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.INSERT_2'(s(X0,X2),s(fun(X0,bool),X6)))))) )),
  inference(resolution,[],[f297,f282])).
fof(f651,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl89),
  inference(cnf_transformation,[],[f651_D])).
fof(f651_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f967,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X0))) ) | $spl76),
  inference(subsumption_resolution,[],[f951,f567])).
fof(f951,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl76),
  inference(superposition,[],[f567,f359])).
fof(f650,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl88),
  inference(cnf_transformation,[],[f650_D])).
fof(f650_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f917,plain,(
  ( ! [X55] : (s(bool,'T_0') = s(bool,'F_0') | p(s(bool,X55))) ) | $spl74),
  inference(resolution,[],[f566,f356])).
fof(f909,plain,(
  ( ! [X47] : (s(bool,'T_0') = s(bool,'F_0') | p(s(bool,X47))) ) | $spl74),
  inference(resolution,[],[f566,f321])).
fof(f910,plain,(
  ( ! [X48] : (s(bool,'T_0') = s(bool,'F_0') | p(s(bool,X48))) ) | $spl74),
  inference(resolution,[],[f566,f325])).
fof(f911,plain,(
  ( ! [X49] : (s(bool,'T_0') = s(bool,'F_0') | p(s(bool,X49))) ) | $spl74),
  inference(resolution,[],[f566,f334])).
fof(f912,plain,(
  ( ! [X50] : (s(bool,'T_0') = s(bool,'F_0') | p(s(bool,X50))) ) | $spl74),
  inference(resolution,[],[f566,f347])).
fof(f1564,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X9))) ) | $spl80),
  inference(subsumption_resolution,[],[f1394,f570])).
fof(f1394,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X9)) | s(bool,'T_0') = s(bool,X9)) ) | $spl80),
  inference(superposition,[],[f570,f359])).
fof(f1558,plain,(
  $false | ($spl76 | $spl84)),
  inference(equality_resolution,[],[f1457])).
fof(f1457,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3)) ) | ($spl76 | $spl84)),
  inference(subsumption_resolution,[],[f572,f567])).
fof(f1540,plain,(
  ( ! [X4,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) ) | $spl110),
  inference(cnf_transformation,[],[f1540_D])).
fof(f1540_D,plain,(
  ( ! [X4,X3,X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f1473,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,X44)) | ~p(s(bool,X45)) | s(bool,X45) != s(bool,'const.bool.IN_2'(s(X46,X47),s(fun(X46,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f299,f360])).
fof(f1465,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X34) != s(bool,'const.bool.IN_2'(s(X35,X36),s(fun(X35,bool),'const.pred_set.EMPTY_0'))) | s(bool,X33) != s(bool,X37)) )),
  inference(resolution,[],[f299,f288])).
fof(f1463,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.bool.IN_2'(s(X28,X29),s(fun(X28,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f299,f287])).
fof(f1461,plain,(
  ( ! [X19,X17,X15,X18,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.bool.IN_2'(s(X18,X19),s(fun(X18,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f299,f286])).
fof(f1460,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X11) != s(bool,'const.bool.IN_2'(s(X12,X13),s(fun(X12,bool),'const.pred_set.EMPTY_0'))) | s(bool,X10) != s(bool,X14)) )),
  inference(resolution,[],[f299,f284])).
fof(f1458,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0')))) )),
  inference(resolution,[],[f299,f282])).
fof(f1422,plain,(
  ( ! [X43,X41,X42] : (s(bool,'T_0') = s(bool,X41) | p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X41) != s(bool,X43)) ) | $spl82),
  inference(resolution,[],[f571,f360])).
fof(f1414,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') = s(bool,X28) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X30) | s(bool,X29) != s(bool,X31)) ) | $spl82),
  inference(resolution,[],[f571,f288])).
fof(f1412,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,X20) | p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X20) != s(bool,X22)) ) | $spl82),
  inference(resolution,[],[f571,f287])).
fof(f1410,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,X12) | p(s(bool,X13)) | ~p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl82),
  inference(resolution,[],[f571,f286])).
fof(f1409,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,X8) | ~p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X10) | s(bool,X9) != s(bool,X11)) ) | $spl82),
  inference(resolution,[],[f571,f284])).
fof(f1407,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl82),
  inference(resolution,[],[f571,f282])).
fof(f1379,plain,(
  ( ! [X171,X169,X170] : (p(s(bool,X170)) | ~p(s(bool,X171)) | s(bool,X169) != s(bool,X171)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1291,f321])).
fof(f1291,plain,(
  ( ! [X171,X169,X170] : (p(s(bool,'F_0')) | p(s(bool,X170)) | ~p(s(bool,X171)) | s(bool,X169) != s(bool,X171)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f360,f1132])).
fof(f1132,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f569,f564])).
fof(f1378,plain,(
  ( ! [X165,X163] : (p(s(bool,X165)) | ~p(s(bool,X163))) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1377,f1132])).
fof(f1377,plain,(
  ( ! [X165,X163,X164] : (s(bool,'F_0') != s(bool,X164) | p(s(bool,X165)) | ~p(s(bool,X163))) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1289,f567])).
fof(f1289,plain,(
  ( ! [X165,X163,X164] : (s(bool,'F_0') != s(bool,X164) | p(s(bool,X165)) | ~p(s(bool,X163)) | p(s(bool,X164))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f360,f1132])).
fof(f1374,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1268,f357])).
fof(f1268,plain,(
  ( ! [X127,X125,X126,X124] : (p(s(bool,'F_0')) | ~p(s(bool,X125)) | ~p(s(bool,X126)) | s(bool,X124) != s(bool,X126) | s(bool,X125) != s(bool,X127)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f288,f1132])).
fof(f1373,plain,(
  ( ! [X123,X122,X120] : (~p(s(bool,X122)) | ~p(s(bool,X120)) | s(bool,X122) != s(bool,X123)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1372,f1132])).
fof(f1372,plain,(
  ( ! [X123,X121,X122,X120] : (s(bool,'F_0') != s(bool,X121) | ~p(s(bool,X122)) | ~p(s(bool,X120)) | s(bool,X122) != s(bool,X123)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1267,f567])).
fof(f1267,plain,(
  ( ! [X123,X121,X122,X120] : (s(bool,'F_0') != s(bool,X121) | p(s(bool,X121)) | ~p(s(bool,X122)) | ~p(s(bool,X120)) | s(bool,X122) != s(bool,X123)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f288,f1132])).
fof(f1368,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1260,f321])).
fof(f1260,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,'F_0')) | p(s(bool,X93)) | ~p(s(bool,X94)) | ~p(s(bool,X95)) | s(bool,X92) != s(bool,X94)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f287,f1132])).
fof(f1367,plain,(
  ( ! [X87,X86,X84] : (p(s(bool,X86)) | ~p(s(bool,X84)) | ~p(s(bool,X87))) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1366,f1132])).
fof(f1366,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,'F_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X84)) | ~p(s(bool,X87))) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1258,f567])).
fof(f1258,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,'F_0') != s(bool,X85) | p(s(bool,X86)) | ~p(s(bool,X84)) | ~p(s(bool,X87)) | p(s(bool,X85))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f287,f1132])).
fof(f1364,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1255,f321])).
fof(f1255,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'F_0')) | p(s(bool,X73)) | ~p(s(bool,X74)) | s(bool,X73) != s(bool,X75) | s(bool,X72) != s(bool,X74)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f286,f1132])).
fof(f1362,plain,(
  ( ! [X59,X58,X56] : (p(s(bool,X58)) | ~p(s(bool,X56)) | s(bool,X58) != s(bool,X59)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1361,f1132])).
fof(f1361,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'F_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | s(bool,X58) != s(bool,X59)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1251,f567])).
fof(f1251,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'F_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | p(s(bool,X57)) | s(bool,X58) != s(bool,X59)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f286,f1132])).
fof(f1360,plain,(
  ( ! [X47,X45,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1248,f357])).
fof(f1248,plain,(
  ( ! [X47,X45,X46,X44] : (p(s(bool,'F_0')) | ~p(s(bool,X45)) | ~p(s(bool,X46)) | s(bool,X44) != s(bool,X46) | s(bool,X45) != s(bool,X47)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f284,f1132])).
fof(f1359,plain,(
  ( ! [X39,X38,X36] : (~p(s(bool,X38)) | ~p(s(bool,X36)) | s(bool,X38) != s(bool,X39)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1358,f1132])).
fof(f1358,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'F_0') != s(bool,X37) | ~p(s(bool,X38)) | ~p(s(bool,X36)) | s(bool,X38) != s(bool,X39)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1246,f567])).
fof(f1246,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'F_0') != s(bool,X37) | p(s(bool,X37)) | ~p(s(bool,X38)) | ~p(s(bool,X36)) | s(bool,X38) != s(bool,X39)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f284,f1132])).
fof(f1355,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1241,f321])).
fof(f1241,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'F_0')) | p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,X19) | s(bool,X16) != s(bool,X18)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f282,f1132])).
fof(f1353,plain,(
  ( ! [X6,X4,X7] : (p(s(bool,X6)) | ~p(s(bool,X4)) | s(bool,X6) != s(bool,X7)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1352,f1132])).
fof(f1352,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,X5) | p(s(bool,X6)) | ~p(s(bool,X4)) | s(bool,X6) != s(bool,X7)) ) | ($spl70 | $spl76 | $spl78)),
  inference(subsumption_resolution,[],[f1238,f567])).
fof(f1238,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'F_0') != s(bool,X5) | p(s(bool,X6)) | ~p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X6) != s(bool,X7)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f282,f1132])).
fof(f1350,plain,(
  ( ! [X220,X219,X221] : (~p(s(bool,X219)) | p(s(bool,X220)) | p(s(bool,X221))) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1231,f564])).
fof(f1231,plain,(
  ( ! [X220,X219,X221] : (~p(s(bool,X219)) | p(s(bool,X220)) | p(s(bool,X221)) | s(bool,'F_0') != s(bool,X221)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f360,f1132])).
fof(f1349,plain,(
  ( ! [X212,X210,X211] : (s(bool,X210) != s(bool,X211) | p(s(bool,X212)) | ~p(s(bool,X211))) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1228,f321])).
fof(f1228,plain,(
  ( ! [X212,X210,X211] : (s(bool,X210) != s(bool,X211) | p(s(bool,X212)) | ~p(s(bool,X211)) | p(s(bool,'F_0'))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f360,f1132])).
fof(f1346,plain,(
  ( ! [X177,X178,X176,X179] : (~p(s(bool,X176)) | p(s(bool,X177)) | ~p(s(bool,X178)) | s(bool,X178) != s(bool,X179)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1208,f564])).
fof(f1208,plain,(
  ( ! [X177,X178,X176,X179] : (~p(s(bool,X176)) | p(s(bool,X177)) | ~p(s(bool,X178)) | s(bool,'F_0') != s(bool,X177) | s(bool,X178) != s(bool,X179)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f288,f1132])).
fof(f1344,plain,(
  ( ! [X163,X161,X162,X160] : (s(bool,X160) != s(bool,X161) | ~p(s(bool,X162)) | ~p(s(bool,X161)) | s(bool,X162) != s(bool,X163)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1204,f357])).
fof(f1204,plain,(
  ( ! [X163,X161,X162,X160] : (s(bool,X160) != s(bool,X161) | p(s(bool,'F_0')) | ~p(s(bool,X162)) | ~p(s(bool,X161)) | s(bool,X162) != s(bool,X163)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f288,f1132])).
fof(f1343,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,X144)) | p(s(bool,X145)) | ~p(s(bool,X146)) | p(s(bool,X147))) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1200,f564])).
fof(f1200,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,X144)) | p(s(bool,X145)) | ~p(s(bool,X146)) | p(s(bool,X147)) | s(bool,'F_0') != s(bool,X147)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f287,f1132])).
fof(f1342,plain,(
  ( ! [X134,X132,X135,X133] : (s(bool,X132) != s(bool,X133) | p(s(bool,X134)) | ~p(s(bool,X133)) | ~p(s(bool,X135))) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1197,f321])).
fof(f1197,plain,(
  ( ! [X134,X132,X135,X133] : (s(bool,X132) != s(bool,X133) | p(s(bool,X134)) | ~p(s(bool,X133)) | ~p(s(bool,X135)) | p(s(bool,'F_0'))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f287,f1132])).
fof(f1341,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X124)) | p(s(bool,X125)) | p(s(bool,X126)) | s(bool,X125) != s(bool,X127)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1195,f564])).
fof(f1195,plain,(
  ( ! [X127,X125,X126,X124] : (~p(s(bool,X124)) | p(s(bool,X125)) | p(s(bool,X126)) | s(bool,X125) != s(bool,X127) | s(bool,'F_0') != s(bool,X126)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f286,f1132])).
fof(f1338,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,X104) != s(bool,X105) | p(s(bool,X106)) | ~p(s(bool,X105)) | s(bool,X106) != s(bool,X107)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1190,f321])).
fof(f1190,plain,(
  ( ! [X107,X105,X106,X104] : (s(bool,X104) != s(bool,X105) | p(s(bool,X106)) | ~p(s(bool,X105)) | p(s(bool,'F_0')) | s(bool,X106) != s(bool,X107)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f286,f1132])).
fof(f1337,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,X96)) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X98) != s(bool,X99)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1188,f564])).
fof(f1188,plain,(
  ( ! [X99,X97,X98,X96] : (~p(s(bool,X96)) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,'F_0') != s(bool,X97) | s(bool,X98) != s(bool,X99)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f284,f1132])).
fof(f1335,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X84) != s(bool,X85) | ~p(s(bool,X86)) | ~p(s(bool,X85)) | s(bool,X86) != s(bool,X87)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1185,f357])).
fof(f1185,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X84) != s(bool,X85) | p(s(bool,'F_0')) | ~p(s(bool,X86)) | ~p(s(bool,X85)) | s(bool,X86) != s(bool,X87)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f284,f1132])).
fof(f1334,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,X68)) | p(s(bool,X69)) | p(s(bool,X70)) | s(bool,X69) != s(bool,X71)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1181,f564])).
fof(f1181,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,X68)) | p(s(bool,X69)) | p(s(bool,X70)) | s(bool,X69) != s(bool,X71) | s(bool,'F_0') != s(bool,X70)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f282,f1132])).
fof(f1331,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,X44) != s(bool,X45) | p(s(bool,X46)) | ~p(s(bool,X45)) | s(bool,X46) != s(bool,X47)) ) | ($spl70 | $spl78)),
  inference(subsumption_resolution,[],[f1175,f321])).
fof(f1175,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,X44) != s(bool,X45) | p(s(bool,X46)) | ~p(s(bool,X45)) | p(s(bool,'F_0')) | s(bool,X46) != s(bool,X47)) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f282,f1132])).
fof(f1170,plain,(
  ( ! [X37,X36] : (~p(s(bool,X36)) | p(s(bool,X37))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f356,f1132])).
fof(f940,plain,(
  ( ! [X52] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) | $spl100),
  inference(cnf_transformation,[],[f940_D])).
fof(f940_D,plain,(
  ( ! [X52] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f1169,plain,(
  ( ! [X35,X34] : (~p(s(bool,X34)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X35)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f355,f1132])).
fof(f1330,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))) ) | $spl106),
  inference(cnf_transformation,[],[f1330_D])).
fof(f1330_D,plain,(
  ( ! [X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f1168,plain,(
  ( ! [X33,X32] : (p(s(bool,X32)) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f354,f1132])).
fof(f939,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))) ) | $spl98),
  inference(cnf_transformation,[],[f939_D])).
fof(f939_D,plain,(
  ( ! [X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1167,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f353,f1132])).
fof(f1329,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))) ) | $spl104),
  inference(cnf_transformation,[],[f1329_D])).
fof(f1329_D,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f1166,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f352,f1132])).
fof(f1165,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f351,f1132])).
fof(f1164,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f350,f1132])).
fof(f350,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f246])).
fof(f1163,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f349,f1132])).
fof(f1162,plain,(
  ( ! [X21,X20] : (p(s(bool,X20)) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f348,f1132])).
fof(f348,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f245])).
fof(f1161,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | p(s(bool,X19))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f347,f1132])).
fof(f1160,plain,(
  ( ! [X17,X16] : (~p(s(bool,X16)) | p(s(bool,X17))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f334,f1132])).
fof(f1159,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | p(s(bool,X15))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f325,f1132])).
fof(f1158,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f321,f1132])).
fof(f938,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44)))) ) | $spl96),
  inference(cnf_transformation,[],[f938_D])).
fof(f938_D,plain,(
  ( ! [X43,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44)))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f1157,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,X9)) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f315,f1132])).
fof(f1328,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))) ) | $spl102),
  inference(cnf_transformation,[],[f1328_D])).
fof(f1328_D,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f1156,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f314,f1132])).
fof(f1155,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,X3)) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f313,f1132])).
fof(f1154,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))) ) | ($spl70 | $spl78)),
  inference(superposition,[],[f312,f1132])).
fof(f312,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f222])).
fof(f570,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) | $spl80),
  inference(cnf_transformation,[],[f570_D])).
fof(f570_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f1103,plain,(
  ( ! [X121,X120] : (s(bool,'T_0') != s(bool,X121) | p(s(bool,X120)) | p(s(bool,X121))) )),
  inference(forward_demodulation,[],[f1102,f403])).
fof(f1102,plain,(
  ( ! [X121,X120] : (p(s(bool,X120)) | p(s(bool,X121)) | s(bool,X121) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(subsumption_resolution,[],[f1037,f361])).
fof(f1037,plain,(
  ( ! [X121,X120] : (~p(s(bool,'T_0')) | p(s(bool,X120)) | p(s(bool,X121)) | s(bool,X121) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(superposition,[],[f360,f403])).
fof(f1091,plain,(
  ( ! [X103,X101,X102] : (s(bool,'T_0') != s(bool,X101) | p(s(bool,X101)) | ~p(s(bool,X102)) | s(bool,X102) != s(bool,X103)) )),
  inference(forward_demodulation,[],[f1090,f403])).
fof(f1090,plain,(
  ( ! [X103,X101,X102] : (p(s(bool,X101)) | ~p(s(bool,X102)) | s(bool,X101) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X102) != s(bool,X103)) )),
  inference(subsumption_resolution,[],[f1014,f361])).
fof(f1014,plain,(
  ( ! [X103,X101,X102] : (~p(s(bool,'T_0')) | p(s(bool,X101)) | ~p(s(bool,X102)) | s(bool,X101) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X102) != s(bool,X103)) )),
  inference(superposition,[],[f288,f403])).
fof(f1085,plain,(
  ( ! [X78,X79,X77] : (s(bool,'T_0') != s(bool,X79) | p(s(bool,X77)) | ~p(s(bool,X78)) | p(s(bool,X79))) )),
  inference(forward_demodulation,[],[f1084,f403])).
fof(f1084,plain,(
  ( ! [X78,X79,X77] : (p(s(bool,X77)) | ~p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X79) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(subsumption_resolution,[],[f1006,f361])).
fof(f1006,plain,(
  ( ! [X78,X79,X77] : (~p(s(bool,'T_0')) | p(s(bool,X77)) | ~p(s(bool,X78)) | p(s(bool,X79)) | s(bool,X79) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(superposition,[],[f287,f403])).
fof(f1081,plain,(
  ( ! [X64,X62,X63] : (s(bool,'T_0') != s(bool,X63) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X62) != s(bool,X64)) )),
  inference(forward_demodulation,[],[f1080,f403])).
fof(f1080,plain,(
  ( ! [X64,X62,X63] : (p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X62) != s(bool,X64) | s(bool,X63) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(subsumption_resolution,[],[f1001,f361])).
fof(f1001,plain,(
  ( ! [X64,X62,X63] : (~p(s(bool,'T_0')) | p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X62) != s(bool,X64) | s(bool,X63) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(superposition,[],[f286,f403])).
fof(f1075,plain,(
  ( ! [X43,X41,X42] : (s(bool,'T_0') != s(bool,X41) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X42) != s(bool,X43)) )),
  inference(forward_demodulation,[],[f1074,f403])).
fof(f1074,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X42) != s(bool,X43)) )),
  inference(subsumption_resolution,[],[f994,f361])).
fof(f994,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X42) != s(bool,X43)) )),
  inference(superposition,[],[f284,f403])).
fof(f1069,plain,(
  ( ! [X21,X22,X20] : (s(bool,'T_0') != s(bool,X21) | p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X20) != s(bool,X22)) )),
  inference(forward_demodulation,[],[f1068,f403])).
fof(f1068,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X20) != s(bool,X22) | s(bool,X21) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(subsumption_resolution,[],[f987,f361])).
fof(f987,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'T_0')) | p(s(bool,X20)) | p(s(bool,X21)) | s(bool,X20) != s(bool,X22) | s(bool,X21) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(superposition,[],[f282,f403])).
fof(f1063,plain,(
  ( ! [X0,X1] : (sP1(sK3,X0) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) )),
  inference(subsumption_resolution,[],[f980,f361])).
fof(f980,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP1(sK3,X0) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) )),
  inference(superposition,[],[f266,f403])).
fof(f916,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X54)))) ) | $spl74),
  inference(resolution,[],[f566,f355])).
fof(f915,plain,(
  ( ! [X53] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X53)))) ) | $spl74),
  inference(resolution,[],[f566,f353])).
fof(f914,plain,(
  ( ! [X52] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X52)))) ) | $spl74),
  inference(resolution,[],[f566,f351])).
fof(f913,plain,(
  ( ! [X51] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X51)))) ) | $spl74),
  inference(resolution,[],[f566,f349])).
fof(f908,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X45))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46)))) ) | $spl74),
  inference(resolution,[],[f566,f315])).
fof(f907,plain,(
  ( ! [X43,X44] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44)))) ) | $spl74),
  inference(resolution,[],[f566,f313])).
fof(f937,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl94),
  inference(cnf_transformation,[],[f937_D])).
fof(f937_D,plain,(
  ( ! [X2,X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f906,plain,(
  ( ! [X41,X42,X40] : (s(bool,'T_0') = s(bool,X40) | p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X40) != s(bool,X42)) ) | $spl74),
  inference(resolution,[],[f566,f360])).
fof(f899,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') = s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl74),
  inference(resolution,[],[f566,f288])).
fof(f896,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') = s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl74),
  inference(resolution,[],[f566,f287])).
fof(f895,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'T_0') = s(bool,X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl74),
  inference(resolution,[],[f566,f286])).
fof(f894,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'T_0') = s(bool,X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl74),
  inference(resolution,[],[f566,f284])).
fof(f892,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl74),
  inference(resolution,[],[f566,f282])).
fof(f621,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl86),
  inference(cnf_transformation,[],[f621_D])).
fof(f621_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f861,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') = s(bool,X40) | p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X40) != s(bool,X42)) ) | $spl70),
  inference(resolution,[],[f564,f360])).
fof(f854,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl70),
  inference(resolution,[],[f564,f288])).
fof(f851,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl70),
  inference(resolution,[],[f564,f287])).
fof(f850,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') = s(bool,X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl70),
  inference(resolution,[],[f564,f286])).
fof(f849,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') = s(bool,X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl70),
  inference(resolution,[],[f564,f284])).
fof(f847,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl70),
  inference(resolution,[],[f564,f282])).
fof(f817,plain,(
  $false | $spl14),
  inference(resolution,[],[f401,f358])).
fof(f358,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.cmlPtreeConversionProps.E_OK',aHL_TRUTH)).
fof(f822,plain,(
  $false | $spl14),
  inference(resolution,[],[f401,f361])).
fof(f829,plain,(
  $false | $spl14),
  inference(resolution,[],[f401,f249])).
fof(f796,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X2))) ) | $spl12),
  inference(subsumption_resolution,[],[f773,f400])).
fof(f773,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(superposition,[],[f400,f359])).
fof(f795,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X0))) ) | $spl12),
  inference(subsumption_resolution,[],[f772,f400])).
fof(f772,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(superposition,[],[f400,f359])).
fof(f680,plain,(
  $false | $spl16),
  inference(resolution,[],[f402,f357])).
fof(f685,plain,(
  $false | $spl16),
  inference(resolution,[],[f402,f299])).
fof(f653,plain,(
  $false | $spl72),
  inference(subsumption_resolution,[],[f640,f358])).
fof(f640,plain,(
  ~p(s(bool,'T_0')) | $spl72),
  inference(equality_resolution,[],[f565])).
fof(f649,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X1))) ) | $spl72),
  inference(subsumption_resolution,[],[f631,f565])).
fof(f631,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1)) ) | $spl72),
  inference(superposition,[],[f565,f359])).
fof(f590,plain,(
  ( ! [X41,X42,X40] : (s(bool,'F_0') = s(bool,X40) | p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X40) != s(bool,X42)) ) | $spl70),
  inference(resolution,[],[f564,f360])).
fof(f583,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,X28) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl70),
  inference(resolution,[],[f564,f288])).
fof(f580,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'F_0') = s(bool,X16) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl70),
  inference(resolution,[],[f564,f287])).
fof(f579,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') = s(bool,X12) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl70),
  inference(resolution,[],[f564,f286])).
fof(f578,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') = s(bool,X8) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl70),
  inference(resolution,[],[f564,f284])).
fof(f576,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl70),
  inference(resolution,[],[f564,f282])).
fof(f571,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | $spl82),
  inference(cnf_transformation,[],[f571_D])).
fof(f571_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f572,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X3))) ) | $spl84),
  inference(cnf_transformation,[],[f572_D])).
fof(f572_D,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X3))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f550,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X3)) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | $spl10),
  inference(superposition,[],[f399,f359])).
fof(f569,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl78),
  inference(cnf_transformation,[],[f569_D])).
fof(f569_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f549,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl10),
  inference(superposition,[],[f399,f359])).
fof(f566,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | $spl74),
  inference(cnf_transformation,[],[f566_D])).
fof(f566_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f567,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X3))) ) | $spl76),
  inference(cnf_transformation,[],[f567_D])).
fof(f567_D,plain,(
  ( ! [X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X3))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f540,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | p(s(bool,X2)) | ~p(s(bool,X3)) | s(bool,'T_0') = s(bool,X2)) ) | $spl10),
  inference(superposition,[],[f399,f359])).
fof(f564,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl70),
  inference(cnf_transformation,[],[f564_D])).
fof(f564_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f565,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) | $spl72),
  inference(cnf_transformation,[],[f565_D])).
fof(f565_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f539,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,'F_0') = s(bool,X0)) ) | $spl10),
  inference(superposition,[],[f399,f359])).
fof(f506,plain,(
  ( ! [X0] : (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',X0)))) = s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),X0))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(X0,'const.gram.nE_0')) )),
  inference(superposition,[],[f253,f251])).
fof(f493,plain,(
  $false | $spl8),
  inference(equality_resolution,[],[f398])).
fof(f470,plain,(
  $false | ($spl2 | $spl19)),
  inference(subsumption_resolution,[],[f418,f395])).
fof(f463,plain,(
  s('type.list.list'('type.ast.exp'),'const.list.NIL_0') != s('type.list.list'('type.ast.exp'),sK14(sK3)) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | $spl2),
  inference(resolution,[],[f425,f265])).
fof(f462,plain,(
  s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK14(sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) | $spl2),
  inference(resolution,[],[f425,f264])).
fof(f434,plain,(
  ( ! [X9] : (s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),sK13(X9,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f263])).
fof(f433,plain,(
  ( ! [X8] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),sK12(X8,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f262])).
fof(f432,plain,(
  ( ! [X7] : (s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),sK11(X7,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f261])).
fof(f431,plain,(
  ( ! [X6] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK10(X6,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f260])).
fof(f430,plain,(
  ( ! [X5] : (s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),sK9(X5,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f259])).
fof(f429,plain,(
  ( ! [X4] : (s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),sK8(X4,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f258])).
fof(f428,plain,(
  ( ! [X3] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK7(X3,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f257])).
fof(f427,plain,(
  ( ! [X2] : (s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),sK6(X2,sK3)))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f256])).
fof(f426,plain,(
  ( ! [X1] : (s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),sK5(X1,sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0')))))) ) | $spl2),
  inference(resolution,[],[f395,f255])).
fof(f422,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) | $spl23),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f414,plain,(
  ( ! [X0] : (s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',X0))) != s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',sK4('const.gram.nE_0',sK3)))) | s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))) | ~p(s(bool,'const.bool.IN_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s(fun('type.gram.MMLnonT',bool),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) | ~sP1(sK3,'const.gram.nE_0')) )),
  inference(superposition,[],[f252,f253])).
fof(f396,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) | $spl4),
  inference(cnf_transformation,[],[f396_D])).
fof(f396_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f379,plain,(
  ( ! [X28,X29] : (p(s(bool,X28)) | p(s(bool,X29)) | s(bool,X29) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f360])).
fof(f372,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X24) != s(bool,X25)) )),
  inference(resolution,[],[f249,f288])).
fof(f398,plain,(
  ( ! [X7] : (s(bool,X7) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) | $spl8),
  inference(cnf_transformation,[],[f398_D])).
fof(f398_D,plain,(
  ( ! [X7] : (s(bool,X7) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f399,plain,(
  ( ! [X6,X5] : (s(bool,X5) != s(bool,X6) | p(s(bool,X5)) | ~p(s(bool,X6))) ) | $spl10),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  ( ! [X6,X5] : (s(bool,X5) != s(bool,X6) | p(s(bool,X5)) | ~p(s(bool,X6))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f371,plain,(
  ( ! [X21,X22,X20] : (p(s(bool,X20)) | ~p(s(bool,X21)) | s(bool,X20) != s(bool,X21) | s(bool,X22) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f288])).
fof(f369,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X14)) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f287])).
fof(f368,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X11)) | p(s(bool,X12)) | s(bool,X11) != s(bool,X13) | s(bool,X12) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f286])).
fof(f367,plain,(
  ( ! [X10,X8,X9] : (p(s(bool,X8)) | ~p(s(bool,X9)) | s(bool,X8) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) | s(bool,X9) != s(bool,X10)) )),
  inference(resolution,[],[f249,f284])).
fof(f366,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X6) | s(bool,X7) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f284])).
fof(f365,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3)))) )),
  inference(resolution,[],[f249,f282])).
fof(f364,plain,(
  ( ! [X0,X1] : (sP1(sK3,X0) | s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),sK3))) != s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s(fun('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),X1)))) )),
  inference(resolution,[],[f249,f266])).
% SZS output end Proof for thm.cmlPtreeConversionProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 139
% Passive clauses: 1964
% Generated clauses: 5052
% Final active clauses: 109
% Final passive clauses: 1769
% Input formulas: 142
% Initial clauses: 111
% 
% Selected by SInE selection: 39
% SInE iterations: 1
% 
% Duplicate literals: 93
% Trivial inequalities: 76
% Fw subsumption resolutions: 301
% Fw demodulations: 256
% Bw demodulations: 8
% 
% Simple tautologies: 135
% Equational tautologies: 51
% Forward subsumptions: 1875
% 
% Binary resolution: 568
% Forward superposition: 2575
% Backward superposition: 1020
% Self superposition: 23
% Equality resolution: 24
% 
% Split clauses: 297
% Split components: 633
% SAT solver clauses: 327
% SAT solver unit clauses: 14
% SAT solver binary clauses: 128
% 
% Sat splits: 297
% Sat splitting refutations: 22
% 
% Memory used [KB]: 4989
% Time elapsed: 0.163 s
% ------------------------------
% ------------------------------
% Success in time 11.88 s
