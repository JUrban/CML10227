Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_relationProps
% (17107)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 372
% Passive clauses: 2915
% Generated clauses: 14538
% Final active clauses: 365
% Final passive clauses: 2209
% Input formulas: 53
% Initial clauses: 159
% 
% Duplicate literals: 504
% Trivial inequalities: 79
% Fw subsumption resolutions: 1593
% Fw demodulations: 849
% Bw demodulations: 3
% 
% Simple tautologies: 381
% Equational tautologies: 52
% Forward subsumptions: 7482
% 
% Binary resolution: 5924
% Factoring: 28
% Forward superposition: 2263
% Backward superposition: 2846
% Self superposition: 74
% Equality factoring: 62
% Equality resolution: 17
% 
% Split clauses: 569
% Split components: 1151
% SAT solver clauses: 812
% SAT solver unit clauses: 29
% SAT solver binary clauses: 175
% 
% Sat splits: 569
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 807
% TWLsolver calls for satisfiability: 188
% 
% Memory used [KB]: 7675
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_relationProps
% (17139)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 239
% Passive clauses: 2158
% Generated clauses: 9883
% Final active clauses: 229
% Final passive clauses: 1823
% Input formulas: 53
% Initial clauses: 159
% 
% Duplicate literals: 147
% Trivial inequalities: 266
% Fw subsumption resolutions: 467
% Fw demodulations: 925
% Bw demodulations: 102
% Condensations: 198
% Global subsumptions: 22
% 
% Simple tautologies: 186
% Equational tautologies: 24
% Forward subsumptions: 2365
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 801
% Factoring: 7
% Forward superposition: 2396
% Backward superposition: 1897
% Self superposition: 56
% Equality factoring: 30
% Equality resolution: 62
% 
% Split clauses: 68
% Split components: 149
% SAT solver clauses: 3148
% SAT solver unit clauses: 172
% SAT solver binary clauses: 89
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 68
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 3060
% TWLsolver calls for satisfiability: 1174
% 
% Memory used [KB]: 15735
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_relationProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_relationProps
% SZS output start Proof for thm.clos_relationProps
fof(f1370,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f253,f418,f252,f422,f420,f417,f251,f250,f424,f249,f421,f248,f426,f419,f416,f431,f434,f997,f999,f1058,f1059,f1291,f1306,f1361,f1363,f1364,f1365])).
fof(f1365,plain,(
  $false | ($spl0 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f1347,f422])).
fof(f1347,plain,(
  s(sK7,sK9) = s(sK7,sK12) | ($spl0 | $spl4)),
  inference(superposition,[],[f363,f1309])).
fof(f1309,plain,(
  s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),'const.option.NONE_0'),s(sK7,sK12),s(fun(sK8,sK7),sK10))) | ($spl0 | $spl4)),
  inference(backward_demodulation,[],[f419,f416])).
fof(f363,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6,X7] : ! [X18,X19] : s(X7,X18) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),'const.option.NONE_0'),s(X7,X18),s(fun(X6,X7),X19)))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.option.option_case_def|split|0')).
fof(f1364,plain,(
  $false | ($spl0 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f1346,f422])).
fof(f1346,plain,(
  s(sK7,sK9) = s(sK7,sK12) | ($spl0 | $spl4)),
  inference(superposition,[],[f1309,f363])).
fof(f1363,plain,(
  $false | ($spl0 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f1362,f1318])).
fof(f1318,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK12))) | $spl7),
  inference(unit_resulting_resolution,[],[f422,f335])).
fof(f335,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6] : ! [X8,X12] : (s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X12))) <=> s(X6,X8) = s(X6,X12))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.option.SOME_|49||49|')).
fof(f1362,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK12))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1344,f363])).
fof(f1344,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),'const.option.NONE_0'),s(sK7,sK12),s(fun(sK8,sK7),sK10))))) | ($spl0 | $spl4)),
  inference(unit_resulting_resolution,[],[f1309,f336])).
fof(f336,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f217])).
fof(f1361,plain,(
  $false | ($spl0 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f1360,f1318])).
fof(f1360,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK12))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f1345,f363])).
fof(f1345,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),'const.option.NONE_0'),s(sK7,sK12),s(fun(sK8,sK7),sK10))))) | ($spl0 | $spl4)),
  inference(unit_resulting_resolution,[],[f1309,f336])).
fof(f1306,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f1288,f1068])).
fof(f1068,plain,(
  s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK14(sK11,sK8)))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f1063,f418])).
fof(f1063,plain,(
  s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK14(sK11,sK8)))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f327])).
fof(f327,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK14(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK14(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f96])).
fof(f96,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6] : ! [X10] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X10) | ? [X8] : s('type.option.option'(X6),X10) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.option.option_nchotomy')).
fof(f1288,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK14(sK11,sK8)))) | ($spl0 | $spl5)),
  inference(superposition,[],[f416,f1071])).
fof(f1071,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun(sK8,X0),X1),s(sK8,sK14(sK11,sK8)))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(X0,X2),s(fun(sK8,X0),X1)))) ) | $spl5),
  inference(superposition,[],[f365,f1063])).
fof(f365,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))),
  inference(flattening,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,X2))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(X0,X3),s(fun(X1,X0),X4)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X7,X6] : ! [X8,X18,X19] : s(X7,happ(s(fun(X6,X7),X19),s(X6,X8))) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))),s(X7,X18),s(fun(X6,X7),X19)))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.option.option_case_def|split|1')).
fof(f1291,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f1238,f1068])).
fof(f1238,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK14(sK11,sK8)))) | ($spl0 | $spl5)),
  inference(superposition,[],[f1071,f416])).
fof(f1059,plain,(
  $false | ($spl0 | $spl2 | $spl10)),
  inference(subsumption_resolution,[],[f1056,f1044])).
fof(f1044,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))) | ($spl0 | $spl10)),
  inference(forward_demodulation,[],[f1033,f934])).
fof(f934,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun(sK8,X0),X1),s(sK8,sK13))) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(X0,X2),s(fun(sK8,X0),X1)))) ) | $spl10),
  inference(superposition,[],[f365,f426])).
fof(f1033,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) = s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))))) | $spl0),
  inference(unit_resulting_resolution,[],[f416,f336])).
fof(f1056,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))) | ($spl2 | $spl10)),
  inference(unit_resulting_resolution,[],[f1049,f335])).
fof(f1049,plain,(
  s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))) | ($spl2 | $spl10)),
  inference(unit_resulting_resolution,[],[f426,f418])).
fof(f1058,plain,(
  $false | ($spl0 | $spl2 | $spl10)),
  inference(subsumption_resolution,[],[f1057,f1044])).
fof(f1057,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))) | ($spl2 | $spl10)),
  inference(unit_resulting_resolution,[],[f1049,f335])).
fof(f999,plain,(
  $false | ($spl1 | $spl8 | $spl10)),
  inference(trivial_inequality_removal,[],[f998])).
fof(f998,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f995,f424])).
fof(f995,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))) | ($spl1 | $spl10)),
  inference(backward_demodulation,[],[f934,f766])).
fof(f766,plain,(
  s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))) != s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))))) | $spl1),
  inference(unit_resulting_resolution,[],[f417,f335])).
fof(f997,plain,(
  $false | ($spl1 | $spl8 | $spl10)),
  inference(trivial_inequality_removal,[],[f996])).
fof(f996,plain,(
  s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))))) != s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))))) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f994,f424])).
fof(f994,plain,(
  s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))))) != s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))))) | ($spl1 | $spl10)),
  inference(backward_demodulation,[],[f934,f818])).
fof(f818,plain,(
  s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,sK9))))) != s('type.option.option'('type.option.option'(sK7)),'const.option.SOME_1'(s('type.option.option'(sK7),'const.option.SOME_1'(s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f766,f335])).
fof(f434,plain,(
  $false | ($spl4 | $spl10)),
  inference(subsumption_resolution,[],[f433,f332])).
fof(f332,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6] : ! [X8] : ~s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8)))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.option.NOT_NONE_SOME')).
fof(f433,plain,(
  s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) | ($spl4 | $spl10)),
  inference(forward_demodulation,[],[f426,f419])).
fof(f431,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f430,f363])).
fof(f430,plain,(
  s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),'const.option.NONE_0'),s(sK7,sK9),s(fun(sK8,sK7),sK10))) | ($spl1 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f429,f419])).
fof(f429,plain,(
  s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK9),s(fun(sK8,sK7),sK10))) | ($spl1 | $spl6)),
  inference(forward_demodulation,[],[f417,f421])).
fof(f416,plain,(
  s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) | $spl0),
  inference(cnf_transformation,[],[f416_D])).
fof(f416_D,plain,(
  s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f419,plain,(
  s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),sK11) | $spl4),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),sK11) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f426,plain,(
  s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) | $spl10),
  inference(cnf_transformation,[],[f426_D])).
fof(f426_D,plain,(
  s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f248,plain,(
  s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) | s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),sK11) | s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  (s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) | (s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),sK11) & s(sK7,sK9) = s(sK7,sK12)) | (s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) & s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))))) & (s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) | ((s('type.option.option'(sK8),'const.option.NONE_0') != s('type.option.option'(sK8),sK11) | s(sK7,sK9) != s(sK7,sK12)) & ! [X6] : (s('type.option.option'(sK8),sK11) != s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,X6))) | s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,X6))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8,sK9,sK10,sK11,sK12,sK13])],[f172])).
fof(f172,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X7] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X7))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X7))))) & (s(X0,X2) != s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | ((s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) | s(X0,X2) != s(X0,X5)) & ! [X6] : (s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | s(X0,X2) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X6)))))))),
  inference(rectify,[],[f171])).
fof(f171,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X6] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))) & (s(X0,X2) != s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | ((s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) | s(X0,X2) != s(X0,X5)) & ! [X6] : (s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | s(X0,X2) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X6)))))))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | ((s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X6] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6)))))) & (s(X0,X2) != s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) | ((s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),X4) | s(X0,X2) != s(X0,X5)) & ! [X6] : (s('type.option.option'(X1),X4) != s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) | s(X0,X2) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X6)))))))),
  inference(nnf_transformation,[],[f132])).
fof(f132,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) <~> ((s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X6] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) <=> ((s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X6] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5] : (s(X0,X2) = s(X0,'const.option.option_CASE_3'(s('type.option.option'(X1),X4),s(X0,X5),s(fun(X1,X0),X3))) <=> ((s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),X4) & s(X0,X2) = s(X0,X5)) | ? [X6] : (s('type.option.option'(X1),X4) = s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X6))) & s(X0,X2) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11] : (s(X6,X8) = s(X6,'const.option.option_CASE_3'(s('type.option.option'(X7),X10),s(X6,X11),s(fun(X7,X6),X9))) <=> ((s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X10) & s(X6,X8) = s(X6,X11)) | ? [X12] : (s('type.option.option'(X7),X10) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X12))) & s(X6,X8) = s(X6,happ(s(fun(X7,X6),X9),s(X7,X12))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11] : (s(X6,X8) = s(X6,'const.option.option_CASE_3'(s('type.option.option'(X7),X10),s(X6,X11),s(fun(X7,X6),X9))) <=> ((s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X10) & s(X6,X8) = s(X6,X11)) | ? [X12] : (s('type.option.option'(X7),X10) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X12))) & s(X6,X8) = s(X6,happ(s(fun(X7,X6),X9),s(X7,X12))))))),
  file('thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb','thm.clos_relationProps.clos_relationProps_|49|2_prove_ltb')).
fof(f421,plain,(
  s(sK7,sK9) = s(sK7,sK12) | $spl6),
  inference(cnf_transformation,[],[f421_D])).
fof(f421_D,plain,(
  s(sK7,sK9) = s(sK7,sK12) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f249,plain,(
  s('type.option.option'(sK8),sK11) = s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,sK13))) | s(sK7,sK9) = s(sK7,sK12) | s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))),
  inference(cnf_transformation,[],[f173])).
fof(f424,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))) | $spl8),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f250,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))) | s('type.option.option'(sK8),'const.option.NONE_0') = s('type.option.option'(sK8),sK11) | s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))),
  inference(cnf_transformation,[],[f173])).
fof(f251,plain,(
  s(sK7,sK9) = s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,sK13))) | s(sK7,sK9) = s(sK7,sK12) | s(sK7,sK9) = s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))),
  inference(cnf_transformation,[],[f173])).
fof(f417,plain,(
  s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) | $spl1),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f420,plain,(
  s('type.option.option'(sK8),'const.option.NONE_0') != s('type.option.option'(sK8),sK11) | $spl5),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  s('type.option.option'(sK8),'const.option.NONE_0') != s('type.option.option'(sK8),sK11) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f422,plain,(
  s(sK7,sK9) != s(sK7,sK12) | $spl7),
  inference(cnf_transformation,[],[f422_D])).
fof(f422_D,plain,(
  s(sK7,sK9) != s(sK7,sK12) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f252,plain,(
  s(sK7,sK9) != s(sK7,sK12) | s('type.option.option'(sK8),'const.option.NONE_0') != s('type.option.option'(sK8),sK11) | s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))),
  inference(cnf_transformation,[],[f173])).
fof(f418,plain,(
  ( ! [X6] : (s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,X6))) | s('type.option.option'(sK8),sK11) != s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,X6)))) ) | $spl2),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ( ! [X6] : (s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,X6))) | s('type.option.option'(sK8),sK11) != s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,X6)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f253,plain,(
  ( ! [X6] : (s(sK7,sK9) != s(sK7,happ(s(fun(sK8,sK7),sK10),s(sK8,X6))) | s('type.option.option'(sK8),sK11) != s('type.option.option'(sK8),'const.option.SOME_1'(s(sK8,X6))) | s(sK7,sK9) != s(sK7,'const.option.option_CASE_3'(s('type.option.option'(sK8),sK11),s(sK7,sK12),s(fun(sK8,sK7),sK10)))) )),
  inference(cnf_transformation,[],[f173])).
% SZS output end Proof for thm.clos_relationProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 133
% Passive clauses: 317
% Generated clauses: 1128
% Final active clauses: 106
% Final passive clauses: 119
% Input formulas: 53
% Initial clauses: 159
% 
% Duplicate literals: 5
% Trivial inequalities: 6
% Fw subsumption resolutions: 16
% Fw demodulations: 139
% Bw demodulations: 11
% Condensations: 5
% 
% Simple tautologies: 60
% Equational tautologies: 21
% Forward subsumptions: 519
% Fw demodulations to eq. taut.: 22
% 
% Unit resulting resolution: 298
% Factoring: 1
% Forward superposition: 162
% Backward superposition: 286
% Self superposition: 12
% Equality factoring: 2
% Equality resolution: 5
% 
% Split clauses: 6
% Split components: 17
% SAT solver clauses: 343
% SAT solver unit clauses: 74
% SAT solver binary clauses: 103
% 
% Sat splits: 6
% Sat splitting refutations: 12
% 
% Memory used [KB]: 2302
% Time elapsed: 0.050 s
% ------------------------------
% ------------------------------
% Success in time 1.38 s
