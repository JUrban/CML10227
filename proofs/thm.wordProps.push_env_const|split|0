Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f1998,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1995])).
fof(f1995,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),sK3))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),sK3)))),
  inference(superposition,[],[f68,f89])).
fof(f89,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X5),s('type.wordSem.state'(X1,X2),X3)))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X5),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X4),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X5),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8] : ! [X12,X13,X14] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),X12))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X13),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X14),s('type.wordSem.state'(X7,X8),X12)))))),
  file('thm.wordProps.push_env_const|split|0','thm.wordSem.wordSem_4|49||49|_prove_ltb')).
fof(f68,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),sK3))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK0),'type.pair.prod'('type.num.num','type.num.num')))),sK4),s('type.wordSem.state'(sK1,sK2),sK3)))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),sK3))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(sK1,sK2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(sK1)),sK5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(sK0),'type.pair.prod'('type.num.num','type.num.num')))),sK4),s('type.wordSem.state'(sK1,sK2),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) != s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),X3))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X1,X2),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X1)),X5),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X0),'type.pair.prod'('type.num.num','type.num.num')))),X4),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),X9))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X10),s('type.wordSem.state'(X7,X8),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),X9))) = s('type.num.num','const.wordSem.state_clock_1'(s('type.wordSem.state'(X7,X8),'const.wordSem.push_env_3'(s('type.sptree.spt'('type.wordSem.word_loc'(X7)),X11),s('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.wordLang.prog'(X6),'type.pair.prod'('type.num.num','type.num.num')))),X10),s('type.wordSem.state'(X7,X8),X9)))))),
  file('thm.wordProps.push_env_const|split|0','thm.wordProps.push_env_const|split|0')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 48
% Passive clauses: 288
% Generated clauses: 1872
% Final active clauses: 37
% Final passive clauses: 216
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 96
% Trivial inequalities: 73
% Fw subsumption resolutions: 161
% Fw demodulations: 251
% Bw demodulations: 4
% 
% Simple tautologies: 76
% Equational tautologies: 16
% Forward subsumptions: 888
% 
% Binary resolution: 18
% Forward superposition: 472
% Backward superposition: 657
% Self superposition: 56
% Equality factoring: 29
% Equality resolution: 9
% 
% Split clauses: 19
% Split components: 39
% SAT solver clauses: 38
% SAT solver unit clauses: 6
% SAT solver binary clauses: 12
% 
% Sat splits: 19
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 38
% TWLsolver calls for satisfiability: 15
% 
% Memory used [KB]: 1535
% Time elapsed: 0.045 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
