Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ml_translator
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ml_translator
% SZS output start Proof for thm.ml_translator
fof(f14229,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f14198,f10836,f83,f131,f10884,f81,f132,f7308,f82,f133,f135,f129,f84,f141,f86,f137,f80,f130,f134,f128])).
fof(f128,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | $spl0),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f134,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | $spl6),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f130,plain,(
  p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | $spl2),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f80,plain,(
  p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | ((p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))))) & (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | (~p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) & ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f56])).
fof(f56,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) | ((p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4)))))))))))) & (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) | (~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) & ~p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4))))))))))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) | ((p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4)))))))))))) & (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) | ((~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) & ~p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4)))))))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) <~> ((p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) => p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4))))))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X4)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X1,X3),s(fun(X1,bool),X4)))) => p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X3),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X3),s(fun(X1,bool),X4))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X7,X6),X11),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X9),s(X6,X8))))),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),X10)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X7,X9),s(fun(X7,bool),X10)))) => p(s(bool,happ(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X9),s(X6,X8))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),X11),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),'const.pred_set.INSERT_2'(s(X7,X9),s(fun(X7,bool),X10))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X7,X6),X11),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X9),s(X6,X8))))),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),X10)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X7,X9),s(fun(X7,bool),X10)))) => p(s(bool,happ(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X9),s(X6,X8))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),X11),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),'const.pred_set.INSERT_2'(s(X7,X9),s(fun(X7,bool),X10))))))))))))),
  file('thm.ml_translator.FEVERY_DRESTRICT_FUPDATE','thm.ml_translator.FEVERY_DRESTRICT_FUPDATE')).
fof(f137,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f86,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.ml_translator.FEVERY_DRESTRICT_FUPDATE',aHL_FALSITY)).
fof(f141,plain,(
  p(s(bool,'T_0')) | $spl14),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f84,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.ml_translator.FEVERY_DRESTRICT_FUPDATE',aHL_TRUTH)).
fof(f129,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | $spl1),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f135,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | $spl7),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f133,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | $spl5),
  inference(cnf_transformation,[],[f133_D])).
fof(f133_D,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f82,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))),
  inference(cnf_transformation,[],[f57])).
fof(f7308,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl9 | $spl14)),
  inference(resolution,[],[f3829,f129])).
fof(f3829,plain,(
  ( ! [X0] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,X0))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))) ) | ($spl4 | $spl6 | $spl9 | $spl14)),
  inference(subsumption_resolution,[],[f3828,f141])).
fof(f3828,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,X0))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))) ) | ($spl4 | $spl6 | $spl9)),
  inference(forward_demodulation,[],[f3751,f151])).
fof(f151,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4))) | ($spl6 | $spl9)),
  inference(subsumption_resolution,[],[f148,f137])).
fof(f148,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4))) | $spl6),
  inference(superposition,[],[f134,f88])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.ml_translator.FEVERY_DRESTRICT_FUPDATE',aHL_BOOL_CASES)).
fof(f3751,plain,(
  ( ! [X0] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,X0))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | ~p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4))))) ) | $spl4),
  inference(resolution,[],[f125,f132])).
fof(f125,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3)))))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | ~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | ((p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3)))))))))))) & ((~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) & ~p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3)))))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3))))))))))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | ((p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3)))))))))))) & (((~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) & ~p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3))))))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3))))))))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) <=> ((p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3))))))))))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) => p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3))))))))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) => p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X13,X10,X14,X11,X12] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X7,X6),X11),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X14),s(X6,X13))))),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),X10)))))))) <=> ((~p(s(bool,'const.bool.IN_2'(s(X7,X14),s(fun(X7,bool),X10)))) => p(s(bool,happ(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.pair.prod'(X7,X6),'const.pair.,_2'(s(X7,X14),s(X6,X13))))))) & p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X7,X6),bool),X12),s('type.finite_map.fmap'(X7,X6),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X7,X6),X11),s(fun(X7,bool),'const.pred_set.COMPL_1'(s(fun(X7,bool),'const.pred_set.INSERT_2'(s(X7,X14),s(fun(X7,bool),X10))))))))))))),
  file('thm.ml_translator.FEVERY_DRESTRICT_FUPDATE','thm.finite_map.FEVERY_DRESTRICT_COMPL')).
fof(f132,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | $spl4),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f81,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))),
  inference(cnf_transformation,[],[f57])).
fof(f10884,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f10835,f133])).
fof(f10835,plain,(
  p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | $spl0),
  inference(resolution,[],[f128,f124])).
fof(f124,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3))))))))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f131,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | $spl3),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f83,plain,(
  ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),'const.pred_set.INSERT_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | ~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4))))))))),
  inference(cnf_transformation,[],[f57])).
fof(f10836,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK1,sK3),s(fun(sK1,bool),sK4)))) | p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | $spl0),
  inference(resolution,[],[f128,f123])).
fof(f123,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | p(s(bool,'const.bool.IN_2'(s(X1,X4),s(fun(X1,bool),X3)))) | p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f14198,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f14147,f130])).
fof(f14147,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,sK2)))))) | ($spl1 | $spl4)),
  inference(resolution,[],[f12569,f129])).
fof(f12569,plain,(
  ( ! [X0] : (p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(sK1,sK0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(sK1,sK0),sK5),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,X0))))),s(fun(sK1,bool),'const.pred_set.COMPL_1'(s(fun(sK1,bool),sK4)))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'(sK1,sK0),bool),sK6),s('type.pair.prod'(sK1,sK0),'const.pair.,_2'(s(sK1,sK3),s(sK0,X0))))))) ) | $spl4),
  inference(resolution,[],[f132,f126])).
fof(f126,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),X5),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),'const.pred_set.INSERT_2'(s(X1,X4),s(fun(X1,bool),X3)))))))))) | p(s(bool,'const.finite_map.FEVERY_2'(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.finite_map.fmap'(X1,X0),'const.finite_map.DRESTRICT_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'(X1,X0),X5),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))),s(fun(X1,bool),'const.pred_set.COMPL_1'(s(fun(X1,bool),X3)))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'(X1,X0),bool),X6),s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X4),s(X0,X2))))))) )),
  inference(cnf_transformation,[],[f79])).
% SZS output end Proof for thm.ml_translator
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 75
% Passive clauses: 2104
% Generated clauses: 13805
% Final active clauses: 59
% Final passive clauses: 1828
% Input formulas: 21
% Initial clauses: 47
% 
% Duplicate literals: 911
% Trivial inequalities: 189
% Fw subsumption resolutions: 2019
% Fw demodulations: 689
% Bw demodulations: 4
% 
% Simple tautologies: 303
% Equational tautologies: 97
% Forward subsumptions: 5500
% 
% Binary resolution: 104
% Forward superposition: 5554
% Backward superposition: 3492
% Self superposition: 331
% Equality factoring: 274
% Equality resolution: 12
% 
% Split clauses: 756
% Split components: 1534
% SAT solver clauses: 2080
% SAT solver unit clauses: 238
% SAT solver binary clauses: 506
% SAT solver learnt clauses: 5
% SAT solver learnt literals: 5
% 
% Sat splits: 756
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 2048
% TWLsolver calls for satisfiability: 89
% 
% Memory used [KB]: 6396
% Time elapsed: 0.568 s
% ------------------------------
% ------------------------------
% Success in time 0.57 s
