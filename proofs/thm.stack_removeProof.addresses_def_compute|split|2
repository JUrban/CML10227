Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stack_removeProof
% (20728)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1126
% Passive clauses: 9203
% Generated clauses: 48958
% Final active clauses: 989
% Final passive clauses: 7531
% Input formulas: 259
% Initial clauses: 522
% 
% Duplicate literals: 240
% Trivial inequalities: 202
% Fw subsumption resolutions: 2021
% Fw demodulations: 5911
% Bw demodulations: 123
% 
% Simple tautologies: 290
% Equational tautologies: 29
% Forward subsumptions: 30257
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 6877
% Factoring: 1088
% Forward superposition: 14552
% Backward superposition: 17030
% Self superposition: 64
% Equality factoring: 2
% Equality resolution: 23
% 
% Split clauses: 644
% Split components: 1290
% SAT solver clauses: 886
% SAT solver unit clauses: 33
% SAT solver binary clauses: 82
% 
% Sat splits: 644
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 883
% TWLsolver calls for satisfiability: 482
% 
% Memory used [KB]: 29040
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stack_removeProof
% (20749)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 566
% Passive clauses: 3704
% Generated clauses: 28728
% Final active clauses: 522
% Final passive clauses: 2731
% Input formulas: 259
% Initial clauses: 522
% 
% Duplicate literals: 102
% Trivial inequalities: 71
% Fw subsumption resolutions: 1023
% Fw demodulations: 4592
% Bw demodulations: 399
% Condensations: 124
% Global subsumptions: 25
% 
% Simple tautologies: 291
% Equational tautologies: 14
% Forward subsumptions: 14119
% Fw demodulations to eq. taut.: 14
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2832
% Factoring: 307
% Forward superposition: 9408
% Backward superposition: 5050
% Self superposition: 64
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 4804
% SAT solver unit clauses: 654
% SAT solver binary clauses: 196
% SAT solver learnt clauses: 54
% SAT solver learnt literals: 18
% 
% Sat splits: 17
% Sat splitting refutations: 58
% 
% TWLsolver clauses: 4700
% TWLsolver calls for satisfiability: 3111
% 
% Memory used [KB]: 23922
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.stack_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_removeProof
% SZS output start Proof for thm.stack_removeProof
fof(f44077,plain,(
  $false),
  inference(subsumption_resolution,[],[f44076,f32699])).
fof(f32699,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f32698,f1391])).
fof(f1391,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f571])).
fof(f571,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f570])).
fof(f570,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f161])).
fof(f161,axiom,(
  ! [X41,X45,X43] : ! [X46,X47,X49] : s(X41,happ(s(fun(X43,X41),happ(s(fun(X45,fun(X43,X41)),X46),s(X45,X49))),s(X43,X47))) = s(X41,happ(s(fun(X45,X41),'_dst_x1x0_2'(s(fun(X45,fun(X43,X41)),X46),s(X43,X47))),s(X45,X49)))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','_dst_x1x0_ax')).
fof(f32698,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f32697,f1034])).
fof(f1034,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f355])).
fof(f355,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(flattening,[],[f354])).
fof(f354,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(rectify,[],[f253])).
fof(f253,axiom,(
  ! [X6] : ! [X28] : s(X6,X28) = s(X6,'const.combin.I_1'(s(X6,X28)))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','thm.combin.I_THM')).
fof(f32697,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,'const.combin.I_1'(s(X0,X1))))))) )),
  inference(forward_demodulation,[],[f32331,f1391])).
fof(f32331,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,'const.combin.I_1'(s(X0,X1))))),s(X0,X1))))) )),
  inference(unit_resulting_resolution,[],[f1034,f1297])).
fof(f1297,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f852])).
fof(f852,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f548])).
fof(f548,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X58,X51,X52] : (p(s(bool,happ(s(fun(X58,bool),happ(s(fun(X58,fun(X58,bool)),'=_0'),s(X58,X51))),s(X58,X52)))) <=> s(X58,X51) = s(X58,X52))),
  file('thm.stack_removeProof.addresses_def_compute|split|2',arity_0_HL_EQ)).
fof(f44076,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))))),
  inference(forward_demodulation,[],[f44075,f1391])).
fof(f44075,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),'_dst_x1x0_2'(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))))),
  inference(forward_demodulation,[],[f44074,f935])).
fof(f935,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f170])).
fof(f170,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','thm.numeral.numeral_suc|split|1')).
fof(f44074,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),'_dst_x1x0_2'(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16))))))))))))),
  inference(forward_demodulation,[],[f44073,f947])).
fof(f947,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f304])).
fof(f304,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f156])).
fof(f156,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','thm.numeral.numeral_distrib|split|14')).
fof(f44073,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),'_dst_x1x0_2'(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16))))))))))))),
  inference(forward_demodulation,[],[f44072,f1053])).
fof(f1053,plain,(
  ( ! [X2,X0,X1] : (s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f383])).
fof(f383,plain,(
  ! [X0,X1,X2] : s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num',X2)))))),
  inference(flattening,[],[f382])).
fof(f382,plain,(
  ! [X0] : ! [X1,X2] : s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num',X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X7,X8] : s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s(fun('type.fcp.cart'(bool,X6),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X6),X7),s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),'const.words.word_add_2'(s('type.fcp.cart'(bool,X6),X7),s('type.fcp.cart'(bool,X6),'const.misc.bytes_in_word_0'))),s('type.num.num',X8)))))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','thm.stack_removeProof.addresses_def|split|1')).
fof(f44072,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),'_dst_x1x0_2'(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,sK14),sK15),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),'const.words.word_add_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.fcp.cart'(bool,sK14),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16))))))))))))),
  inference(forward_demodulation,[],[f44071,f1391])).
fof(f44071,plain,(
  ~p(s(bool,happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),bool),happ(s(fun(fun('type.fcp.cart'(bool,sK14),bool),fun(fun('type.fcp.cart'(bool,sK14),bool),bool)),'=_0'),s(fun('type.fcp.cart'(bool,sK14),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,sK14),sK15),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),'const.words.word_add_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.fcp.cart'(bool,sK14),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16))))))))))),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))))))),
  inference(unit_resulting_resolution,[],[f895,f1296])).
fof(f1296,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f852])).
fof(f895,plain,(
  s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))) != s(fun('type.fcp.cart'(bool,sK14),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,sK14),sK15),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),'const.words.word_add_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.fcp.cart'(bool,sK14),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16)))))))))),
  inference(cnf_transformation,[],[f694])).
fof(f694,plain,(
  s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK16))))))) != s(fun('type.fcp.cart'(bool,sK14),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,sK14),sK15),s(fun('type.fcp.cart'(bool,sK14),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,sK14),'const.words.word_add_2'(s('type.fcp.cart'(bool,sK14),sK15),s('type.fcp.cart'(bool,sK14),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK16)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16])],[f607])).
fof(f607,plain,(
  ? [X0,X1,X2] : s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))))) != s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))))),
  inference(ennf_transformation,[],[f262])).
fof(f262,plain,(
  ~! [X0,X1,X2] : s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))))),
  inference(flattening,[],[f261])).
fof(f261,plain,(
  ~! [X0] : ! [X1,X2] : s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))))) = s(fun('type.fcp.cart'(bool,X0),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X0),X1),s(fun('type.fcp.cart'(bool,X0),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X0),'const.words.word_add_2'(s('type.fcp.cart'(bool,X0),X1),s('type.fcp.cart'(bool,X0),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))))) = s(fun('type.fcp.cart'(bool,X6),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X6),X7),s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),'const.words.word_add_2'(s('type.fcp.cart'(bool,X6),X7),s('type.fcp.cart'(bool,X6),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))))) = s(fun('type.fcp.cart'(bool,X6),bool),'const.pred_set.INSERT_2'(s('type.fcp.cart'(bool,X6),X7),s(fun('type.fcp.cart'(bool,X6),bool),'const.stack_removeProof.addresses_2'(s('type.fcp.cart'(bool,X6),'const.words.word_add_2'(s('type.fcp.cart'(bool,X6),X7),s('type.fcp.cart'(bool,X6),'const.misc.bytes_in_word_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))))))),
  file('thm.stack_removeProof.addresses_def_compute|split|2','thm.stack_removeProof.addresses_def_compute|split|2')).
% SZS output end Proof for thm.stack_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 692
% Passive clauses: 4676
% Generated clauses: 43297
% Final active clauses: 671
% Final passive clauses: 3306
% Input formulas: 259
% Initial clauses: 522
% 
% Duplicate literals: 8
% Trivial inequalities: 45
% Fw subsumption resolutions: 821
% Fw demodulations: 10138
% Bw demodulations: 302
% Condensations: 28
% Global subsumptions: 3
% 
% Simple tautologies: 171
% Equational tautologies: 49
% Forward subsumptions: 26278
% Fw demodulations to eq. taut.: 350
% Bw demodulations to eq. taut.: 37
% 
% Unit resulting resolution: 8252
% Factoring: 2
% Forward superposition: 14458
% Backward superposition: 8477
% Self superposition: 88
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 5410
% SAT solver unit clauses: 2224
% SAT solver binary clauses: 2471
% 
% Sat splits: 7
% Sat splitting refutations: 715
% 
% Memory used [KB]: 29423
% Time elapsed: 1.225 s
% ------------------------------
% ------------------------------
% Success in time 2.57 s
