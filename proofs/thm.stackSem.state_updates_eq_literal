Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f3860,plain,(
  $false),
  inference(subsumption_resolution,[],[f19,f24])).
fof(f24,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X4)))))))))))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X4)))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f13])).
fof(f13,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X17))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X3))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X14))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X15))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X4)))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8] : ! [X22,X9,X13,X21,X12,X16,X10,X11,X14,X15,X17,X23,X24,X18,X19,X20,X25] : s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),X9)))))))))))))))))))))))))))))))))),
  file('thm.stackSem.state_updates_eq_literal','thm.stackSem.stackSem_477_prove_ltb')).
fof(f19,plain,(
  s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),sK4))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(sK1)),'type.list.list'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(sK1)),sK6))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK9))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,sK1)),'type.list.list'('type.fcp.cart'(bool,sK1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,sK1)),sK10))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK11))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK12))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK13))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK14))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK15))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(sK1)),sK16))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK17))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),sK18))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK19))),s('type.stackSem.state'(sK1,sK2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) != s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),sK4))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(sK1)),'type.list.list'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(sK1)),sK6))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK9))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,sK1)),'type.list.list'('type.fcp.cart'(bool,sK1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,sK1)),sK10))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK11))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK12))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK13))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK14))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK15))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(sK1)),sK16))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK17))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),sK18))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK19))),s('type.stackSem.state'(sK1,sK2),sK3)))))))))))))))))))))))))))))))))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),sK4))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(sK1)),'type.list.list'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(sK1)),sK6))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK9))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,sK1)),'type.list.list'('type.fcp.cart'(bool,sK1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,sK1)),sK10))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK11))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK12))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK13))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK14))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK15))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(sK1)),sK16))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK17))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),sK18))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK19))),s('type.stackSem.state'(sK1,sK2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) != s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(sK1)),sK4))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)),sK5))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(sK1)),'type.list.list'('type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(sK1)),sK6))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),sK8))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,sK1),bool),fun('type.fcp.cart'(bool,sK1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,sK1),bool),sK9))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,sK1)),'type.list.list'('type.fcp.cart'(bool,sK1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,sK1)),sK10))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(sK1)),'type.pair.prod'(fun('type.fcp.cart'(bool,sK1),'type.wordSem.word_loc'(sK1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(sK1)))))),sK11))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK12))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK13))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK14))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK15))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(sK1)),'type.sptree.spt'('type.stackLang.prog'(sK1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(sK1)),sK16))),s('type.stackSem.state'(sK1,sK0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK2),'type.ffi.ffi_state'(sK0)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK0),sK17))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),sK18))),s('type.stackSem.state'(sK1,sK2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,sK19))),s('type.stackSem.state'(sK1,sK2),sK3)))))))))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19])],[f15])).
fof(f15,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) != s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X3)))))))))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X3)))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f8])).
fof(f8,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X1,X0),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X1)),X4))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)),X5))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X1)),'type.list.list'('type.wordSem.word_loc'(X1))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X1)),X6))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X7))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),X8))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X1),bool),fun('type.fcp.cart'(bool,X1),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X1),bool),X9))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X1)),'type.list.list'('type.fcp.cart'(bool,X1))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X1)),X10))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X1)),'type.pair.prod'(fun('type.fcp.cart'(bool,X1),'type.wordSem.word_loc'(X1)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X1)))))),X11))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X12))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X13))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X14))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X15))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X1)),'type.sptree.spt'('type.stackLang.prog'(X1))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X1)),X16))),s('type.stackSem.state'(X1,X0),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X2),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),X17))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X18))),s('type.stackSem.state'(X1,X2),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X1,X2),X3)))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),X9)))))))))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),'const.bool.ARB_0'))))))))))))))))))))))))))))))))) = s('type.stackSem.state'(X7,X6),'const.stackSem.state_regs_fupd_2'(s(fun('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.num.num','type.wordSem.word_loc'(X7)),X10))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_store_fupd_2'(s(fun('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),X11))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_fupd_2'(s(fun('type.list.list'('type.wordSem.word_loc'(X7)),'type.list.list'('type.wordSem.word_loc'(X7))),'const.combin.K_1'(s('type.list.list'('type.wordSem.word_loc'(X7)),X12))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_stack_space_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X13))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_memory_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7))),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),X14))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_mdomain_fupd_2'(s(fun(fun('type.fcp.cart'(bool,X7),bool),fun('type.fcp.cart'(bool,X7),bool)),'const.combin.K_1'(s(fun('type.fcp.cart'(bool,X7),bool),X15))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_bitmaps_fupd_2'(s(fun('type.list.list'('type.fcp.cart'(bool,X7)),'type.list.list'('type.fcp.cart'(bool,X7))),'const.combin.K_1'(s('type.list.list'('type.fcp.cart'(bool,X7)),X16))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_gc_fun_fupd_2'(s(fun(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))))),'const.combin.K_1'(s(fun('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),bool),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7))))),'type.option.option'('type.pair.prod'('type.list.list'('type.wordSem.word_loc'(X7)),'type.pair.prod'(fun('type.fcp.cart'(bool,X7),'type.wordSem.word_loc'(X7)),'type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)))))),X17))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_stack_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X18))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_store_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X19))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_use_alloc_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X20))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X21))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_code_fupd_2'(s(fun('type.sptree.spt'('type.stackLang.prog'(X7)),'type.sptree.spt'('type.stackLang.prog'(X7))),'const.combin.K_1'(s('type.sptree.spt'('type.stackLang.prog'(X7)),X22))),s('type.stackSem.state'(X7,X6),'const.stackSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X8),'type.ffi.ffi_state'(X6)),'const.combin.K_1'(s('type.ffi.ffi_state'(X6),X23))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_ffi_save_regs_fupd_2'(s(fun(fun('type.num.num',bool),fun('type.num.num',bool)),'const.combin.K_1'(s(fun('type.num.num',bool),X24))),s('type.stackSem.state'(X7,X8),'const.stackSem.state_be_fupd_2'(s(fun(bool,bool),'const.combin.K_1'(s(bool,X25))),s('type.stackSem.state'(X7,X8),X9)))))))))))))))))))))))))))))))))),
  file('thm.stackSem.state_updates_eq_literal','thm.stackSem.state_updates_eq_literal')).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 36
% Passive clauses: 397
% Generated clauses: 3721
% Final active clauses: 30
% Final passive clauses: 345
% Input formulas: 6
% Initial clauses: 6
% 
% Duplicate literals: 460
% Trivial inequalities: 44
% Fw subsumption resolutions: 251
% Fw demodulations: 38
% Bw demodulations: 2
% 
% Simple tautologies: 110
% Equational tautologies: 71
% Forward subsumptions: 1772
% 
% Binary resolution: 11
% Forward superposition: 1386
% Backward superposition: 1026
% Self superposition: 199
% Equality factoring: 186
% 
% Split clauses: 367
% Split components: 735
% SAT solver clauses: 577
% SAT solver unit clauses: 60
% SAT solver binary clauses: 207
% 
% Sat splits: 367
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 577
% TWLsolver calls for satisfiability: 30
% 
% Memory used [KB]: 5884
% Time elapsed: 0.290 s
% ------------------------------
% ------------------------------
% Success in time 0.3 s
