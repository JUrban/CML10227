Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stack_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_removeProof
% SZS output start Proof for thm.stack_removeProof
fof(f920,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f910,f87,f134,f131,f138,f159,f178,f180,f179,f202,f145,f149,f147])).
fof(f147,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f149,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f145,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f88])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND',aHL_BOOL_CASES)).
fof(f202,plain,(
  $false | ($spl11 | $spl12)),
  inference(trivial_inequality_removal,[],[f199])).
fof(f199,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl11 | $spl12)),
  inference(superposition,[],[f149,f179])).
fof(f179,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f180,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f178,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(subsumption_resolution,[],[f174,f141])).
fof(f141,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f134,f88])).
fof(f174,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f126,f88])).
fof(f126,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X17,X18] : ((p(s(bool,X17)) => p(s(bool,X18))) => ((p(s(bool,X18)) => p(s(bool,X17))) => s(bool,X17) = s(bool,X18)))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND','thm.bool.IMP_ANTISYM_AX')).
fof(f159,plain,(
  $false | ($spl1 | $spl8)),
  inference(subsumption_resolution,[],[f150,f134])).
fof(f150,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f147,f83])).
fof(f83,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))))),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) & ! [X3,X4] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4))) | s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & ! [X3,X4] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X9,X10] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) & s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X9,X10] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10))) & s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND','thm.stack_removeProof.LESS_LENGTH_IMP_APPEND')).
fof(f138,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f131,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f120])).
fof(f120,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X16] : (s(X6,X16) = s(X6,X16) <=> p(s(bool,'T_0')))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND','thm.bool.REFL_CLAUSE')).
fof(f134,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f87,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND',aHL_FALSITY)).
fof(f910,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | ($spl1 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f909,f444])).
fof(f444,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),X0)))) ) | ($spl1 | $spl6)),
  inference(trivial_inequality_removal,[],[f441])).
fof(f441,plain,(
  ( ! [X0] : (s('type.num.num',sK2) != s('type.num.num',sK2) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),X0)))) ) | ($spl1 | $spl6)),
  inference(superposition,[],[f84,f438])).
fof(f438,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f432,f138])).
fof(f432,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) | $spl1),
  inference(superposition,[],[f123,f146])).
fof(f146,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl1),
  inference(subsumption_resolution,[],[f143,f134])).
fof(f143,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))),
  inference(superposition,[],[f83,f88])).
fof(f123,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0)))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X12,X13,X14] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X14))))) & s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X12)))))),
  file('thm.stack_removeProof.LESS_LENGTH_IMP_APPEND','thm.bvp_to_wordProps.LESS_LENGTH')).
fof(f84,plain,(
  ( ! [X4,X3] : (s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),X4)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f909,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK5(sK2,sK1,sK0)))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl1 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f897,f180])).
fof(f897,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK5(sK2,sK1,sK0)))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl1 | $spl6 | $spl14)),
  inference(superposition,[],[f122,f250])).
fof(f250,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl1 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f248,f138])).
fof(f248,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl1 | $spl14)),
  inference(superposition,[],[f217,f146])).
fof(f217,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X2)) ) | $spl14),
  inference(resolution,[],[f129,f180])).
fof(f129,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0))))))) )),
  inference(cnf_transformation,[],[f80])).
% SZS output end Proof for thm.stack_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 28
% Passive clauses: 154
% Generated clauses: 800
% Final active clauses: 22
% Final passive clauses: 100
% Input formulas: 21
% Initial clauses: 48
% 
% Duplicate literals: 97
% Trivial inequalities: 10
% Fw subsumption resolutions: 86
% Fw demodulations: 16
% Bw demodulations: 4
% 
% Simple tautologies: 53
% Equational tautologies: 30
% Forward subsumptions: 336
% 
% Binary resolution: 37
% Factoring: 1
% Forward superposition: 167
% Backward superposition: 222
% Self superposition: 48
% Equality factoring: 52
% Equality resolution: 1
% 
% Split clauses: 22
% Split components: 45
% SAT solver clauses: 41
% SAT solver unit clauses: 4
% SAT solver binary clauses: 20
% SAT solver learnt clauses: 1
% 
% Sat splits: 22
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 36
% TWLsolver calls for satisfiability: 14
% 
% Memory used [KB]: 1023
% Time elapsed: 0.047 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
