Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.BatchedQueue
% (54951)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1018
% Passive clauses: 6244
% Generated clauses: 36812
% Final active clauses: 990
% Final passive clauses: 4829
% Input formulas: 515
% Initial clauses: 899
% 
% Duplicate literals: 173
% Trivial inequalities: 171
% Fw subsumption resolutions: 1789
% Fw demodulations: 3375
% Bw demodulations: 10
% 
% Simple tautologies: 297
% Equational tautologies: 19
% Forward subsumptions: 24690
% 
% Binary resolution: 4765
% Factoring: 655
% Forward superposition: 10120
% Backward superposition: 14742
% Self superposition: 56
% Equality factoring: 2
% Equality resolution: 19
% 
% Split clauses: 224
% Split components: 450
% SAT solver clauses: 404
% SAT solver unit clauses: 13
% SAT solver binary clauses: 64
% 
% Sat splits: 224
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 404
% TWLsolver calls for satisfiability: 324
% 
% Memory used [KB]: 24178
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.BatchedQueue
% (54973)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 347
% Passive clauses: 1640
% Generated clauses: 8936
% Final active clauses: 326
% Final passive clauses: 946
% Input formulas: 515
% Initial clauses: 899
% 
% Duplicate literals: 81
% Trivial inequalities: 12
% Fw subsumption resolutions: 393
% Fw demodulations: 934
% Bw demodulations: 361
% Condensations: 41
% Global subsumptions: 37
% 
% Simple tautologies: 260
% Equational tautologies: 7
% Forward subsumptions: 3475
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 965
% Factoring: 68
% Forward superposition: 1748
% Backward superposition: 1478
% Self superposition: 32
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 2734
% SAT solver unit clauses: 1263
% SAT solver binary clauses: 222
% SAT solver learnt clauses: 74
% SAT solver learnt literals: 42
% 
% Sat splits: 13
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 2588
% TWLsolver calls for satisfiability: 9668
% 
% Memory used [KB]: 50148
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.BatchedQueue
% (54993)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1307
% Passive clauses: 13697
% Generated clauses: 149376
% Final active clauses: 1185
% Final passive clauses: 5621
% Input formulas: 515
% Initial clauses: 899
% Discarded non-redundant clauses: 25492
% 
% Duplicate literals: 10
% Trivial inequalities: 22
% Fw subsumption resolutions: 1768
% Fw demodulations: 39346
% Bw demodulations: 2091
% Condensations: 120
% 
% Simple tautologies: 172
% Equational tautologies: 59
% Forward subsumptions: 74411
% Fw demodulations to eq. taut.: 2644
% Bw demodulations to eq. taut.: 38
% 
% Unit resulting resolution: 46165
% Factoring: 1
% Forward superposition: 27843
% Backward superposition: 28918
% Self superposition: 190
% Equality factoring: 2
% Equality resolution: 14
% 
% Split clauses: 46
% Split components: 92
% SAT solver clauses: 15704
% SAT solver unit clauses: 5326
% SAT solver binary clauses: 7765
% 
% Sat splits: 46
% Sat splitting refutations: 1913
% 
% Memory used [KB]: 302041
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.BatchedQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.BatchedQueue
% SZS output start Proof for thm.BatchedQueue
fof(f4748,plain,(
  $false),
  inference(resolution,[],[f1279,f1106])).
fof(f1106,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one',X0))),s('type.BatchedQueue.queue'(sK13),sK16))),s(sK13,sK17))))) )),
  inference(superposition,[],[f990,f978])).
fof(f978,plain,(
  ( ! [X0] : (s('type.one.one','const.one.one_0') = s('type.one.one',X0)) )),
  inference(cnf_transformation,[],[f597])).
fof(f597,plain,(
  ! [X0] : s('type.one.one','const.one.one_0') = s('type.one.one',X0)),
  inference(rectify,[],[f312])).
fof(f312,axiom,(
  ! [X112] : s('type.one.one','const.one.one_0') = s('type.one.one',X112)),
  file('thm.BatchedQueue.generated_definition_ind','thm.inferProps.success_eqns|split|9')).
fof(f990,plain,(
  ~p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(sK13),sK16))),s(sK13,sK17))))),
  inference(forward_demodulation,[],[f774,f978])).
fof(f774,plain,(
  ~p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one',sK15))),s('type.BatchedQueue.queue'(sK13),sK16))),s(sK13,sK17))))),
  inference(cnf_transformation,[],[f656])).
fof(f656,plain,(
  ! [X5,X6,X7] : p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(sK13),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(sK13),X5),s('type.list.list'(sK13),X6))))),s(sK13,X7)))) & ~p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one',sK15))),s('type.BatchedQueue.queue'(sK13),sK16))),s(sK13,sK17))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15,sK16,sK17])],[f655])).
fof(f655,plain,(
  ? [X0,X1] : (! [X5,X6,X7] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),X6))))),s(X0,X7)))) & ? [X2,X3,X4] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one',X2))),s('type.BatchedQueue.queue'(X0),X3))),s(X0,X4)))))),
  inference(rectify,[],[f602])).
fof(f602,plain,(
  ? [X0,X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),s(X0,X4)))) & ? [X5,X6,X7] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one',X5))),s('type.BatchedQueue.queue'(X0),X6))),s(X0,X7)))))),
  inference(ennf_transformation,[],[f518])).
fof(f518,plain,(
  ~! [X0,X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),s(X0,X4)))) => ! [X5,X6,X7] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one',X5))),s('type.BatchedQueue.queue'(X0),X6))),s(X0,X7)))))),
  inference(flattening,[],[f517])).
fof(f517,plain,(
  ~! [X0] : ! [X1] : (! [X2,X3,X4] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),s(X0,X4)))) => ! [X5,X6,X7] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun('type.BatchedQueue.queue'(X0),fun(X0,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X0),fun(X0,bool))),X1),s('type.one.one',X5))),s('type.BatchedQueue.queue'(X0),X6))),s(X0,X7)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8,X9,X10] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun('type.BatchedQueue.queue'(X6),fun(X6,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X6),fun(X6,bool))),X7),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))),s(X6,X10)))) => ! [X11,X12,X13] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun('type.BatchedQueue.queue'(X6),fun(X6,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X6),fun(X6,bool))),X7),s('type.one.one',X11))),s('type.BatchedQueue.queue'(X6),X12))),s(X6,X13)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8,X9,X10] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun('type.BatchedQueue.queue'(X6),fun(X6,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X6),fun(X6,bool))),X7),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))))),s(X6,X10)))) => ! [X11,X12,X13] : p(s(bool,happ(s(fun(X6,bool),happ(s(fun('type.BatchedQueue.queue'(X6),fun(X6,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(X6),fun(X6,bool))),X7),s('type.one.one',X11))),s('type.BatchedQueue.queue'(X6),X12))),s(X6,X13)))))),
  file('thm.BatchedQueue.generated_definition_ind','thm.BatchedQueue.generated_definition_ind')).
fof(f1279,plain,(
  ( ! [X26,X27] : (p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(sK13),X26))),s(sK13,X27))))) )),
  inference(superposition,[],[f773,f967])).
fof(f967,plain,(
  ( ! [X0,X1] : (s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),sK37(X1,X0)),s('type.list.list'(X0),sK38(X1,X0))))) )),
  inference(cnf_transformation,[],[f763])).
fof(f763,plain,(
  ! [X0,X1] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),sK37(X1,X0)),s('type.list.list'(X0),sK38(X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37,sK38])],[f582])).
fof(f582,plain,(
  ! [X0,X1] : ? [X2,X3] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))),
  inference(flattening,[],[f581])).
fof(f581,plain,(
  ! [X0] : ! [X1] : ? [X2,X3] : s('type.BatchedQueue.queue'(X0),X1) = s('type.BatchedQueue.queue'(X0),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6] : ! [X49] : ? [X20,X21] : s('type.BatchedQueue.queue'(X6),X49) = s('type.BatchedQueue.queue'(X6),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(X6),X20),s('type.list.list'(X6),X21)))),
  file('thm.BatchedQueue.generated_definition_ind','thm.BatchedQueue.queue_nchotomy')).
fof(f773,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun(sK13,bool),happ(s(fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool)),happ(s(fun('type.one.one',fun('type.BatchedQueue.queue'(sK13),fun(sK13,bool))),sK14),s('type.one.one','const.one.one_0'))),s('type.BatchedQueue.queue'(sK13),'const.BatchedQueue.QUEUE_2'(s('type.list.list'(sK13),X5),s('type.list.list'(sK13),X6))))),s(sK13,X7))))) )),
  inference(cnf_transformation,[],[f656])).
% SZS output end Proof for thm.BatchedQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 216
% Passive clauses: 2077
% Generated clauses: 3916
% Final active clauses: 210
% Final passive clauses: 1993
% Input formulas: 515
% Initial clauses: 209
% 
% Selected by SInE selection: 50
% SInE iterations: 1
% 
% Duplicate literals: 147
% Fw subsumption resolutions: 314
% Fw demodulations: 47
% 
% Simple tautologies: 210
% Equational tautologies: 2
% Forward subsumptions: 716
% 
% Binary resolution: 2571
% Factoring: 2
% Forward superposition: 802
% Equality resolution: 9
% 
% Split clauses: 115
% Split components: 275
% SAT solver clauses: 131
% SAT solver unit clauses: 4
% SAT solver binary clauses: 81
% 
% Sat splits: 115
% Sat splitting refutations: 4
% 
% Memory used [KB]: 3709
% Time elapsed: 0.102 s
% ------------------------------
% ------------------------------
% Success in time 11.924 s
