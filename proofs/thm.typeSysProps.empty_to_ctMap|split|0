Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.typeSysProps
% (55175)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 115
% Passive clauses: 3083
% Generated clauses: 16134
% Final active clauses: 113
% Final passive clauses: 2824
% Input formulas: 54
% Initial clauses: 83
% 
% Duplicate literals: 645
% Trivial inequalities: 233
% Fw subsumption resolutions: 2158
% Fw demodulations: 1228
% Bw demodulations: 2
% 
% Simple tautologies: 362
% Equational tautologies: 75
% Forward subsumptions: 7585
% 
% Binary resolution: 213
% Factoring: 2
% Forward superposition: 5502
% Backward superposition: 6341
% Self superposition: 339
% Equality factoring: 176
% Equality resolution: 31
% 
% Split clauses: 390
% Split components: 794
% SAT solver clauses: 910
% SAT solver unit clauses: 34
% SAT solver binary clauses: 220
% 
% Sat splits: 390
% 
% TWLsolver clauses: 909
% TWLsolver calls for satisfiability: 139
% 
% Memory used [KB]: 19701
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.typeSysProps
% (55207)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 98
% Passive clauses: 1044
% Generated clauses: 10177
% Final active clauses: 90
% Final passive clauses: 893
% Input formulas: 54
% Initial clauses: 83
% 
% Duplicate literals: 398
% Trivial inequalities: 93
% Fw subsumption resolutions: 680
% Fw demodulations: 682
% Bw demodulations: 56
% Condensations: 949
% Global subsumptions: 9
% 
% Simple tautologies: 167
% Equational tautologies: 43
% Forward subsumptions: 4570
% 
% Binary resolution: 136
% Factoring: 1
% Forward superposition: 3070
% Backward superposition: 2718
% Self superposition: 157
% Equality factoring: 78
% Equality resolution: 22
% 
% Split clauses: 109
% Split components: 222
% SAT solver clauses: 1655
% SAT solver unit clauses: 126
% SAT solver binary clauses: 67
% SAT solver learnt clauses: 19
% SAT solver learnt literals: 1
% 
% Sat splits: 109
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1618
% TWLsolver calls for satisfiability: 298
% 
% Memory used [KB]: 17014
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.typeSysProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.typeSysProps
% SZS output start Proof for thm.typeSysProps
fof(f13229,plain,(
  $false),
  inference(subsumption_resolution,[],[f13204,f12342])).
fof(f12342,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'(X0,X1),X2) = s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FEMPTY_0'),s('type.finite_map.fmap'(X0,X1),X2)))) )),
  inference(unit_resulting_resolution,[],[f4633,f247])).
fof(f247,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,sK7(X3,X2,X1,X0)))) != s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,sK7(X3,X2,X1,X0)))) | s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3)) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2,X3] : ((s('type.finite_map.fmap'(X1,X0),X2) != s('type.finite_map.fmap'(X1,X0),X3) | ! [X5] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X5))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X5)))) & (s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,sK7(X3,X2,X1,X0)))) != s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,sK7(X3,X2,X1,X0)))) | s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f176])).
fof(f176,plain,(
  ! [X0,X1,X2,X3] : ((s('type.finite_map.fmap'(X1,X0),X2) != s('type.finite_map.fmap'(X1,X0),X3) | ! [X5] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X5))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X5)))) & (? [X4] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X4))) != s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X4))) | s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3)))),
  inference(rectify,[],[f175])).
fof(f175,plain,(
  ! [X0,X1,X2,X3] : ((s('type.finite_map.fmap'(X1,X0),X2) != s('type.finite_map.fmap'(X1,X0),X3) | ! [X4] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X4))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X4)))) & (? [X4] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X4))) != s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X4))) | s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3)))),
  inference(nnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3] : (s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3) <=> ! [X4] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X4))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X4))))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.finite_map.fmap'(X1,X0),X2) = s('type.finite_map.fmap'(X1,X0),X3) <=> ! [X4] : s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X2),s(X1,X4))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X4))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X7,X6] : ! [X21,X22] : (s('type.finite_map.fmap'(X6,X7),X21) = s('type.finite_map.fmap'(X6,X7),X22) <=> ! [X13] : s('type.option.option'(X7),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,X7),X21),s(X6,X13))) = s('type.option.option'(X7),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,X7),X22),s(X6,X13))))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.misc.fmap_eq_flookup')).
fof(f4633,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X2))) = s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FEMPTY_0'),s('type.finite_map.fmap'(X1,X0),X3))),s(X1,X2)))) )),
  inference(forward_demodulation,[],[f4548,f243])).
fof(f243,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6,X7] : ! [X27,X25] : s(X7,X27) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),'const.option.NONE_0'),s(X7,X27),s(fun(X6,X7),X25)))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.option.option_case_def|split|0')).
fof(f4548,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X1,X0),'const.finite_map.FEMPTY_0'),s('type.finite_map.fmap'(X1,X0),X3))),s(X1,X2))) = s('type.option.option'(X0),'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X1,X0),X3),s(X1,X2))),s(fun(X0,'type.option.option'(X0)),'const.option.SOME_0')))) )),
  inference(superposition,[],[f250,f240])).
fof(f240,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FEMPTY_0'),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FEMPTY_0'),s(X0,X2)))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FEMPTY_0'),s(X0,X2)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X7,X6] : ! [X17] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X7,X6),'const.finite_map.FEMPTY_0'),s(X7,X17)))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.finite_map.FLOOKUP_EMPTY')).
fof(f250,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.finite_map.fmap'(X0,X1),X3))),s(X0,X2))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X2))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X3),s(X0,X2))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.finite_map.fmap'(X0,X1),X3))),s(X0,X2))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X2))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X3),s(X0,X2))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.finite_map.fmap'(X0,X1),X3))),s(X0,X2))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X2))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X3),s(X0,X2))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : ! [X17,X21,X22] : s('type.option.option'(X6),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X7,X6),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'(X7,X6),X22),s('type.finite_map.fmap'(X7,X6),X21))),s(X7,X17))) = s('type.option.option'(X6),'const.option.option_CASE_3'(s('type.option.option'(X6),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X7,X6),X22),s(X7,X17))),s('type.option.option'(X6),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X7,X6),X21),s(X7,X17))),s(fun(X6,'type.option.option'(X6)),'const.option.SOME_0')))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.finite_map.FLOOKUP_FUNION')).
fof(f13204,plain,(
  s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4) != s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.finite_map.FEMPTY_0'),s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4)))),
  inference(backward_demodulation,[],[f13202,f181])).
fof(f181,plain,(
  s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4) != s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(sK0,'type.pair.prod'(sK2,'type.pair.prod'(sK3,sK1)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4)))),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4) != s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(sK0,'type.pair.prod'(sK2,'type.pair.prod'(sK3,sK1)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(sK0,sK1),'type.pair.prod'(sK2,sK3)),sK4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f142])).
fof(f142,plain,(
  ? [X0,X1,X2,X3,X4] : s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4) != s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4)))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ~! [X0,X1,X2,X3,X4] : s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4) = s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ~! [X0,X1,X2,X3] : ! [X4] : s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4) = s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),X4)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ! [X10] : s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),X10) = s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),X10)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ! [X10] : s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),X10) = s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.finite_map.FUNION_2'(s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),'const.list.NIL_0'))),s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),X10)))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.typeSysProps.empty_to_ctMap|split|0')).
fof(f13202,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FEMPTY_0') = s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0')))) )),
  inference(backward_demodulation,[],[f13026,f9222])).
fof(f9222,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0'))) = s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3))),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f9172,f189])).
fof(f189,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.list.REVERSE_DEF|split|0')).
fof(f9172,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X2,'type.pair.prod'(X3,X1)))),'const.list.NIL_0'))) = s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X1),'type.pair.prod'(X2,X3))),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f257,f8078])).
fof(f8078,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'('type.pair.prod'('type.pair.prod'(X5,X6),'type.pair.prod'(X7,X8))),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.pair.prod'(X5,X6),'type.pair.prod'(X7,X8))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X5,'type.pair.prod'(X7,'type.pair.prod'(X8,X6)))),'const.list.NIL_0')))) )),
  inference(superposition,[],[f258,f241])).
fof(f241,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : ! [X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6,X7] : ! [X25] : s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X25),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.list.MAP|split|0')).
fof(f258,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),happ(s(fun(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'_dst_x0x1_2'(s(fun(fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))))),'_dst_x00x11_2'(s(fun(fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))))),'_dst_x0000x1001x0110_3'(s(fun('type.pair.prod'(X0,X3),fun('type.pair.prod'(X1,X2),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.,_0'),s(fun(X0,fun(X3,'type.pair.prod'(X0,X3))),'const.pair.,_0'),s(fun(X1,fun(X2,'type.pair.prod'(X1,X2))),'const.pair.,_0'))))))))),s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),happ(s(fun(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'_dst_x0x1_2'(s(fun(fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))))),'_dst_x00x11_2'(s(fun(fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))))),'_dst_x0000x1001x0110_3'(s(fun('type.pair.prod'(X0,X3),fun('type.pair.prod'(X1,X2),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.,_0'),s(fun(X0,fun(X3,'type.pair.prod'(X0,X3))),'const.pair.,_0'),s(fun(X1,fun(X2,'type.pair.prod'(X1,X2))),'const.pair.,_0'))))))))),s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))),
  inference(flattening,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3] : ! [X4] : s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),happ(s(fun(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3))),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'_dst_x0x1_2'(s(fun(fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X1,'type.pair.prod'(X2,X3)),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))))),'_dst_x00x11_2'(s(fun(fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),fun('type.pair.prod'(X2,X3),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.UNCURRY_0'),s(fun(X0,fun(X1,fun(X2,fun(X3,'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))))),'_dst_x0000x1001x0110_3'(s(fun('type.pair.prod'(X0,X3),fun('type.pair.prod'(X1,X2),'type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)))),'const.pair.,_0'),s(fun(X0,fun(X3,'type.pair.prod'(X0,X3))),'const.pair.,_0'),s(fun(X1,fun(X2,'type.pair.prod'(X1,X2))),'const.pair.,_0'))))))))),s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6,X8,X9,X7] : ! [X29] : s('type.list.list'('type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),X29))) = s('type.list.list'('type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))),'const.list.MAP_2'(s(fun('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7))),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))),happ(s(fun(fun(X6,fun('type.pair.prod'(X8,'type.pair.prod'(X9,X7)),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),fun('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7))),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),'const.pair.UNCURRY_0'),s(fun(X6,fun('type.pair.prod'(X8,'type.pair.prod'(X9,X7)),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),'_dst_x0x1_2'(s(fun(fun(X8,fun('type.pair.prod'(X9,X7),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),fun('type.pair.prod'(X8,'type.pair.prod'(X9,X7)),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),'const.pair.UNCURRY_0'),s(fun(X6,fun(X8,fun('type.pair.prod'(X9,X7),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))))),'_dst_x00x11_2'(s(fun(fun(X9,fun(X7,'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),fun('type.pair.prod'(X9,X7),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),'const.pair.UNCURRY_0'),s(fun(X6,fun(X8,fun(X9,fun(X7,'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))))),'_dst_x0000x1001x0110_3'(s(fun('type.pair.prod'(X6,X7),fun('type.pair.prod'(X8,X9),'type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)))),'const.pair.,_0'),s(fun(X6,fun(X7,'type.pair.prod'(X6,X7))),'const.pair.,_0'),s(fun(X8,fun(X9,'type.pair.prod'(X8,X9))),'const.pair.,_0'))))))))),s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),X29)))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.typeSoundInvariants.flat_to_ctMap_list_def')).
fof(f257,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))))))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3] : ! [X4] : s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4))) = s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.pair.prod'(X0,X3),'type.pair.prod'(X1,X2))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X0,'type.pair.prod'(X1,'type.pair.prod'(X2,X3)))),X4)))))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X6,X8,X9,X7] : ! [X29] : s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.typeSoundInvariants.flat_to_ctMap_1'(s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),X29))) = s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9)),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'('type.pair.prod'(X6,X7),'type.pair.prod'(X8,X9))),'const.typeSoundInvariants.flat_to_ctMap_list_1'(s('type.list.list'('type.pair.prod'(X6,'type.pair.prod'(X8,'type.pair.prod'(X9,X7)))),X29)))))))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.typeSoundInvariants.flat_to_ctMap_def')).
fof(f13026,plain,(
  ( ! [X2,X0,X1] : (s('type.finite_map.fmap'(X0,X1),X2) = s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X2),s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0')))) )),
  inference(unit_resulting_resolution,[],[f7028,f247])).
fof(f7028,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X2),s(X0,X3))) = s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X2),s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'))),s(X0,X3)))) )),
  inference(forward_demodulation,[],[f7027,f243])).
fof(f7027,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X2),s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'))),s(X0,X3))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.option.NONE_0'),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X2),s(X0,X3))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))) )),
  inference(forward_demodulation,[],[f6913,f242])).
fof(f242,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'),s(X0,X2)))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : ! [X2] : s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'),s(X0,X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : ! [X11] : s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X7,X6)),'const.list.NIL_0'),s(X7,X11)))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.alist.ALOOKUP_def|split|0')).
fof(f6913,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X2),s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'))),s(X0,X3))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.NIL_0'),s(X0,X3))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X2),s(X0,X3))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))) )),
  inference(superposition,[],[f252,f189])).
fof(f252,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X3))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X3))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X0,X1),X4),s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))) = s('type.option.option'(X1),'const.option.option_CASE_3'(s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'(X0,X1)),X2))),s(X0,X3))),s('type.option.option'(X1),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X0,X1),X4),s(X0,X3))),s(fun(X1,'type.option.option'(X1)),'const.option.SOME_0')))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ! [X16,X17,X18] : s('type.option.option'(X7),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,X7),'const.finite_map.FUPDATE_LIST_2'(s('type.finite_map.fmap'(X6,X7),X18),s('type.list.list'('type.pair.prod'(X6,X7)),X16))),s(X6,X17))) = s('type.option.option'(X7),'const.option.option_CASE_3'(s('type.option.option'(X7),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X6,X7)),'const.list.REVERSE_1'(s('type.list.list'('type.pair.prod'(X6,X7)),X16))),s(X6,X17))),s('type.option.option'(X7),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'(X6,X7),X18),s(X6,X17))),s(fun(X7,'type.option.option'(X7)),'const.option.SOME_0')))),
  file('thm.typeSysProps.empty_to_ctMap|split|0','thm.alist.flookup_fupdate_list')).
% SZS output end Proof for thm.typeSysProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 164
% Passive clauses: 1402
% Generated clauses: 13013
% Final active clauses: 115
% Final passive clauses: 1058
% Input formulas: 54
% Initial clauses: 83
% 
% Duplicate literals: 235
% Trivial inequalities: 59
% Fw subsumption resolutions: 294
% Fw demodulations: 1900
% Bw demodulations: 202
% Condensations: 417
% 
% Simple tautologies: 72
% Equational tautologies: 75
% Forward subsumptions: 8211
% Fw demodulations to eq. taut.: 137
% Bw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 1444
% Factoring: 1
% Forward superposition: 4126
% Backward superposition: 4056
% Self superposition: 140
% Equality factoring: 32
% Equality resolution: 5
% 
% Split clauses: 22
% Split components: 49
% SAT solver clauses: 1456
% SAT solver unit clauses: 770
% SAT solver binary clauses: 446
% 
% Sat splits: 22
% Sat splitting refutations: 8
% 
% Memory used [KB]: 23411
% Time elapsed: 0.628 s
% ------------------------------
% ------------------------------
% Success in time 1.962 s
