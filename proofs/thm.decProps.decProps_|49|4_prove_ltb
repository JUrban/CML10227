Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.decProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.decProps
% SZS output start Proof for thm.decProps
fof(f258,plain,(
  $false),
  inference(subsumption_resolution,[],[f69,f76])).
fof(f76,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10] : ! [X7,X11] : s('type.ffi.ffi_state'(X10),'const.decSem.state_ffi_1'(s('type.decSem.state'(X10),X7))) = s('type.ffi.ffi_state'(X10),'const.decSem.state_ffi_1'(s('type.decSem.state'(X10),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X11),s('type.decSem.state'(X10),X7)))))),
  file('thm.decProps.decProps_|49|4_prove_ltb','thm.decSem.decSem_22_prove_ltb')).
fof(f69,plain,(
  s('type.ffi.ffi_state'(sK0),'const.decSem.state_ffi_1'(s('type.decSem.state'(sK0),sK1))) != s('type.ffi.ffi_state'(sK0),'const.decSem.state_ffi_1'(s('type.decSem.state'(sK0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.decSem.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  s('type.ffi.ffi_state'(sK0),'const.decSem.state_ffi_1'(s('type.decSem.state'(sK0),sK1))) != s('type.ffi.ffi_state'(sK0),'const.decSem.state_ffi_1'(s('type.decSem.state'(sK0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.decSem.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f64])).
fof(f64,plain,(
  ? [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) != s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.decSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.decSem.state_ffi_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.ffi.ffi_state'(X6),'const.decSem.state_ffi_1'(s('type.decSem.state'(X6),X7))) = s('type.ffi.ffi_state'(X6),'const.decSem.state_ffi_1'(s('type.decSem.state'(X6),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.decSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.ffi.ffi_state'(X6),'const.decSem.state_ffi_1'(s('type.decSem.state'(X6),X7))) = s('type.ffi.ffi_state'(X6),'const.decSem.state_ffi_1'(s('type.decSem.state'(X6),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.decSem.state'(X6),X7)))))),
  file('thm.decProps.decProps_|49|4_prove_ltb','thm.decProps.decProps_|49|4_prove_ltb')).
% SZS output end Proof for thm.decProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 15
% Passive clauses: 37
% Generated clauses: 177
% Final active clauses: 13
% Final passive clauses: 15
% Input formulas: 23
% Initial clauses: 24
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% Fw subsumption resolutions: 1
% 
% Simple tautologies: 16
% Equational tautologies: 15
% Forward subsumptions: 69
% 
% Binary resolution: 4
% Forward superposition: 26
% Backward superposition: 30
% Self superposition: 24
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.044 s
