Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closProps
% (139207)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 176
% Passive clauses: 1465
% Generated clauses: 20791
% Final active clauses: 145
% Final passive clauses: 1182
% Input formulas: 21
% Initial clauses: 76
% 
% Duplicate literals: 1404
% Trivial inequalities: 29
% Fw subsumption resolutions: 2335
% Fw demodulations: 4616
% Bw demodulations: 26
% 
% Simple tautologies: 178
% Equational tautologies: 21
% Forward subsumptions: 9911
% 
% Binary resolution: 117
% Forward superposition: 8257
% Backward superposition: 4021
% Self superposition: 150
% Equality factoring: 38
% Equality resolution: 3
% 
% Split clauses: 481
% Split components: 968
% SAT solver clauses: 903
% SAT solver unit clauses: 3
% SAT solver binary clauses: 24
% 
% Sat splits: 481
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 903
% TWLsolver calls for satisfiability: 105
% 
% Memory used [KB]: 13432
% Time elapsed: 0.606 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closProps
% (139245)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 194
% Passive clauses: 1435
% Generated clauses: 11925
% Final active clauses: 179
% Final passive clauses: 1172
% Input formulas: 21
% Initial clauses: 76
% 
% Duplicate literals: 392
% Trivial inequalities: 4
% Fw subsumption resolutions: 498
% Fw demodulations: 1107
% Bw demodulations: 82
% Condensations: 529
% Global subsumptions: 4
% 
% Simple tautologies: 32
% Equational tautologies: 15
% Forward subsumptions: 6072
% 
% Binary resolution: 254
% Forward superposition: 4543
% Backward superposition: 2894
% Self superposition: 69
% Equality factoring: 28
% 
% Split clauses: 61
% Split components: 123
% SAT solver clauses: 1750
% SAT solver unit clauses: 88
% SAT solver binary clauses: 53
% SAT solver learnt clauses: 8
% 
% Sat splits: 61
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1734
% TWLsolver calls for satisfiability: 3023
% 
% Memory used [KB]: 24946
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.closProps
% (139292)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 628
% Passive clauses: 12827
% Generated clauses: 180236
% Final active clauses: 266
% Final passive clauses: 1317
% Input formulas: 21
% Initial clauses: 76
% Discarded non-redundant clauses: 11993
% 
% Duplicate literals: 5335
% Trivial inequalities: 366
% Fw subsumption resolutions: 9861
% Fw demodulations: 37075
% Bw demodulations: 6199
% Condensations: 11568
% Global subsumptions: 69
% 
% Simple tautologies: 790
% Equational tautologies: 673
% Forward subsumptions: 100192
% Fw demodulations to eq. taut.: 248
% Bw demodulations to eq. taut.: 260
% 
% Unit resulting resolution: 14304
% Forward superposition: 51701
% Backward superposition: 31566
% Self superposition: 394
% Equality factoring: 88
% Equality resolution: 14
% 
% Split clauses: 136
% Split components: 318
% SAT solver clauses: 13767
% SAT solver unit clauses: 788
% SAT solver binary clauses: 2993
% 
% Sat splits: 136
% Sat splitting refutations: 597
% 
% Memory used [KB]: 129464
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.closProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closProps
% SZS output start Proof for thm.closProps
fof(f3111,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f157,f158,f159,f160,f161,f162,f163,f164,f213,f214,f215,f216,f217,f218,f219,f220,f248,f249,f250,f251,f252,f253,f254,f255,f276,f279,f282,f285,f288,f291,f294,f297,f172,f316,f318,f320,f322,f324,f326,f328,f330,f178,f355,f490,f493,f498,f502,f506,f510,f514,f518,f522,f526,f531,f536,f541,f547,f551,f555,f559,f563,f567,f571,f575,f579,f584,f589,f594,f600,f180,f613,f618,f623,f628,f633,f638,f643,f648,f176,f796,f833,f797,f834,f189,f798,f835,f801,f837,f802,f838,f803,f839,f804,f840,f173,f809,f841,f169,f810,f842,f187,f872,f877,f885,f892,f899,f906,f913,f920,f927,f934,f942,f951,f959,f967,f975,f984,f992,f1000,f811,f1001,f1009,f1018,f1026,f1034,f799,f1035,f183,f1043,f1052,f1060,f1068,f1076,f1084,f1092,f1100,f1107,f1114,f1121,f1128,f1135,f1142,f1149,f1156,f1165,f1173,f1182,f1191,f1207,f1215,f1223,f1231,f1239,f1247,f1255,f1263,f184,f1280,f1289,f1298,f1307,f1316,f1325,f1334,f1343,f1361,f1371,f1381,f1391,f1401,f1411,f1421,f1431,f1450,f1461,f1472,f1483,f1494,f1505,f186,f1516,f1527,f1613,f1655,f1660,f1678,f1684,f1709,f1716,f199,f1923,f1939,f1944,f1957,f1962,f1975,f1980,f1996,f2004,f2038,f2046,f2080,f2088,f2104,f2112,f2133,f2143,f2153,f174,f2179,f2190,f2201,f170,f2315,f2327,f195,f2372,f2415,f2419,f2424,f2432,f2441,f2453,f2462,f2468,f2477,f2486,f2492,f2501,f2510,f2515,f2563,f2577,f2588,f2607,f2625,f2642,f2666,f2683,f2702,f2710,f2723,f2736,f2744,f2752,f2765,f2778,f2791,f2804,f2812,f2823,f2836,f2845,f2856,f2862,f2868,f2877,f2887,f2894,f2905,f2916,f2927,f2938,f1044,f2945,f2952,f1010,f2963,f2974,f976,f2984,f3000,f3015,f3036,f3051,f3068,f192,f3085,f3092,f943,f193,f190,f188,f197,f182,f3110])).
fof(f3110,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f3098,f188])).
fof(f3098,plain,(
  ~sP4(sK8)),
  inference(subsumption_resolution,[],[f3097,f110])).
fof(f110,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP4(X0)) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : (~sP4(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(X0))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK14(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK15(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(X0)),s('type.closLang.exp',sK17(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16,sK17])],[f62])).
fof(f62,plain,(
  ! [X0] : (~sP4(X0) | ? [X1,X2,X3,X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X3)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X1),s('type.option.option'('type.list.list'('type.num.num')),X2),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f61])).
fof(f61,plain,(
  ! [X0] : (~sP4(X0) | ? [X5,X6,X7,X8] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (~sP4(X0) | ? [X5,X6,X7,X8] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f3097,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP4(sK8)),
  inference(subsumption_resolution,[],[f1798,f111])).
fof(f111,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(X0))))))) | ~sP4(X0)) )),
  inference(cnf_transformation,[],[f63])).
fof(f1798,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(sK8))))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP4(sK8)),
  inference(resolution,[],[f99,f112])).
fof(f112,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),sK14(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK15(X0)),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(X0)),s('type.closLang.exp',sK17(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP4(X0)) )),
  inference(cnf_transformation,[],[f63])).
fof(f99,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8)))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X27,X28,X29] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29))))))))) & ! [X26] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X23,X24,X25] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X25),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X23),s('type.closLang.exp',X24),s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X21,X22] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X21),s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X17,X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X18)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X14,X15,X16] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X16)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X10,X11,X12,X13] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X6,X7,X8,X9] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X4,X5] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X5),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X4),s('type.closLang.exp',X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK9))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f50])).
fof(f50,plain,(
  ? [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X27,X28,X29] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29))))))))) & ! [X26] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X23,X24,X25] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X25),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X23),s('type.closLang.exp',X24),s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X21,X22] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X21)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X21),s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X17,X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X18)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X14,X15,X16] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X16)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X10,X11,X12,X13] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X6,X7,X8,X9] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X9),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X6),s('type.option.option'('type.list.list'('type.num.num')),X7),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X8),s('type.closLang.exp',X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X4,X5] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X5),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X4),s('type.closLang.exp',X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ? [X1] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))))),
  inference(rectify,[],[f38])).
fof(f38,plain,(
  ? [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X26,X27,X28] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) & ! [X25] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X22,X23,X24] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X21] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X13,X14,X15] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X10,X11,X12] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X5,X6,X7,X8] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X3,X4] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X1,X2] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ? [X29] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ? [X0] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X26,X27,X28] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) & ! [X25] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X22,X23,X24] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X21] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X13,X14,X15] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X10,X11,X12] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X5,X6,X7,X8] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X3,X4] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X1,X2] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) & ? [X29] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X26,X27,X28] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) & ! [X25] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X22,X23,X24] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X21] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X13,X14,X15] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X10,X11,X12] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X3,X4] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) => ! [X29] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X7,X8,X9] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))))) & ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X11,X12,X13] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X11),s('type.closLang.exp',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X9),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X14,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X15,X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X12)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X15),s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17,X18,X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X17),s('type.num.num',X18),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17,X19,X11] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X17),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X20),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X10)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X7,X8,X9] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))))) & ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X11,X12,X13] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X11),s('type.closLang.exp',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X9),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X14,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X15,X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X12)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X15),s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17,X18,X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X17),s('type.num.num',X18),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17,X19,X11] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X17),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X20),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X10)))))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.closProps.every_Fn_vs_NONE_ind')).
fof(f182,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | $spl12),
  inference(cnf_transformation,[],[f182_D])).
fof(f182_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f197,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl29),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f188,plain,(
  sP4(sK8) | $spl18),
  inference(cnf_transformation,[],[f188_D])).
fof(f188_D,plain,(
  sP4(sK8) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f190,plain,(
  sP5(sK8) | $spl20),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  sP5(sK8) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f193,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0))))) ) | $spl24),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f943,plain,(
  ( ! [X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl50),
  inference(cnf_transformation,[],[f943_D])).
fof(f943_D,plain,(
  ( ! [X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f3092,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3091,f142])).
fof(f142,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'T_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'T_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X24] : ((p(s(bool,X24)) & p(s(bool,'T_0'))) <=> p(s(bool,X24)))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.bool.AND_CLAUSES|split|1')).
fof(f3091,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3090,f200])).
fof(f200,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(subsumption_resolution,[],[f168,f152])).
fof(f152,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closProps.every_Fn_vs_NONE_ind',aHL_FALSITY)).
fof(f168,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))),
  inference(superposition,[],[f89,f156])).
fof(f156,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.closProps.every_Fn_vs_NONE_ind',aHL_BOOL_CASES)).
fof(f89,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(cnf_transformation,[],[f51])).
fof(f3090,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3089,f142])).
fof(f3089,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3088,f331])).
fof(f331,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X1))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(subsumption_resolution,[],[f314,f152])).
fof(f314,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X1))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f91,f156])).
fof(f91,plain,(
  ( ! [X26] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X26))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f3088,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3087,f169])).
fof(f3087,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3086,f173])).
fof(f3086,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f946,f183])).
fof(f946,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f945,f731])).
fof(f731,plain,(
  ~sP2(sK8)),
  inference(subsumption_resolution,[],[f730,f116])).
fof(f116,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK21(X0))))) | ~sP2(X0)) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (~sP2(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK21(X0))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK22(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21(X0)),s('type.closLang.exp',sK22(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21,sK22])],[f68])).
fof(f68,plain,(
  ! [X0] : (~sP2(X0) | ? [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X1),s('type.closLang.exp',X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f67])).
fof(f67,plain,(
  ! [X0] : (~sP2(X0) | ? [X20,X21] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : (~sP2(X0) | ? [X20,X21] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f730,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK21(sK8))))) | ~sP2(sK8)),
  inference(subsumption_resolution,[],[f721,f117])).
fof(f117,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK22(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP2(X0)) )),
  inference(cnf_transformation,[],[f69])).
fof(f721,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK22(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK21(sK8))))) | ~sP2(sK8)),
  inference(resolution,[],[f93,f118])).
fof(f118,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),sK21(X0)),s('type.closLang.exp',sK22(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP2(X0)) )),
  inference(cnf_transformation,[],[f69])).
fof(f93,plain,(
  ( ! [X21,X22] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X21),s('type.closLang.exp',X22))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X21))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f945,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f944,f471])).
fof(f471,plain,(
  ~sP6(sK8)),
  inference(subsumption_resolution,[],[f464,f105])).
fof(f105,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK11(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP6(X0)) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : (~sP6(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK11(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK11(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11])],[f56])).
fof(f56,plain,(
  ! [X0] : (~sP6(X0) | ? [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X1))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f55])).
fof(f55,plain,(
  ! [X0] : (~sP6(X0) | ? [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : (~sP6(X0) | ? [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f464,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK11(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP6(sK8)),
  inference(resolution,[],[f94,f106])).
fof(f106,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',sK11(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP6(X0)) )),
  inference(cnf_transformation,[],[f57])).
fof(f94,plain,(
  ( ! [X20] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X20))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X20),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f944,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f819,f179])).
fof(f179,plain,(
  ~sP7(sK8) | $spl11),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  ~sP7(sK8) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f819,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f128])).
fof(f128,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK37(X0))))) | sP5(X0) | sP4(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK33(X0)),s('type.num.num',sK34(X0)),s('type.closLang.exp',sK35(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK31(X0))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(X0) | sP2(X0) | sP6(X0) | sP7(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK31(X0))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.closLang.exp'),sK31(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP3(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK33(X0)),s('type.num.num',sK34(X0)),s('type.closLang.exp',sK35(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP4(X0) | sP5(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK37(X0))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(X0)),s('type.list.list'('type.closLang.exp'),sK37(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ! [X1] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36,sK37])],[f76])).
fof(f76,plain,(
  ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | sP1(X0) | ? [X10] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(X0) | sP2(X0) | sP6(X0) | sP7(X0) | ? [X8,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X9)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X8),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP3(X0) | ? [X4,X5,X6,X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X4),s('type.option.option'('type.list.list'('type.num.num')),X5),s('type.num.num',X6),s('type.closLang.exp',X7))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP4(X0) | sP5(X0) | ? [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X3)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ! [X1] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))))),
  inference(rectify,[],[f49])).
fof(f49,plain,(
  ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | sP1(X0) | ? [X25] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(X0) | sP2(X0) | sP6(X0) | sP7(X0) | ? [X16,X17] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP3(X0) | ? [X9,X10,X11,X12] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | sP4(X0) | sP5(X0) | ? [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ! [X29] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(definition_folding,[],[f40,f48,f47,f46,f45,f44,f43,f42,f41])).
fof(f41,plain,(
  ! [X0] : (~sP0(X0) | ? [X22,X23,X24] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f42,plain,(
  ! [X0] : (~sP1(X0) | ? [X26,X27,X28] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f44,plain,(
  ! [X0] : (~sP3(X0) | ? [X13,X14,X15] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f46,plain,(
  ! [X0] : (~sP5(X0) | ? [X3,X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f48,plain,(
  ! [X0] : (~sP7(X0) | ? [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f40,plain,(
  ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ? [X26,X27,X28] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) | ? [X25] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ? [X22,X23,X24] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X20,X21] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X16,X17] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X13,X14,X15] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X9,X10,X11,X12] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X5,X6,X7,X8] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X3,X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ! [X29] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ((~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ? [X26,X27,X28] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) | ? [X25] : ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ? [X22,X23,X24] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X20,X21] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X16,X17] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X13,X14,X15] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X9,X10,X11,X12] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X3,X4] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) | ? [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) | ! [X29] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X26,X27,X28] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))) & ! [X25] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X22,X23,X24] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X21] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X20)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X21),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X20),s('type.closLang.exp',X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X17] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X17)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X16),s('type.list.list'('type.closLang.exp'),X17))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X13,X14,X15] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X10,X11,X12] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X9),s('type.option.option'('type.list.list'('type.num.num')),X10),s('type.num.num',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X5),s('type.option.option'('type.list.list'('type.num.num')),X6),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X7),s('type.closLang.exp',X8))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X3,X4] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X2)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X1),s('type.list.list'('type.closLang.exp'),X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) => ! [X29] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X29)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) & ! [X7,X8,X9] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X7),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X8),s('type.list.list'('type.closLang.exp'),X9))))))))) & ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',X10))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ! [X11,X12,X13] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X11),s('type.closLang.exp',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X9,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),X9),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X14,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X14),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X15,X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X12)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X15),s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X21,X18,X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X21),s('type.num.num',X18),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X16,X21,X19,X11] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),X16),s('type.option.option'('type.list.list'('type.num.num')),X21),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),X19),s('type.closLang.exp',X11))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X11,X12] : ((p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X11),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X12),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X11),s('type.closLang.exp',X12))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) & ! [X20,X9] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X9)))) => p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X20),s('type.list.list'('type.closLang.exp'),X9))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))) => ! [X10] : p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X6),s('type.list.list'('type.closLang.exp'),X10)))))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.closProps.contains_App_SOME_ind')).
fof(f354,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(subsumption_resolution,[],[f350,f152])).
fof(f350,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) )),
  inference(superposition,[],[f96,f156])).
fof(f96,plain,(
  ( ! [X17,X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X17),s('type.list.list'('type.closLang.exp'),X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X18))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f3085,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3084,f142])).
fof(f3084,plain,(
  ~p(s(bool,'T_0')) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f3083,f200])).
fof(f3083,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3082,f142])).
fof(f3082,plain,(
  ~p(s(bool,'T_0')) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f3081,f331])).
fof(f3081,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3080,f169])).
fof(f3080,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3079,f173])).
fof(f3079,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3078,f731])).
fof(f3078,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3077,f471])).
fof(f3077,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f3076,f179])).
fof(f3076,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2401,f183])).
fof(f2401,plain,(
  sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2365,f198])).
fof(f198,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl30),
  inference(cnf_transformation,[],[f198_D])).
fof(f198_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2365,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | $spl27),
  inference(resolution,[],[f195,f132])).
fof(f132,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(X0)),s('type.list.list'('type.closLang.exp'),sK37(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(X0) | sP4(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK33(X0)),s('type.num.num',sK34(X0)),s('type.closLang.exp',sK35(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK31(X0))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f192,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | $spl22),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3068,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3067,f142])).
fof(f3067,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27)),
  inference(forward_demodulation,[],[f3066,f200])).
fof(f3066,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3065,f142])).
fof(f3065,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27)),
  inference(forward_demodulation,[],[f3064,f331])).
fof(f3064,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3063,f169])).
fof(f3063,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3062,f173])).
fof(f3062,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3061,f731])).
fof(f3061,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3060,f471])).
fof(f3060,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl27)),
  inference(subsumption_resolution,[],[f3059,f179])).
fof(f3059,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl27)),
  inference(subsumption_resolution,[],[f2361,f183])).
fof(f2361,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | $spl27),
  inference(resolution,[],[f195,f128])).
fof(f3051,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3050,f142])).
fof(f3050,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f3049,f200])).
fof(f3049,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3048,f142])).
fof(f3048,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f3047,f331])).
fof(f3047,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3046,f173])).
fof(f3046,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3045,f731])).
fof(f3045,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3044,f471])).
fof(f3044,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f3043,f179])).
fof(f3043,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2304,f183])).
fof(f2304,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl30)),
  inference(subsumption_resolution,[],[f2252,f198])).
fof(f2252,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f132])).
fof(f3036,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3035,f142])).
fof(f3035,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3034,f200])).
fof(f3034,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3033,f142])).
fof(f3033,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3032,f331])).
fof(f3032,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3031,f173])).
fof(f3031,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3030,f731])).
fof(f3030,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3029,f471])).
fof(f3029,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3028,f179])).
fof(f3028,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15)),
  inference(subsumption_resolution,[],[f2248,f183])).
fof(f2248,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f128])).
fof(f3015,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3014,f142])).
fof(f3014,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3013,f200])).
fof(f3013,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3012,f142])).
fof(f3012,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f3011,f331])).
fof(f3011,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3010,f169])).
fof(f3010,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3009,f731])).
fof(f3009,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3008,f471])).
fof(f3008,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f3007,f179])).
fof(f3007,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15)),
  inference(subsumption_resolution,[],[f2173,f183])).
fof(f2173,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f128])).
fof(f3000,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2999,f142])).
fof(f2999,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2998,f200])).
fof(f2998,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2997,f142])).
fof(f2997,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2996,f331])).
fof(f2996,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2995,f169])).
fof(f2995,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2994,f731])).
fof(f2994,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2993,f471])).
fof(f2993,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2992,f179])).
fof(f2992,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2191,f183])).
fof(f2191,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl30)),
  inference(subsumption_resolution,[],[f2177,f198])).
fof(f2177,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f132])).
fof(f2984,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2983,f142])).
fof(f2983,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2982,f200])).
fof(f2982,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2981,f142])).
fof(f2981,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2980,f331])).
fof(f2980,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2979,f169])).
fof(f2979,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2978,f173])).
fof(f2978,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2977,f731])).
fof(f2977,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2976,f471])).
fof(f2976,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2975,f179])).
fof(f2975,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl30)),
  inference(subsumption_resolution,[],[f1857,f183])).
fof(f1857,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl30),
  inference(resolution,[],[f198,f132])).
fof(f976,plain,(
  ( ! [X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl52),
  inference(cnf_transformation,[],[f976_D])).
fof(f976_D,plain,(
  ( ! [X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f2974,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2973,f142])).
fof(f2973,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2972,f200])).
fof(f2972,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2971,f142])).
fof(f2971,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2970,f331])).
fof(f2970,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2969,f169])).
fof(f2969,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2968,f173])).
fof(f2968,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2126,f183])).
fof(f2126,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f970,f198])).
fof(f970,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f969,f731])).
fof(f969,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f968,f471])).
fof(f968,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f816,f179])).
fof(f816,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f132])).
fof(f2963,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2962,f142])).
fof(f2962,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2961,f200])).
fof(f2961,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2960,f142])).
fof(f2960,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2959,f331])).
fof(f2959,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2958,f169])).
fof(f2958,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2957,f173])).
fof(f2957,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f987,f183])).
fof(f987,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f986,f731])).
fof(f986,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f985,f471])).
fof(f985,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f814,f179])).
fof(f814,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f128])).
fof(f1010,plain,(
  ( ! [X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl56),
  inference(cnf_transformation,[],[f1010_D])).
fof(f1010_D,plain,(
  ( ! [X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f2952,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2951,f153])).
fof(f153,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.bool.TRUTH')).
fof(f2951,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2950,f200])).
fof(f2950,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2949,f142])).
fof(f2949,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2948,f331])).
fof(f2948,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2947,f169])).
fof(f2947,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2946,f173])).
fof(f2946,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2097,f183])).
fof(f2097,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1013,f198])).
fof(f1013,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1012,f731])).
fof(f1012,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1011,f471])).
fof(f1011,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f807,f179])).
fof(f807,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f130])).
fof(f130,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(X0)),s('type.list.list'('type.closLang.exp'),sK37(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(X0) | sP4(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK31(X0))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f2945,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2944,f153])).
fof(f2944,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2943,f200])).
fof(f2943,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2942,f142])).
fof(f2942,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2941,f331])).
fof(f2941,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2940,f169])).
fof(f2940,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2939,f173])).
fof(f2939,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1029,f183])).
fof(f1029,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1028,f731])).
fof(f1028,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1027,f471])).
fof(f1027,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f805,f179])).
fof(f805,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f126])).
fof(f126,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK37(X0))))) | sP5(X0) | sP4(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK31(X0))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f1044,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl60),
  inference(cnf_transformation,[],[f1044_D])).
fof(f1044_D,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2938,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2937,f142])).
fof(f2937,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2936,f200])).
fof(f2936,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2935,f142])).
fof(f2935,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2934,f331])).
fof(f2934,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2933,f169])).
fof(f2933,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2932,f173])).
fof(f2932,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2073,f183])).
fof(f2073,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1047,f198])).
fof(f1047,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1046,f731])).
fof(f1046,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1045,f471])).
fof(f1045,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f792,f179])).
fof(f792,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f132])).
fof(f2927,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2926,f142])).
fof(f2926,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2925,f200])).
fof(f2925,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2924,f142])).
fof(f2924,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2923,f331])).
fof(f2923,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2922,f169])).
fof(f2922,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2921,f173])).
fof(f2921,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1079,f183])).
fof(f1079,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1078,f731])).
fof(f1078,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1077,f471])).
fof(f1077,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f788,f179])).
fof(f788,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f128])).
fof(f2916,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2915,f142])).
fof(f2915,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2914,f200])).
fof(f2914,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2913,f142])).
fof(f2913,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2912,f331])).
fof(f2912,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2911,f169])).
fof(f2911,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2910,f173])).
fof(f2910,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2031,f183])).
fof(f2031,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1109,f198])).
fof(f1109,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1108,f471])).
fof(f1108,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f739,f179])).
fof(f739,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f132])).
fof(f2905,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2904,f142])).
fof(f2904,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2903,f200])).
fof(f2903,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2902,f142])).
fof(f2902,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2901,f331])).
fof(f2901,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2900,f169])).
fof(f2900,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2899,f173])).
fof(f2899,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1137,f183])).
fof(f1137,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1136,f471])).
fof(f1136,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f735,f179])).
fof(f735,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f128])).
fof(f2894,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2893,f153])).
fof(f2893,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2892,f200])).
fof(f2892,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2891,f142])).
fof(f2891,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2890,f331])).
fof(f2890,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2889,f169])).
fof(f2889,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2888,f173])).
fof(f2888,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f1989,f183])).
fof(f1989,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1168,f198])).
fof(f1168,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1167,f731])).
fof(f1167,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1166,f471])).
fof(f1166,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f671,f179])).
fof(f671,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f654,f130])).
fof(f654,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f98,f132])).
fof(f98,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),X10),s('type.option.option'('type.list.list'('type.num.num')),X11),s('type.num.num',X12),s('type.closLang.exp',X13))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X13),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f2887,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2886,f153])).
fof(f2886,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2885,f200])).
fof(f2885,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2884,f142])).
fof(f2884,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2883,f331])).
fof(f2883,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2882,f169])).
fof(f2882,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2881,f173])).
fof(f2881,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1186,f183])).
fof(f1186,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1185,f731])).
fof(f1185,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1184,f471])).
fof(f1184,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1183,f179])).
fof(f1183,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f652,f126])).
fof(f652,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f98,f128])).
fof(f2877,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2876,f142])).
fof(f2876,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2875,f200])).
fof(f2875,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2874,f142])).
fof(f2874,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f2873,f331])).
fof(f2873,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f2872,f169])).
fof(f2872,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1292,f173])).
fof(f1292,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1291,f731])).
fof(f1291,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1290,f471])).
fof(f1290,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1266,f179])).
fof(f1266,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f128])).
fof(f2868,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2867,f142])).
fof(f2867,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2866,f200])).
fof(f2866,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2865,f142])).
fof(f2865,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(forward_demodulation,[],[f2864,f331])).
fof(f2864,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2863,f169])).
fof(f2863,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f2829,f173])).
fof(f2829,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl30)),
  inference(subsumption_resolution,[],[f1328,f198])).
fof(f1328,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1327,f731])).
fof(f1327,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1326,f471])).
fof(f1326,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1270,f179])).
fof(f1270,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f132])).
fof(f2862,plain,(
  $false | $spl20),
  inference(subsumption_resolution,[],[f2858,f190])).
fof(f2858,plain,(
  ~sP5(sK8)),
  inference(subsumption_resolution,[],[f2857,f107])).
fof(f107,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP5(X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : (~sP5(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK12(X0)),s('type.closLang.exp',sK13(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f59])).
fof(f59,plain,(
  ! [X0] : (~sP5(X0) | ? [X1,X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X1),s('type.closLang.exp',X2))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f58])).
fof(f58,plain,(
  ! [X0] : (~sP5(X0) | ? [X3,X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X3),s('type.closLang.exp',X4))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f46])).
fof(f2857,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP5(sK8)),
  inference(subsumption_resolution,[],[f1529,f108])).
fof(f108,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP5(X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f1529,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP5(sK8)),
  inference(resolution,[],[f100,f109])).
fof(f109,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',sK12(X0)),s('type.closLang.exp',sK13(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP5(X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f100,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',X4),s('type.closLang.exp',X5))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X5),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X4),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f2856,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2855,f142])).
fof(f2855,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2854,f200])).
fof(f2854,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2853,f142])).
fof(f2853,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2852,f331])).
fof(f2852,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2851,f169])).
fof(f2851,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2850,f173])).
fof(f2850,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f1415,f198])).
fof(f1415,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1414,f731])).
fof(f1414,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1413,f471])).
fof(f1413,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1412,f179])).
fof(f1412,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1350,f183])).
fof(f1350,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f132])).
fof(f2845,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2844,f142])).
fof(f2844,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2843,f200])).
fof(f2843,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2842,f142])).
fof(f2842,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2841,f331])).
fof(f2841,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2840,f169])).
fof(f2840,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1375,f173])).
fof(f1375,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1374,f731])).
fof(f1374,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1373,f471])).
fof(f1373,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1372,f179])).
fof(f1372,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1346,f183])).
fof(f1346,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f128])).
fof(f2836,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2835,f142])).
fof(f2835,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2834,f200])).
fof(f2834,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2833,f142])).
fof(f2833,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2832,f331])).
fof(f2832,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2831,f169])).
fof(f2831,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2830,f173])).
fof(f2830,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2829,f187])).
fof(f2823,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2822,f142])).
fof(f2822,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2821,f200])).
fof(f2821,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2820,f142])).
fof(f2820,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2819,f331])).
fof(f2819,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2818,f169])).
fof(f2818,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2817,f173])).
fof(f2817,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1292,f187])).
fof(f2812,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2811,f153])).
fof(f2811,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2810,f200])).
fof(f2810,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2809,f142])).
fof(f2809,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2808,f331])).
fof(f2808,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2807,f169])).
fof(f2807,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2806,f173])).
fof(f2806,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2805,f183])).
fof(f2805,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1186,f187])).
fof(f2804,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2803,f153])).
fof(f2803,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2802,f200])).
fof(f2802,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2801,f142])).
fof(f2801,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2800,f331])).
fof(f2800,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2799,f169])).
fof(f2799,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2798,f173])).
fof(f2798,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2797,f183])).
fof(f2797,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f1989,f187])).
fof(f2791,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2790,f142])).
fof(f2790,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2789,f200])).
fof(f2789,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2788,f142])).
fof(f2788,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2787,f331])).
fof(f2787,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2786,f169])).
fof(f2786,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2785,f173])).
fof(f2785,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2784,f183])).
fof(f2784,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1137,f187])).
fof(f2778,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2777,f142])).
fof(f2777,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2776,f200])).
fof(f2776,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2775,f142])).
fof(f2775,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2774,f331])).
fof(f2774,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2773,f169])).
fof(f2773,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2772,f173])).
fof(f2772,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2771,f183])).
fof(f2771,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2031,f187])).
fof(f2765,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2764,f142])).
fof(f2764,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2763,f200])).
fof(f2763,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2762,f142])).
fof(f2762,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2761,f331])).
fof(f2761,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2760,f169])).
fof(f2760,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2759,f173])).
fof(f2759,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2758,f183])).
fof(f2758,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1079,f187])).
fof(f2752,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2751,f142])).
fof(f2751,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2750,f200])).
fof(f2750,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2749,f142])).
fof(f2749,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2748,f331])).
fof(f2748,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2747,f169])).
fof(f2747,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2746,f173])).
fof(f2746,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2745,f183])).
fof(f2745,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2073,f187])).
fof(f2744,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2743,f153])).
fof(f2743,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2742,f200])).
fof(f2742,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2741,f142])).
fof(f2741,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2740,f331])).
fof(f2740,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2739,f169])).
fof(f2739,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2738,f173])).
fof(f2738,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2737,f183])).
fof(f2737,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1029,f187])).
fof(f2736,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2735,f153])).
fof(f2735,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2734,f200])).
fof(f2734,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2733,f142])).
fof(f2733,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2732,f331])).
fof(f2732,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2731,f169])).
fof(f2731,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2730,f173])).
fof(f2730,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2729,f183])).
fof(f2729,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP5(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2097,f187])).
fof(f2723,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2722,f142])).
fof(f2722,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2721,f200])).
fof(f2721,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2720,f142])).
fof(f2720,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2719,f331])).
fof(f2719,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2718,f169])).
fof(f2718,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2717,f173])).
fof(f2717,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2716,f183])).
fof(f2716,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f987,f187])).
fof(f2710,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2709,f142])).
fof(f2709,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2708,f200])).
fof(f2708,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2707,f142])).
fof(f2707,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2706,f331])).
fof(f2706,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2705,f169])).
fof(f2705,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2704,f173])).
fof(f2704,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2703,f183])).
fof(f2703,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2126,f187])).
fof(f2702,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2701,f142])).
fof(f2701,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2700,f200])).
fof(f2700,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2699,f142])).
fof(f2699,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2698,f331])).
fof(f2698,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2697,f169])).
fof(f2697,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2696,f173])).
fof(f2696,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2695,f731])).
fof(f2695,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2694,f471])).
fof(f2694,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2693,f179])).
fof(f2693,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2692,f183])).
fof(f2692,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl30)),
  inference(subsumption_resolution,[],[f1857,f187])).
fof(f2683,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2682,f142])).
fof(f2682,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2681,f200])).
fof(f2681,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2680,f142])).
fof(f2680,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2679,f331])).
fof(f2679,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2678,f169])).
fof(f2678,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2677,f731])).
fof(f2677,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2676,f471])).
fof(f2676,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2675,f179])).
fof(f2675,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2674,f183])).
fof(f2674,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2191,f187])).
fof(f2666,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2665,f142])).
fof(f2665,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2664,f200])).
fof(f2664,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2663,f142])).
fof(f2663,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2662,f331])).
fof(f2662,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2661,f169])).
fof(f2661,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2660,f731])).
fof(f2660,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2659,f471])).
fof(f2659,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2658,f179])).
fof(f2658,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2657,f183])).
fof(f2657,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl19)),
  inference(subsumption_resolution,[],[f2173,f187])).
fof(f2642,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2641,f142])).
fof(f2641,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2640,f200])).
fof(f2640,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2639,f142])).
fof(f2639,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2638,f331])).
fof(f2638,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2637,f173])).
fof(f2637,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2636,f731])).
fof(f2636,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2635,f471])).
fof(f2635,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2634,f179])).
fof(f2634,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2633,f183])).
fof(f2633,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl19)),
  inference(subsumption_resolution,[],[f2248,f187])).
fof(f2625,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2624,f142])).
fof(f2624,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2623,f200])).
fof(f2623,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2622,f142])).
fof(f2622,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(forward_demodulation,[],[f2621,f331])).
fof(f2621,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2620,f173])).
fof(f2620,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2619,f731])).
fof(f2619,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2618,f471])).
fof(f2618,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2617,f179])).
fof(f2617,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2616,f183])).
fof(f2616,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl19 | $spl30)),
  inference(subsumption_resolution,[],[f2304,f187])).
fof(f2607,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2606,f142])).
fof(f2606,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(forward_demodulation,[],[f2605,f200])).
fof(f2605,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2604,f142])).
fof(f2604,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(forward_demodulation,[],[f2603,f331])).
fof(f2603,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2602,f169])).
fof(f2602,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2601,f173])).
fof(f2601,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2600,f731])).
fof(f2600,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2599,f471])).
fof(f2599,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2598,f179])).
fof(f2598,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2597,f183])).
fof(f2597,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl19 | $spl27)),
  inference(subsumption_resolution,[],[f2361,f187])).
fof(f2588,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2587,f142])).
fof(f2587,plain,(
  ~p(s(bool,'T_0')) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f2586,f200])).
fof(f2586,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2585,f142])).
fof(f2585,plain,(
  ~p(s(bool,'T_0')) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f2584,f331])).
fof(f2584,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2583,f169])).
fof(f2583,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2582,f173])).
fof(f2582,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2581,f731])).
fof(f2581,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2580,f471])).
fof(f2580,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2579,f179])).
fof(f2579,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2578,f183])).
fof(f2578,plain,(
  sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl19 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2401,f187])).
fof(f2577,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2576,f142])).
fof(f2576,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2575,f200])).
fof(f2575,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2574,f142])).
fof(f2574,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f2573,f331])).
fof(f2573,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2572,f169])).
fof(f2572,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2571,f173])).
fof(f2571,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f2570,f183])).
fof(f2570,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19)),
  inference(subsumption_resolution,[],[f946,f187])).
fof(f2563,plain,(
  $false | $spl24),
  inference(subsumption_resolution,[],[f2560,f152])).
fof(f2560,plain,(
  p(s(bool,'F_0')) | $spl24),
  inference(superposition,[],[f193,f221])).
fof(f221,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK9)))),
  inference(subsumption_resolution,[],[f211,f153])).
fof(f211,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK9)))),
  inference(superposition,[],[f102,f156])).
fof(f102,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK9))))),
  inference(cnf_transformation,[],[f51])).
fof(f2515,plain,(
  $false | ($spl24 | $spl27)),
  inference(resolution,[],[f193,f195])).
fof(f2510,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2509,f142])).
fof(f2509,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2508,f200])).
fof(f2508,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2507,f142])).
fof(f2507,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2506,f331])).
fof(f2506,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2505,f169])).
fof(f2505,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1730,f173])).
fof(f1730,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1729,f187])).
fof(f1729,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl21)),
  inference(subsumption_resolution,[],[f1292,f189])).
fof(f2501,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2500,f142])).
fof(f2500,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2499,f200])).
fof(f2499,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2498,f142])).
fof(f2498,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2497,f331])).
fof(f2497,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2496,f169])).
fof(f2496,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1694,f173])).
fof(f1694,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1375,f189])).
fof(f2492,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2491,f142])).
fof(f2491,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2490,f200])).
fof(f2490,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2489,f142])).
fof(f2489,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2488,f331])).
fof(f2488,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2487,f169])).
fof(f2487,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1466,f173])).
fof(f1466,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1465,f731])).
fof(f1465,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1464,f471])).
fof(f1464,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1463,f179])).
fof(f1463,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1462,f183])).
fof(f1462,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1434,f187])).
fof(f1434,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f128])).
fof(f2486,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2485,f153])).
fof(f2485,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2484,f200])).
fof(f2484,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2483,f142])).
fof(f2483,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2482,f331])).
fof(f2482,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2481,f169])).
fof(f2481,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1983,f173])).
fof(f1983,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1982,f183])).
fof(f1982,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1981,f187])).
fof(f1981,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f1186,f189])).
fof(f2477,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2476,f142])).
fof(f2476,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2475,f200])).
fof(f2475,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2474,f142])).
fof(f2474,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2473,f331])).
fof(f2473,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2472,f169])).
fof(f2472,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2015,f173])).
fof(f2015,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2014,f183])).
fof(f2014,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2013,f187])).
fof(f2013,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f1137,f189])).
fof(f2468,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2467,f142])).
fof(f2467,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2466,f200])).
fof(f2466,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2465,f142])).
fof(f2465,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2464,f331])).
fof(f2464,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2463,f169])).
fof(f2463,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2057,f173])).
fof(f2057,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2056,f183])).
fof(f2056,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2055,f187])).
fof(f2055,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f1079,f189])).
fof(f2462,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2461,f153])).
fof(f2461,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2460,f200])).
fof(f2460,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2459,f142])).
fof(f2459,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2458,f331])).
fof(f2458,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2457,f169])).
fof(f2457,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2091,f173])).
fof(f2091,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2090,f183])).
fof(f2090,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2089,f187])).
fof(f2089,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f1029,f189])).
fof(f2453,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2452,f142])).
fof(f2452,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2451,f200])).
fof(f2451,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2450,f142])).
fof(f2450,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2449,f331])).
fof(f2449,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2448,f169])).
fof(f2448,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2119,f173])).
fof(f2119,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2118,f183])).
fof(f2118,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2117,f187])).
fof(f2117,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f987,f189])).
fof(f2441,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2440,f142])).
fof(f2440,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2439,f200])).
fof(f2439,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2438,f142])).
fof(f2438,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2437,f331])).
fof(f2437,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2436,f169])).
fof(f2436,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2435,f173])).
fof(f2435,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2434,f183])).
fof(f2434,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2433,f187])).
fof(f2433,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21)),
  inference(subsumption_resolution,[],[f946,f189])).
fof(f2432,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2431,f142])).
fof(f2431,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2430,f200])).
fof(f2430,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2429,f142])).
fof(f2429,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2428,f331])).
fof(f2428,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2230,f169])).
fof(f2230,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2229,f731])).
fof(f2229,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2228,f471])).
fof(f2228,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2227,f179])).
fof(f2227,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2226,f183])).
fof(f2226,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2225,f187])).
fof(f2225,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl21)),
  inference(subsumption_resolution,[],[f2173,f189])).
fof(f2424,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2423,f142])).
fof(f2423,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2422,f200])).
fof(f2422,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2421,f142])).
fof(f2421,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f2276,f331])).
fof(f2276,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2275,f173])).
fof(f2275,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2274,f731])).
fof(f2274,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2273,f471])).
fof(f2273,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2272,f179])).
fof(f2272,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2271,f183])).
fof(f2271,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f2270,f187])).
fof(f2270,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl21)),
  inference(subsumption_resolution,[],[f2248,f189])).
fof(f2419,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2418,f142])).
fof(f2418,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(forward_demodulation,[],[f2417,f200])).
fof(f2417,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2416,f142])).
fof(f2416,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(forward_demodulation,[],[f2389,f331])).
fof(f2389,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2388,f169])).
fof(f2388,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2387,f173])).
fof(f2387,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2386,f731])).
fof(f2386,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2385,f471])).
fof(f2385,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2384,f179])).
fof(f2384,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2383,f183])).
fof(f2383,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl19 | $spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2382,f187])).
fof(f2382,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl21 | $spl27)),
  inference(subsumption_resolution,[],[f2361,f189])).
fof(f2415,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2414,f142])).
fof(f2414,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f2413,f200])).
fof(f2413,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2412,f142])).
fof(f2412,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(forward_demodulation,[],[f2409,f331])).
fof(f2409,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2408,f169])).
fof(f2408,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2407,f173])).
fof(f2407,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2406,f731])).
fof(f2406,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2405,f471])).
fof(f2405,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2404,f179])).
fof(f2404,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl15 | $spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2403,f183])).
fof(f2403,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl19 | $spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2402,f187])).
fof(f2402,plain,(
  sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))) | ($spl21 | $spl27 | $spl30)),
  inference(subsumption_resolution,[],[f2401,f189])).
fof(f2372,plain,(
  $false | ($spl12 | $spl27)),
  inference(subsumption_resolution,[],[f2371,f154])).
fof(f154,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closProps.every_Fn_vs_NONE_ind',aHL_TRUTH)).
fof(f2371,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl27)),
  inference(forward_demodulation,[],[f2358,f2333])).
fof(f2333,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))) | $spl12),
  inference(subsumption_resolution,[],[f2332,f152])).
fof(f2332,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))) | $spl12),
  inference(superposition,[],[f182,f156])).
fof(f2358,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | $spl27),
  inference(resolution,[],[f195,f96])).
fof(f195,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl27),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f2327,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2326,f142])).
fof(f2326,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2325,f200])).
fof(f2325,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2324,f142])).
fof(f2324,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2323,f331])).
fof(f2323,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2322,f173])).
fof(f2322,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2321,f731])).
fof(f2321,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2320,f471])).
fof(f2320,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2319,f179])).
fof(f2319,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2318,f183])).
fof(f2318,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2317,f187])).
fof(f2317,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2316,f189])).
fof(f2316,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl30)),
  inference(subsumption_resolution,[],[f2253,f198])).
fof(f2253,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f133])).
fof(f133,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(X0)),s('type.list.list'('type.closLang.exp'),sK37(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(X0) | sP4(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK33(X0)),s('type.num.num',sK34(X0)),s('type.closLang.exp',sK35(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.closLang.exp'),sK31(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f2315,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2314,f142])).
fof(f2314,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2313,f200])).
fof(f2313,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2312,f142])).
fof(f2312,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2311,f331])).
fof(f2311,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2310,f173])).
fof(f2310,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2309,f731])).
fof(f2309,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2308,f471])).
fof(f2308,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2307,f179])).
fof(f2307,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2306,f183])).
fof(f2306,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2305,f187])).
fof(f2305,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2304,f189])).
fof(f170,plain,(
  sP1(sK8) | $spl0),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  sP1(sK8) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f2201,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP1(sK8)) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2200,f142])).
fof(f2200,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP1(sK8)) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2199,f200])).
fof(f2199,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2198,f142])).
fof(f2198,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2197,f331])).
fof(f2197,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2196,f731])).
fof(f2196,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2195,f471])).
fof(f2195,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2194,f179])).
fof(f2194,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2193,f183])).
fof(f2193,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2192,f187])).
fof(f2192,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2191,f189])).
fof(f2190,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2189,f142])).
fof(f2189,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2188,f200])).
fof(f2188,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2187,f142])).
fof(f2187,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2186,f331])).
fof(f2186,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2185,f731])).
fof(f2185,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2184,f471])).
fof(f2184,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2183,f179])).
fof(f2183,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2182,f183])).
fof(f2182,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2181,f187])).
fof(f2181,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2180,f189])).
fof(f2180,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl30)),
  inference(subsumption_resolution,[],[f2178,f198])).
fof(f2178,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f133])).
fof(f2179,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f1926,f170])).
fof(f1926,plain,(
  ~sP1(sK8)),
  inference(subsumption_resolution,[],[f1925,f119])).
fof(f119,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP1(X0)) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : (~sP1(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(X0)),s('type.list.list'('type.closLang.exp'),sK25(X0))))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(X0)),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(X0)),s('type.list.list'('type.closLang.exp'),sK25(X0)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK23,sK24,sK25])],[f71])).
fof(f71,plain,(
  ! [X0] : (~sP1(X0) | ? [X1,X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3))))))))))),
  inference(rectify,[],[f70])).
fof(f70,plain,(
  ! [X0] : (~sP1(X0) | ? [X26,X27,X28] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28)))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X26),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),X28))))))))))),
  inference(nnf_transformation,[],[f42])).
fof(f1925,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP1(sK8)),
  inference(subsumption_resolution,[],[f1742,f120])).
fof(f120,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(X0)),s('type.list.list'('type.closLang.exp'),sK25(X0))))))) | ~sP1(X0)) )),
  inference(cnf_transformation,[],[f72])).
fof(f1742,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(sK8)),s('type.list.list'('type.closLang.exp'),sK25(sK8))))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP1(sK8)),
  inference(resolution,[],[f90,f121])).
fof(f121,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(X0)),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(X0)),s('type.list.list'('type.closLang.exp'),sK25(X0))))))))) | ~sP1(X0)) )),
  inference(cnf_transformation,[],[f72])).
fof(f90,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29)))))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X28),s('type.list.list'('type.closLang.exp'),X29)))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f174,plain,(
  sP0(sK8) | $spl4),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  sP0(sK8) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f2153,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2152,f142])).
fof(f2152,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2151,f200])).
fof(f2151,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2150,f142])).
fof(f2150,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2149,f331])).
fof(f2149,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2148,f731])).
fof(f2148,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2147,f471])).
fof(f2147,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2146,f179])).
fof(f2146,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2145,f183])).
fof(f2145,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2144,f187])).
fof(f2144,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1857,f189])).
fof(f2143,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2142,f142])).
fof(f2142,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2141,f200])).
fof(f2141,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2140,f142])).
fof(f2140,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2139,f331])).
fof(f2139,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2138,f731])).
fof(f2138,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2137,f471])).
fof(f2137,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2136,f179])).
fof(f2136,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2135,f183])).
fof(f2135,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2134,f187])).
fof(f2134,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1858,f189])).
fof(f1858,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl30),
  inference(resolution,[],[f198,f133])).
fof(f2133,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2132,f142])).
fof(f2132,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2131,f200])).
fof(f2131,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2130,f142])).
fof(f2130,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2129,f331])).
fof(f2129,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2128,f183])).
fof(f2128,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2127,f187])).
fof(f2127,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2126,f189])).
fof(f2112,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2111,f142])).
fof(f2111,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2110,f200])).
fof(f2110,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2109,f142])).
fof(f2109,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2108,f331])).
fof(f2108,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2107,f183])).
fof(f2107,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2106,f187])).
fof(f2106,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2105,f189])).
fof(f2105,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1004,f198])).
fof(f1004,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1003,f731])).
fof(f1003,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1002,f471])).
fof(f1002,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f808,f179])).
fof(f808,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f131])).
fof(f131,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(X0)),s('type.list.list'('type.closLang.exp'),sK37(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(X0) | sP4(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.closLang.exp'),sK31(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f2104,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2103,f153])).
fof(f2103,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2102,f200])).
fof(f2102,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2101,f142])).
fof(f2101,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2100,f331])).
fof(f2100,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2099,f183])).
fof(f2099,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2098,f187])).
fof(f2098,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2097,f189])).
fof(f2088,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2087,f142])).
fof(f2087,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2086,f200])).
fof(f2086,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2085,f142])).
fof(f2085,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2084,f331])).
fof(f2084,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2083,f183])).
fof(f2083,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2082,f187])).
fof(f2082,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2081,f189])).
fof(f2081,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1038,f198])).
fof(f1038,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1037,f731])).
fof(f1037,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1036,f471])).
fof(f1036,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f793,f179])).
fof(f793,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f133])).
fof(f2080,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2079,f142])).
fof(f2079,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2078,f200])).
fof(f2078,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2077,f142])).
fof(f2077,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2076,f331])).
fof(f2076,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2075,f183])).
fof(f2075,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2074,f187])).
fof(f2074,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2073,f189])).
fof(f2046,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2045,f142])).
fof(f2045,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2044,f200])).
fof(f2044,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2043,f142])).
fof(f2043,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2042,f331])).
fof(f2042,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2041,f183])).
fof(f2041,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2040,f187])).
fof(f2040,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2039,f189])).
fof(f2039,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1102,f198])).
fof(f1102,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1101,f471])).
fof(f1101,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f740,f179])).
fof(f740,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f133])).
fof(f2038,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2037,f142])).
fof(f2037,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2036,f200])).
fof(f2036,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2035,f142])).
fof(f2035,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2034,f331])).
fof(f2034,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2033,f183])).
fof(f2033,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2032,f187])).
fof(f2032,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2031,f189])).
fof(f2004,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2003,f142])).
fof(f2003,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2002,f200])).
fof(f2002,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f2001,f142])).
fof(f2001,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f2000,f331])).
fof(f2000,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1999,f183])).
fof(f1999,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1998,f187])).
fof(f1998,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1997,f189])).
fof(f1997,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl30)),
  inference(subsumption_resolution,[],[f1160,f198])).
fof(f1160,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1159,f731])).
fof(f1159,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1158,f471])).
fof(f1158,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1157,f179])).
fof(f1157,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f655,f131])).
fof(f655,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f98,f133])).
fof(f1996,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1995,f153])).
fof(f1995,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1994,f200])).
fof(f1994,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1993,f142])).
fof(f1993,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1992,f331])).
fof(f1992,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1991,f183])).
fof(f1991,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1990,f187])).
fof(f1990,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1989,f189])).
fof(f1980,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1979,f142])).
fof(f1979,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1978,f200])).
fof(f1978,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1977,f142])).
fof(f1977,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1976,f331])).
fof(f1976,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1521,f198])).
fof(f1521,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1520,f731])).
fof(f1520,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1519,f471])).
fof(f1519,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1518,f179])).
fof(f1518,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1517,f183])).
fof(f1517,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1439,f187])).
fof(f1439,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f133])).
fof(f1975,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1974,f142])).
fof(f1974,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1973,f200])).
fof(f1973,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1972,f142])).
fof(f1972,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1971,f331])).
fof(f1971,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1510,f198])).
fof(f1510,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1509,f731])).
fof(f1509,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1508,f471])).
fof(f1508,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1507,f179])).
fof(f1507,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1506,f183])).
fof(f1506,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1438,f187])).
fof(f1438,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f132])).
fof(f1962,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1961,f142])).
fof(f1961,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1960,f200])).
fof(f1960,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1959,f142])).
fof(f1959,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1958,f331])).
fof(f1958,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1673,f198])).
fof(f1673,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1425,f189])).
fof(f1425,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1424,f731])).
fof(f1424,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1423,f471])).
fof(f1423,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1422,f179])).
fof(f1422,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1351,f183])).
fof(f1351,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f133])).
fof(f1957,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1956,f142])).
fof(f1956,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1955,f200])).
fof(f1955,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1954,f142])).
fof(f1954,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1953,f331])).
fof(f1953,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1679,f198])).
fof(f1679,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1415,f189])).
fof(f1944,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1943,f142])).
fof(f1943,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1942,f200])).
fof(f1942,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1941,f142])).
fof(f1941,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1940,f331])).
fof(f1940,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1704,f198])).
fof(f1704,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1703,f187])).
fof(f1703,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl21)),
  inference(subsumption_resolution,[],[f1337,f189])).
fof(f1337,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1336,f731])).
fof(f1336,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1335,f471])).
fof(f1335,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1271,f179])).
fof(f1271,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f133])).
fof(f1939,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1938,f142])).
fof(f1938,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8)) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1937,f200])).
fof(f1937,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1936,f142])).
fof(f1936,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(forward_demodulation,[],[f1935,f331])).
fof(f1935,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21 | $spl30)),
  inference(subsumption_resolution,[],[f1711,f198])).
fof(f1711,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1710,f187])).
fof(f1710,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl21)),
  inference(subsumption_resolution,[],[f1328,f189])).
fof(f1923,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f1922,f174])).
fof(f1922,plain,(
  ~sP0(sK8)),
  inference(subsumption_resolution,[],[f1921,f122])).
fof(f122,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : (~sP0(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK26(X0)),s('type.closLang.exp',sK27(X0)),s('type.closLang.exp',sK28(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK26,sK27,sK28])],[f74])).
fof(f74,plain,(
  ! [X0] : (~sP0(X0) | ? [X1,X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X3),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X1),s('type.closLang.exp',X2),s('type.closLang.exp',X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f73])).
fof(f73,plain,(
  ! [X0] : (~sP0(X0) | ? [X22,X23,X24] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X22),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X22),s('type.closLang.exp',X23),s('type.closLang.exp',X24))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f41])).
fof(f1921,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(sK8)),
  inference(subsumption_resolution,[],[f1920,f123])).
fof(f123,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f1920,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(sK8)),
  inference(subsumption_resolution,[],[f1909,f124])).
fof(f124,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f1909,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(sK8)),
  inference(resolution,[],[f92,f125])).
fof(f125,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',sK26(X0)),s('type.closLang.exp',sK27(X0)),s('type.closLang.exp',sK28(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP0(X0)) )),
  inference(cnf_transformation,[],[f75])).
fof(f92,plain,(
  ( ! [X24,X23,X25] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',X23),s('type.closLang.exp',X24),s('type.closLang.exp',X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X25),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X24),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X23),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f199,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl31),
  inference(cnf_transformation,[],[f199_D])).
fof(f199_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f1716,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1715,f142])).
fof(f1715,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1714,f200])).
fof(f1714,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1713,f142])).
fof(f1713,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1712,f331])).
fof(f1712,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1711,f169])).
fof(f1709,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1708,f142])).
fof(f1708,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1707,f200])).
fof(f1707,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1706,f142])).
fof(f1706,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1705,f331])).
fof(f1705,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1704,f169])).
fof(f1684,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1683,f142])).
fof(f1683,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1682,f200])).
fof(f1682,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1681,f142])).
fof(f1681,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1680,f331])).
fof(f1680,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1679,f169])).
fof(f1678,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1677,f142])).
fof(f1677,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1676,f200])).
fof(f1676,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1675,f142])).
fof(f1675,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1674,f331])).
fof(f1674,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1673,f169])).
fof(f1660,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1659,f142])).
fof(f1659,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1658,f200])).
fof(f1658,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1657,f142])).
fof(f1657,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1656,f331])).
fof(f1656,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1510,f169])).
fof(f1655,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1654,f142])).
fof(f1654,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1653,f200])).
fof(f1653,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1652,f142])).
fof(f1652,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1651,f331])).
fof(f1651,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1521,f169])).
fof(f1613,plain,(
  $false | ($spl22 | $spl31)),
  inference(subsumption_resolution,[],[f1612,f154])).
fof(f1612,plain,(
  ~p(s(bool,'T_0')) | ($spl22 | $spl31)),
  inference(forward_demodulation,[],[f1599,f1544])).
fof(f1544,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8)))) | $spl22),
  inference(subsumption_resolution,[],[f1543,f152])).
fof(f1543,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8)))) | $spl22),
  inference(superposition,[],[f192,f156])).
fof(f1599,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | $spl31),
  inference(resolution,[],[f199,f101])).
fof(f101,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f1527,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1526,f142])).
fof(f1526,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1525,f200])).
fof(f1525,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1524,f142])).
fof(f1524,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1523,f331])).
fof(f1523,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1522,f169])).
fof(f1522,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1521,f173])).
fof(f1516,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1515,f142])).
fof(f1515,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1514,f200])).
fof(f1514,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1513,f142])).
fof(f1513,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1512,f331])).
fof(f1512,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1511,f169])).
fof(f1511,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1510,f173])).
fof(f186,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl16),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1505,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1504,f142])).
fof(f1504,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1503,f200])).
fof(f1503,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1502,f142])).
fof(f1502,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1501,f331])).
fof(f1501,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1500,f169])).
fof(f1500,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1499,f173])).
fof(f1499,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1498,f731])).
fof(f1498,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1497,f471])).
fof(f1497,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1496,f179])).
fof(f1496,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1495,f183])).
fof(f1495,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1437,f187])).
fof(f1437,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f131])).
fof(f1494,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1493,f142])).
fof(f1493,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1492,f200])).
fof(f1492,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1491,f142])).
fof(f1491,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1490,f331])).
fof(f1490,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1489,f169])).
fof(f1489,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1488,f173])).
fof(f1488,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1487,f731])).
fof(f1487,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1486,f471])).
fof(f1486,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1485,f179])).
fof(f1485,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1484,f183])).
fof(f1484,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1436,f187])).
fof(f1436,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f130])).
fof(f1483,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1482,f142])).
fof(f1482,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1481,f200])).
fof(f1481,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1480,f142])).
fof(f1480,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1479,f331])).
fof(f1479,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1478,f169])).
fof(f1478,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1477,f173])).
fof(f1477,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1476,f731])).
fof(f1476,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1475,f471])).
fof(f1475,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1474,f179])).
fof(f1474,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1473,f183])).
fof(f1473,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1435,f187])).
fof(f1435,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f129])).
fof(f129,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK37(X0))))) | sP5(X0) | sP4(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(X0)),s('type.option.option'('type.list.list'('type.num.num')),sK33(X0)),s('type.num.num',sK34(X0)),s('type.closLang.exp',sK35(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.closLang.exp'),sK31(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f1472,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1471,f142])).
fof(f1471,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1470,f200])).
fof(f1470,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1469,f142])).
fof(f1469,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1468,f331])).
fof(f1468,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1467,f169])).
fof(f1467,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1466,f173])).
fof(f1461,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1460,f142])).
fof(f1460,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1459,f200])).
fof(f1459,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1458,f142])).
fof(f1458,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1457,f331])).
fof(f1457,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1456,f169])).
fof(f1456,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1455,f173])).
fof(f1455,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1454,f731])).
fof(f1454,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1453,f471])).
fof(f1453,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1452,f179])).
fof(f1452,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1451,f183])).
fof(f1451,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1433,f187])).
fof(f1433,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f127])).
fof(f127,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK37(X0))))) | sP5(X0) | sP4(X0) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(X0)),s('type.list.list'('type.closLang.exp'),sK31(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(X0) | sP6(X0) | sP2(X0) | sP0(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(X0) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f1450,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1449,f153])).
fof(f1449,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1448,f200])).
fof(f1448,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1447,f142])).
fof(f1447,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(forward_demodulation,[],[f1446,f331])).
fof(f1446,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1445,f169])).
fof(f1445,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1444,f173])).
fof(f1444,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1443,f731])).
fof(f1443,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1442,f471])).
fof(f1442,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1441,f179])).
fof(f1441,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1440,f183])).
fof(f1440,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl19 | $spl21)),
  inference(subsumption_resolution,[],[f1432,f187])).
fof(f1432,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl21),
  inference(resolution,[],[f189,f126])).
fof(f1431,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1430,f142])).
fof(f1430,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1429,f200])).
fof(f1429,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1428,f142])).
fof(f1428,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1427,f331])).
fof(f1427,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1426,f169])).
fof(f1426,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1425,f173])).
fof(f1421,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1420,f142])).
fof(f1420,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1419,f200])).
fof(f1419,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1418,f142])).
fof(f1418,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1417,f331])).
fof(f1417,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1416,f169])).
fof(f1416,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1415,f173])).
fof(f1411,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1410,f142])).
fof(f1410,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1409,f200])).
fof(f1409,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1408,f142])).
fof(f1408,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1407,f331])).
fof(f1407,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1406,f169])).
fof(f1406,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1405,f173])).
fof(f1405,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1404,f731])).
fof(f1404,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1403,f471])).
fof(f1403,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1402,f179])).
fof(f1402,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1349,f183])).
fof(f1349,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f131])).
fof(f1401,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1400,f142])).
fof(f1400,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1399,f200])).
fof(f1399,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1398,f142])).
fof(f1398,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1397,f331])).
fof(f1397,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1396,f169])).
fof(f1396,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1395,f173])).
fof(f1395,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1394,f731])).
fof(f1394,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1393,f471])).
fof(f1393,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1392,f179])).
fof(f1392,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1348,f183])).
fof(f1348,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f130])).
fof(f1391,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1390,f142])).
fof(f1390,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1389,f200])).
fof(f1389,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1388,f142])).
fof(f1388,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1387,f331])).
fof(f1387,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1386,f169])).
fof(f1386,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1385,f173])).
fof(f1385,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1384,f731])).
fof(f1384,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1383,f471])).
fof(f1383,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1382,f179])).
fof(f1382,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1347,f183])).
fof(f1347,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f129])).
fof(f1381,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1380,f142])).
fof(f1380,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1379,f200])).
fof(f1379,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1378,f142])).
fof(f1378,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1377,f331])).
fof(f1377,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1376,f169])).
fof(f1376,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1375,f173])).
fof(f1371,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1370,f142])).
fof(f1370,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1369,f200])).
fof(f1369,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1368,f142])).
fof(f1368,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1367,f331])).
fof(f1367,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1366,f169])).
fof(f1366,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1365,f173])).
fof(f1365,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1364,f731])).
fof(f1364,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1363,f471])).
fof(f1363,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1362,f179])).
fof(f1362,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1345,f183])).
fof(f1345,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f127])).
fof(f1361,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1360,f153])).
fof(f1360,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1359,f200])).
fof(f1359,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1358,f142])).
fof(f1358,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(forward_demodulation,[],[f1357,f331])).
fof(f1357,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1356,f169])).
fof(f1356,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1355,f173])).
fof(f1355,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1354,f731])).
fof(f1354,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1353,f471])).
fof(f1353,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1352,f179])).
fof(f1352,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl15 | $spl19)),
  inference(subsumption_resolution,[],[f1344,f183])).
fof(f1344,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl19),
  inference(resolution,[],[f187,f126])).
fof(f1343,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1342,f142])).
fof(f1342,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1341,f200])).
fof(f1341,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1340,f142])).
fof(f1340,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1339,f331])).
fof(f1339,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1338,f169])).
fof(f1338,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1337,f173])).
fof(f1334,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1333,f142])).
fof(f1333,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1332,f200])).
fof(f1332,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1331,f142])).
fof(f1331,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1330,f331])).
fof(f1330,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1329,f169])).
fof(f1329,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1328,f173])).
fof(f1325,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1324,f142])).
fof(f1324,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1323,f200])).
fof(f1323,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1322,f142])).
fof(f1322,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1321,f331])).
fof(f1321,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1320,f169])).
fof(f1320,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1319,f173])).
fof(f1319,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1318,f731])).
fof(f1318,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1317,f471])).
fof(f1317,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1269,f179])).
fof(f1269,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f131])).
fof(f1316,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1315,f142])).
fof(f1315,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1314,f200])).
fof(f1314,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1313,f142])).
fof(f1313,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1312,f331])).
fof(f1312,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1311,f169])).
fof(f1311,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1310,f173])).
fof(f1310,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1309,f731])).
fof(f1309,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1308,f471])).
fof(f1308,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1268,f179])).
fof(f1268,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f130])).
fof(f1307,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1306,f142])).
fof(f1306,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1305,f200])).
fof(f1305,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1304,f142])).
fof(f1304,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1303,f331])).
fof(f1303,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1302,f169])).
fof(f1302,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1301,f173])).
fof(f1301,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1300,f731])).
fof(f1300,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1299,f471])).
fof(f1299,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1267,f179])).
fof(f1267,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f129])).
fof(f1298,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1297,f142])).
fof(f1297,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1296,f200])).
fof(f1296,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1295,f142])).
fof(f1295,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1294,f331])).
fof(f1294,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1293,f169])).
fof(f1293,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1292,f173])).
fof(f1289,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1288,f142])).
fof(f1288,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1287,f200])).
fof(f1287,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1286,f142])).
fof(f1286,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1285,f331])).
fof(f1285,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1284,f169])).
fof(f1284,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1283,f173])).
fof(f1283,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1282,f731])).
fof(f1282,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1281,f471])).
fof(f1281,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1265,f179])).
fof(f1265,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f127])).
fof(f1280,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1279,f153])).
fof(f1279,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1278,f200])).
fof(f1278,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1277,f142])).
fof(f1277,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(forward_demodulation,[],[f1276,f331])).
fof(f1276,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1275,f169])).
fof(f1275,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1274,f173])).
fof(f1274,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1273,f731])).
fof(f1273,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1272,f471])).
fof(f1272,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl11 | $spl15)),
  inference(subsumption_resolution,[],[f1264,f179])).
fof(f1264,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl15),
  inference(resolution,[],[f183,f126])).
fof(f184,plain,(
  sP3(sK8) | $spl14),
  inference(cnf_transformation,[],[f184_D])).
fof(f184_D,plain,(
  sP3(sK8) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1263,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1262,f142])).
fof(f1262,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1261,f200])).
fof(f1261,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1260,f142])).
fof(f1260,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1259,f331])).
fof(f1259,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1258,f169])).
fof(f1258,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1257,f731])).
fof(f1257,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1256,f471])).
fof(f1256,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1199,f179])).
fof(f1199,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f133])).
fof(f1255,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1254,f142])).
fof(f1254,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1253,f200])).
fof(f1253,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1252,f142])).
fof(f1252,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1251,f331])).
fof(f1251,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1250,f169])).
fof(f1250,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1249,f731])).
fof(f1249,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1248,f471])).
fof(f1248,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1198,f179])).
fof(f1198,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f132])).
fof(f1247,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1246,f142])).
fof(f1246,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1245,f200])).
fof(f1245,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1244,f142])).
fof(f1244,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1243,f331])).
fof(f1243,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1242,f169])).
fof(f1242,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1241,f731])).
fof(f1241,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1240,f471])).
fof(f1240,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1197,f179])).
fof(f1197,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f131])).
fof(f1239,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1238,f142])).
fof(f1238,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1237,f200])).
fof(f1237,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1236,f142])).
fof(f1236,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1235,f331])).
fof(f1235,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1234,f169])).
fof(f1234,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1233,f731])).
fof(f1233,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1232,f471])).
fof(f1232,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1196,f179])).
fof(f1196,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f130])).
fof(f1231,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1230,f142])).
fof(f1230,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1229,f200])).
fof(f1229,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1228,f142])).
fof(f1228,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1227,f331])).
fof(f1227,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1226,f169])).
fof(f1226,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1225,f731])).
fof(f1225,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1224,f471])).
fof(f1224,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1195,f179])).
fof(f1195,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f129])).
fof(f1223,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1222,f142])).
fof(f1222,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1221,f200])).
fof(f1221,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1220,f142])).
fof(f1220,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1219,f331])).
fof(f1219,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1218,f169])).
fof(f1218,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1217,f731])).
fof(f1217,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1216,f471])).
fof(f1216,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1194,f179])).
fof(f1194,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f128])).
fof(f1215,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1214,f142])).
fof(f1214,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1213,f200])).
fof(f1213,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1212,f142])).
fof(f1212,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1211,f331])).
fof(f1211,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1210,f169])).
fof(f1210,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1209,f731])).
fof(f1209,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1208,f471])).
fof(f1208,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1193,f179])).
fof(f1193,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f127])).
fof(f1207,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1206,f153])).
fof(f1206,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8)))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1205,f200])).
fof(f1205,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1204,f142])).
fof(f1204,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(forward_demodulation,[],[f1203,f331])).
fof(f1203,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1202,f169])).
fof(f1202,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1201,f731])).
fof(f1201,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1200,f471])).
fof(f1200,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f1192,f179])).
fof(f1192,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl5),
  inference(resolution,[],[f173,f126])).
fof(f1191,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1190,f153])).
fof(f1190,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1189,f200])).
fof(f1189,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1188,f142])).
fof(f1188,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1187,f331])).
fof(f1187,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1186,f169])).
fof(f1182,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1181,f142])).
fof(f1181,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1180,f200])).
fof(f1180,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1179,f142])).
fof(f1179,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1178,f331])).
fof(f1178,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1177,f169])).
fof(f1177,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1176,f731])).
fof(f1176,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1175,f471])).
fof(f1175,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1174,f179])).
fof(f1174,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f653,f127])).
fof(f653,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f98,f129])).
fof(f1173,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1172,f142])).
fof(f1172,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1171,f200])).
fof(f1171,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1170,f142])).
fof(f1170,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1169,f331])).
fof(f1169,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1168,f169])).
fof(f1165,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1164,f142])).
fof(f1164,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1163,f200])).
fof(f1163,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1162,f142])).
fof(f1162,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1161,f331])).
fof(f1161,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1160,f169])).
fof(f1156,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1155,f153])).
fof(f1155,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1154,f200])).
fof(f1154,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1153,f142])).
fof(f1153,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1152,f331])).
fof(f1152,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1151,f169])).
fof(f1151,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1150,f471])).
fof(f1150,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f733,f179])).
fof(f733,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f126])).
fof(f1149,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1148,f142])).
fof(f1148,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1147,f200])).
fof(f1147,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1146,f142])).
fof(f1146,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1145,f331])).
fof(f1145,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1144,f169])).
fof(f1144,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1143,f471])).
fof(f1143,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f734,f179])).
fof(f734,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f127])).
fof(f1142,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1141,f142])).
fof(f1141,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1140,f200])).
fof(f1140,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1139,f142])).
fof(f1139,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1138,f331])).
fof(f1138,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1137,f169])).
fof(f1135,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1134,f142])).
fof(f1134,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1133,f200])).
fof(f1133,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1132,f142])).
fof(f1132,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1131,f331])).
fof(f1131,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1130,f169])).
fof(f1130,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1129,f471])).
fof(f1129,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f736,f179])).
fof(f736,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f129])).
fof(f1128,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1127,f142])).
fof(f1127,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1126,f200])).
fof(f1126,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1125,f142])).
fof(f1125,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1124,f331])).
fof(f1124,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1123,f169])).
fof(f1123,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1122,f471])).
fof(f1122,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f737,f179])).
fof(f737,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f130])).
fof(f1121,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1120,f142])).
fof(f1120,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1119,f200])).
fof(f1119,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1118,f142])).
fof(f1118,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1117,f331])).
fof(f1117,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1116,f169])).
fof(f1116,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1115,f471])).
fof(f1115,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f738,f179])).
fof(f738,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f731,f131])).
fof(f1114,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1113,f142])).
fof(f1113,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1112,f200])).
fof(f1112,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1111,f142])).
fof(f1111,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1110,f331])).
fof(f1110,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1109,f169])).
fof(f1107,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1106,f142])).
fof(f1106,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1105,f200])).
fof(f1105,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1104,f142])).
fof(f1104,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1103,f331])).
fof(f1103,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1102,f169])).
fof(f1100,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1099,f153])).
fof(f1099,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1098,f200])).
fof(f1098,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1097,f142])).
fof(f1097,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1096,f331])).
fof(f1096,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1095,f169])).
fof(f1095,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1094,f731])).
fof(f1094,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1093,f471])).
fof(f1093,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f786,f179])).
fof(f786,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X18),s('type.list.list'('type.closLang.exp'),X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f126])).
fof(f1092,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1091,f142])).
fof(f1091,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1090,f200])).
fof(f1090,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1089,f142])).
fof(f1089,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1088,f331])).
fof(f1088,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1087,f169])).
fof(f1087,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1086,f731])).
fof(f1086,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1085,f471])).
fof(f1085,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f787,f179])).
fof(f787,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X20),s('type.list.list'('type.closLang.exp'),X21))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f127])).
fof(f1084,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1083,f142])).
fof(f1083,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1082,f200])).
fof(f1082,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1081,f142])).
fof(f1081,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1080,f331])).
fof(f1080,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X22),s('type.list.list'('type.closLang.exp'),X23))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1079,f169])).
fof(f1076,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1075,f142])).
fof(f1075,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1074,f200])).
fof(f1074,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1073,f142])).
fof(f1073,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1072,f331])).
fof(f1072,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1071,f169])).
fof(f1071,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1070,f731])).
fof(f1070,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1069,f471])).
fof(f1069,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f789,f179])).
fof(f789,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X24),s('type.list.list'('type.closLang.exp'),X25))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f129])).
fof(f1068,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1067,f142])).
fof(f1067,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1066,f200])).
fof(f1066,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1065,f142])).
fof(f1065,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1064,f331])).
fof(f1064,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1063,f169])).
fof(f1063,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1062,f731])).
fof(f1062,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1061,f471])).
fof(f1061,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f790,f179])).
fof(f790,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X26),s('type.list.list'('type.closLang.exp'),X27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f130])).
fof(f1060,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1059,f142])).
fof(f1059,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1058,f200])).
fof(f1058,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1057,f142])).
fof(f1057,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1056,f331])).
fof(f1056,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1055,f169])).
fof(f1055,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1054,f731])).
fof(f1054,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1053,f471])).
fof(f1053,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f791,f179])).
fof(f791,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X28),s('type.list.list'('type.closLang.exp'),X29))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f131])).
fof(f1052,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1051,f142])).
fof(f1051,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1050,f200])).
fof(f1050,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1049,f142])).
fof(f1049,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1048,f331])).
fof(f1048,plain,(
  ( ! [X30,X31] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X30),s('type.list.list'('type.closLang.exp'),X31))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1047,f169])).
fof(f1043,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1042,f142])).
fof(f1042,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1041,f200])).
fof(f1041,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1040,f142])).
fof(f1040,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1039,f331])).
fof(f1039,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X32),s('type.list.list'('type.closLang.exp'),X33))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1038,f169])).
fof(f183,plain,(
  ~sP3(sK8) | $spl15),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  ~sP3(sK8) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f1035,plain,(
  ( ! [X39] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl58),
  inference(cnf_transformation,[],[f1035_D])).
fof(f1035_D,plain,(
  ( ! [X39] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f799,plain,(
  ( ! [X39] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X39),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP3(sK8)) )),
  inference(resolution,[],[f354,f114])).
fof(f114,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP3(X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : (~sP3(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK20(X0))))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK18(X0)),s('type.closLang.exp',sK19(X0)),s('type.list.list'('type.closLang.exp'),sK20(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19,sK20])],[f65])).
fof(f65,plain,(
  ! [X0] : (~sP3(X0) | ? [X1,X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X3)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X1),s('type.closLang.exp',X2),s('type.list.list'('type.closLang.exp'),X3))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f64])).
fof(f64,plain,(
  ! [X0] : (~sP3(X0) | ? [X13,X14,X15] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),X15)))) & p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X13),s('type.closLang.exp',X14),s('type.list.list'('type.closLang.exp'),X15))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f44])).
fof(f1034,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1033,f153])).
fof(f1033,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1032,f200])).
fof(f1032,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1031,f142])).
fof(f1031,plain,(
  ( ! [X45,X46] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1030,f331])).
fof(f1030,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X45),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X46)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1029,f169])).
fof(f1026,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1025,f142])).
fof(f1025,plain,(
  ( ! [X47,X48] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1024,f200])).
fof(f1024,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1023,f142])).
fof(f1023,plain,(
  ( ! [X47,X48] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1022,f331])).
fof(f1022,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1021,f169])).
fof(f1021,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1020,f731])).
fof(f1020,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f1019,f471])).
fof(f1019,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f806,f179])).
fof(f806,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X47),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X48)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f127])).
fof(f1018,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1017,f142])).
fof(f1017,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1016,f200])).
fof(f1016,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1015,f142])).
fof(f1015,plain,(
  ( ! [X50,X49] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1014,f331])).
fof(f1014,plain,(
  ( ! [X50,X49] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X49),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X50)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1013,f169])).
fof(f1009,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1008,f142])).
fof(f1008,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1007,f200])).
fof(f1007,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1006,f142])).
fof(f1006,plain,(
  ( ! [X52,X51] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f1005,f331])).
fof(f1005,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X51),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X52)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f1004,f169])).
fof(f1001,plain,(
  ( ! [X55] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X55),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl54),
  inference(cnf_transformation,[],[f1001_D])).
fof(f1001_D,plain,(
  ( ! [X55] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X55),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f811,plain,(
  ( ! [X55] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X55),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP3(sK8)) )),
  inference(resolution,[],[f354,f113])).
fof(f113,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),sK20(X0))))) | ~sP3(X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f1000,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f999,f153])).
fof(f999,plain,(
  ( ! [X57,X58] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f998,f200])).
fof(f998,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f997,f142])).
fof(f997,plain,(
  ( ! [X57,X58] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f996,f331])).
fof(f996,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f995,f169])).
fof(f995,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f994,f731])).
fof(f994,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f993,f471])).
fof(f993,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f813,f179])).
fof(f813,plain,(
  ( ! [X57,X58] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X57),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X58)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f126])).
fof(f992,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f991,f142])).
fof(f991,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f990,f200])).
fof(f990,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f989,f142])).
fof(f989,plain,(
  ( ! [X59,X60] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f988,f331])).
fof(f988,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X59),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X60)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f987,f169])).
fof(f984,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f983,f142])).
fof(f983,plain,(
  ( ! [X61,X62] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f982,f200])).
fof(f982,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f981,f142])).
fof(f981,plain,(
  ( ! [X61,X62] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f980,f331])).
fof(f980,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f979,f169])).
fof(f979,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f978,f731])).
fof(f978,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f977,f471])).
fof(f977,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f815,f179])).
fof(f815,plain,(
  ( ! [X61,X62] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X61),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X62)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f130])).
fof(f975,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f974,f142])).
fof(f974,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f973,f200])).
fof(f973,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f972,f142])).
fof(f972,plain,(
  ( ! [X64,X63] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f971,f331])).
fof(f971,plain,(
  ( ! [X64,X63] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X63),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X64)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f970,f169])).
fof(f967,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f966,f153])).
fof(f966,plain,(
  ( ! [X66,X65] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f965,f200])).
fof(f965,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f964,f142])).
fof(f964,plain,(
  ( ! [X66,X65] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f963,f331])).
fof(f963,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f962,f169])).
fof(f962,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f961,f731])).
fof(f961,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f960,f471])).
fof(f960,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f817,f179])).
fof(f817,plain,(
  ( ! [X66,X65] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X65),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X66)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f126])).
fof(f959,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f958,f142])).
fof(f958,plain,(
  ( ! [X68,X67] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f957,f200])).
fof(f957,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f956,f142])).
fof(f956,plain,(
  ( ! [X68,X67] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f955,f331])).
fof(f955,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f954,f169])).
fof(f954,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f953,f731])).
fof(f953,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f952,f471])).
fof(f952,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f818,f179])).
fof(f818,plain,(
  ( ! [X68,X67] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X67),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X68)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f127])).
fof(f951,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f950,f142])).
fof(f950,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f949,f200])).
fof(f949,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f948,f142])).
fof(f948,plain,(
  ( ! [X70,X69] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f947,f331])).
fof(f947,plain,(
  ( ! [X70,X69] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X69),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X70)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f946,f169])).
fof(f942,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f941,f142])).
fof(f941,plain,(
  ( ! [X72,X71] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f940,f200])).
fof(f940,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f939,f142])).
fof(f939,plain,(
  ( ! [X72,X71] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f938,f331])).
fof(f938,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f937,f169])).
fof(f937,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f936,f731])).
fof(f936,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f935,f471])).
fof(f935,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f820,f179])).
fof(f820,plain,(
  ( ! [X72,X71] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X71),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X72)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f354,f129])).
fof(f934,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f933,f153])).
fof(f933,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f932,f200])).
fof(f932,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f931,f142])).
fof(f931,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f930,f331])).
fof(f930,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f929,f731])).
fof(f929,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f928,f471])).
fof(f928,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f849,f179])).
fof(f849,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f126])).
fof(f927,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f926,f142])).
fof(f926,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f925,f200])).
fof(f925,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f924,f142])).
fof(f924,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f923,f331])).
fof(f923,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f922,f731])).
fof(f922,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f921,f471])).
fof(f921,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f850,f179])).
fof(f850,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f127])).
fof(f920,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f919,f142])).
fof(f919,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f918,f200])).
fof(f918,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f917,f142])).
fof(f917,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f916,f331])).
fof(f916,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f915,f731])).
fof(f915,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f914,f471])).
fof(f914,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f851,f179])).
fof(f851,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f128])).
fof(f913,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f912,f142])).
fof(f912,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f911,f200])).
fof(f911,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f910,f142])).
fof(f910,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f909,f331])).
fof(f909,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f908,f731])).
fof(f908,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f907,f471])).
fof(f907,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f852,f179])).
fof(f852,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f129])).
fof(f906,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f905,f142])).
fof(f905,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f904,f200])).
fof(f904,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f903,f142])).
fof(f903,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f902,f331])).
fof(f902,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f901,f731])).
fof(f901,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f900,f471])).
fof(f900,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f853,f179])).
fof(f853,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f130])).
fof(f899,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f898,f142])).
fof(f898,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f897,f200])).
fof(f897,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f896,f142])).
fof(f896,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f895,f331])).
fof(f895,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f894,f731])).
fof(f894,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f893,f471])).
fof(f893,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f854,f179])).
fof(f854,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f131])).
fof(f892,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f891,f142])).
fof(f891,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f890,f200])).
fof(f890,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f889,f142])).
fof(f889,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f888,f331])).
fof(f888,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f887,f731])).
fof(f887,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f886,f471])).
fof(f886,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f855,f179])).
fof(f855,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f132])).
fof(f885,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f884,f142])).
fof(f884,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8)) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f883,f200])).
fof(f883,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f882,f142])).
fof(f882,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(forward_demodulation,[],[f881,f331])).
fof(f881,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f880,f731])).
fof(f880,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f879,f471])).
fof(f879,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f856,f179])).
fof(f856,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl1),
  inference(resolution,[],[f169,f133])).
fof(f877,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f876,f154])).
fof(f876,plain,(
  ~p(s(bool,'T_0')) | $spl14),
  inference(forward_demodulation,[],[f875,f677])).
fof(f677,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8)))) | $spl14),
  inference(subsumption_resolution,[],[f676,f152])).
fof(f676,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8)))) | $spl14),
  inference(superposition,[],[f649,f156])).
fof(f649,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | $spl14),
  inference(resolution,[],[f184,f113])).
fof(f875,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | $spl14),
  inference(subsumption_resolution,[],[f874,f144])).
fof(f144,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X24] : ((p(s(bool,'T_0')) & p(s(bool,X24))) <=> p(s(bool,X24)))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.bool.AND_CLAUSES|split|0')).
fof(f874,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | $spl14),
  inference(forward_demodulation,[],[f873,f701])).
fof(f701,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(subsumption_resolution,[],[f700,f152])).
fof(f700,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(superposition,[],[f650,f156])).
fof(f650,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl14),
  inference(resolution,[],[f184,f114])).
fof(f873,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | $spl14),
  inference(subsumption_resolution,[],[f867,f152])).
fof(f867,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | $spl14),
  inference(superposition,[],[f97,f753])).
fof(f753,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK18(sK8)),s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(subsumption_resolution,[],[f751,f153])).
fof(f751,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK18(sK8)),s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl14),
  inference(superposition,[],[f651,f156])).
fof(f651,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK18(sK8)),s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),sK20(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl14),
  inference(resolution,[],[f184,f115])).
fof(f115,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),sK18(X0)),s('type.closLang.exp',sK19(X0)),s('type.list.list'('type.closLang.exp'),sK20(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP3(X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f97,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),X14),s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),X16))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X15),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X16))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f872,plain,(
  $false | $spl14),
  inference(subsumption_resolution,[],[f871,f184])).
fof(f871,plain,(
  ~sP3(sK8)),
  inference(subsumption_resolution,[],[f870,f113])).
fof(f870,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | ~sP3(sK8)),
  inference(subsumption_resolution,[],[f858,f114])).
fof(f858,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK19(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK20(sK8))))) | ~sP3(sK8)),
  inference(resolution,[],[f97,f115])).
fof(f187,plain,(
  ~sP4(sK8) | $spl19),
  inference(cnf_transformation,[],[f187_D])).
fof(f187_D,plain,(
  ~sP4(sK8) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f842,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X54),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl48),
  inference(cnf_transformation,[],[f842_D])).
fof(f842_D,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X54),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f810,plain,(
  ( ! [X54] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X54),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s(fun('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),sK16(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP4(sK8)) )),
  inference(resolution,[],[f354,f111])).
fof(f169,plain,(
  ~sP1(sK8) | $spl1),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  ~sP1(sK8) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f841,plain,(
  ( ! [X53] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(sK8)),s('type.list.list'('type.closLang.exp'),sK25(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl46),
  inference(cnf_transformation,[],[f841_D])).
fof(f841_D,plain,(
  ( ! [X53] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(sK8)),s('type.list.list'('type.closLang.exp'),sK25(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f809,plain,(
  ( ! [X53] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X53),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK24(sK8)),s('type.list.list'('type.closLang.exp'),sK25(sK8)))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP1(sK8)) )),
  inference(resolution,[],[f354,f120])).
fof(f173,plain,(
  ~sP0(sK8) | $spl5),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  ~sP0(sK8) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f840,plain,(
  ( ! [X44] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl44),
  inference(cnf_transformation,[],[f840_D])).
fof(f840_D,plain,(
  ( ! [X44] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f804,plain,(
  ( ! [X44] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X44),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK28(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP0(sK8)) )),
  inference(resolution,[],[f354,f124])).
fof(f839,plain,(
  ( ! [X43] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X43),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl42),
  inference(cnf_transformation,[],[f839_D])).
fof(f839_D,plain,(
  ( ! [X43] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X43),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f803,plain,(
  ( ! [X43] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X43),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK27(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP0(sK8)) )),
  inference(resolution,[],[f354,f123])).
fof(f838,plain,(
  ( ! [X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl40),
  inference(cnf_transformation,[],[f838_D])).
fof(f838_D,plain,(
  ( ! [X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f802,plain,(
  ( ! [X42] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X42),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK26(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP0(sK8)) )),
  inference(resolution,[],[f354,f122])).
fof(f837,plain,(
  ( ! [X41] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X41),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl38),
  inference(cnf_transformation,[],[f837_D])).
fof(f837_D,plain,(
  ( ! [X41] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X41),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f801,plain,(
  ( ! [X41] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X41),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK23(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP1(sK8)) )),
  inference(resolution,[],[f354,f119])).
fof(f835,plain,(
  ( ! [X38] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl36),
  inference(cnf_transformation,[],[f835_D])).
fof(f835_D,plain,(
  ( ! [X38] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f798,plain,(
  ( ! [X38] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X38),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK17(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP4(sK8)) )),
  inference(resolution,[],[f354,f110])).
fof(f189,plain,(
  ~sP5(sK8) | $spl21),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  ~sP5(sK8) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f834,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl34),
  inference(cnf_transformation,[],[f834_D])).
fof(f834_D,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f797,plain,(
  ( ! [X37] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X37),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK13(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP5(sK8)) )),
  inference(resolution,[],[f354,f108])).
fof(f833,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X36),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) | $spl32),
  inference(cnf_transformation,[],[f833_D])).
fof(f833_D,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X36),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f796,plain,(
  ( ! [X36] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',X36),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK12(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | ~sP5(sK8)) )),
  inference(resolution,[],[f354,f107])).
fof(f176,plain,(
  sP2(sK8) | $spl6),
  inference(cnf_transformation,[],[f176_D])).
fof(f176_D,plain,(
  sP2(sK8) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f648,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f647,f142])).
fof(f647,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f646,f200])).
fof(f646,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f645,f142])).
fof(f645,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f644,f331])).
fof(f644,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f608,f471])).
fof(f608,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f133])).
fof(f643,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f642,f142])).
fof(f642,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f641,f200])).
fof(f641,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f640,f142])).
fof(f640,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f639,f331])).
fof(f639,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f607,f471])).
fof(f607,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f132])).
fof(f638,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f637,f142])).
fof(f637,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f636,f200])).
fof(f636,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f635,f142])).
fof(f635,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f634,f331])).
fof(f634,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f606,f471])).
fof(f606,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f131])).
fof(f633,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f632,f142])).
fof(f632,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f631,f200])).
fof(f631,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f630,f142])).
fof(f630,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f629,f331])).
fof(f629,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f605,f471])).
fof(f605,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f130])).
fof(f628,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f627,f142])).
fof(f627,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f626,f200])).
fof(f626,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f625,f142])).
fof(f625,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f624,f331])).
fof(f624,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f604,f471])).
fof(f604,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f129])).
fof(f623,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f622,f142])).
fof(f622,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f621,f200])).
fof(f621,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f620,f142])).
fof(f620,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f619,f331])).
fof(f619,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f603,f471])).
fof(f603,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f128])).
fof(f618,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f617,f142])).
fof(f617,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f616,f200])).
fof(f616,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f615,f142])).
fof(f615,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f614,f331])).
fof(f614,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f602,f471])).
fof(f602,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f127])).
fof(f613,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(subsumption_resolution,[],[f612,f153])).
fof(f612,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8)) ) | $spl11),
  inference(forward_demodulation,[],[f611,f200])).
fof(f611,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f610,f142])).
fof(f610,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(forward_demodulation,[],[f609,f331])).
fof(f609,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(subsumption_resolution,[],[f601,f471])).
fof(f601,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) ) | $spl11),
  inference(resolution,[],[f179,f126])).
fof(f180,plain,(
  sP7(sK8) | $spl10),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  sP7(sK8) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f600,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f599,f153])).
fof(f599,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f598,f200])).
fof(f598,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f597,f142])).
fof(f597,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f596,f331])).
fof(f596,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f595,f471])).
fof(f595,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f339,f126])).
fof(f339,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f96,f127])).
fof(f594,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f593,f142])).
fof(f593,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f592,f200])).
fof(f592,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f591,f142])).
fof(f591,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f590,f331])).
fof(f590,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f351,f471])).
fof(f351,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f340,f128])).
fof(f340,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f96,f129])).
fof(f589,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f588,f142])).
fof(f588,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f587,f200])).
fof(f587,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f586,f142])).
fof(f586,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f585,f331])).
fof(f585,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f352,f471])).
fof(f352,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f341,f130])).
fof(f341,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f96,f131])).
fof(f584,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f583,f142])).
fof(f583,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f582,f200])).
fof(f582,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f581,f142])).
fof(f581,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f580,f331])).
fof(f580,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f353,f471])).
fof(f353,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f342,f132])).
fof(f342,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f96,f133])).
fof(f579,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f578,f153])).
fof(f578,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f577,f200])).
fof(f577,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f576,f471])).
fof(f576,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f395,f142])).
fof(f395,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f126,f331])).
fof(f575,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f574,f142])).
fof(f574,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f573,f200])).
fof(f573,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f572,f471])).
fof(f572,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f396,f142])).
fof(f396,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f127,f331])).
fof(f571,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f570,f142])).
fof(f570,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f569,f200])).
fof(f569,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f568,f471])).
fof(f568,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f397,f142])).
fof(f397,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f128,f331])).
fof(f567,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f566,f142])).
fof(f566,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f565,f200])).
fof(f565,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f564,f471])).
fof(f564,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f398,f142])).
fof(f398,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f129,f331])).
fof(f563,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f562,f142])).
fof(f562,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f561,f200])).
fof(f561,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f560,f471])).
fof(f560,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f399,f142])).
fof(f399,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f130,f331])).
fof(f559,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f558,f142])).
fof(f558,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f557,f200])).
fof(f557,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f556,f471])).
fof(f556,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f400,f142])).
fof(f400,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f131,f331])).
fof(f555,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f554,f142])).
fof(f554,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f553,f200])).
fof(f553,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f552,f471])).
fof(f552,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f401,f142])).
fof(f401,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f132,f331])).
fof(f551,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f550,f142])).
fof(f550,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f549,f200])).
fof(f549,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f548,f471])).
fof(f548,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f402,f142])).
fof(f402,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f133,f331])).
fof(f547,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f546,f153])).
fof(f546,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f545,f200])).
fof(f545,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f544,f142])).
fof(f544,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f543,f331])).
fof(f543,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f542,f471])).
fof(f542,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f445,f126])).
fof(f445,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f101,f130])).
fof(f541,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f540,f142])).
fof(f540,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f539,f200])).
fof(f539,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f538,f142])).
fof(f538,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f537,f331])).
fof(f537,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f460,f471])).
fof(f460,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f446,f127])).
fof(f446,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f101,f131])).
fof(f536,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f535,f142])).
fof(f535,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f534,f200])).
fof(f534,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f533,f142])).
fof(f533,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f532,f331])).
fof(f532,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f461,f471])).
fof(f461,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f447,f128])).
fof(f447,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f101,f132])).
fof(f531,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f530,f142])).
fof(f530,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f529,f200])).
fof(f529,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f528,f142])).
fof(f528,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f527,f331])).
fof(f527,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f462,f471])).
fof(f462,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f448,f129])).
fof(f448,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f101,f133])).
fof(f526,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f525,f153])).
fof(f525,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f524,f200])).
fof(f524,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f523,f142])).
fof(f523,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f473,f331])).
fof(f473,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f126])).
fof(f522,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f521,f142])).
fof(f521,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f520,f200])).
fof(f520,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f519,f142])).
fof(f519,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f474,f331])).
fof(f474,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f127])).
fof(f518,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f517,f142])).
fof(f517,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f516,f200])).
fof(f516,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f515,f142])).
fof(f515,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f475,f331])).
fof(f475,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f128])).
fof(f514,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f513,f142])).
fof(f513,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f512,f200])).
fof(f512,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f511,f142])).
fof(f511,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f476,f331])).
fof(f476,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f129])).
fof(f510,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f509,f142])).
fof(f509,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f508,f200])).
fof(f508,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f507,f142])).
fof(f507,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f477,f331])).
fof(f477,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f130])).
fof(f506,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f505,f142])).
fof(f505,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f504,f200])).
fof(f504,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f503,f142])).
fof(f503,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f478,f331])).
fof(f478,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f131])).
fof(f502,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f501,f142])).
fof(f501,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f500,f200])).
fof(f500,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f499,f142])).
fof(f499,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f479,f331])).
fof(f479,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f132])).
fof(f498,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f497,f142])).
fof(f497,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f496,f200])).
fof(f496,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(subsumption_resolution,[],[f495,f142])).
fof(f495,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f480,f331])).
fof(f480,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f471,f133])).
fof(f493,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f492,f154])).
fof(f492,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(forward_demodulation,[],[f491,f338])).
fof(f338,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl10),
  inference(subsumption_resolution,[],[f337,f152])).
fof(f337,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl10),
  inference(superposition,[],[f332,f156])).
fof(f332,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl10),
  inference(resolution,[],[f180,f103])).
fof(f103,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP7(X0)) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (~sP7(X0) | (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(X0)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK10(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10])],[f53])).
fof(f53,plain,(
  ! [X0] : (~sP7(X0) | ? [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X1),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X1))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f52])).
fof(f52,plain,(
  ! [X0] : (~sP7(X0) | ? [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X18),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X18))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f491,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl10),
  inference(subsumption_resolution,[],[f486,f152])).
fof(f486,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl10),
  inference(superposition,[],[f95,f368])).
fof(f368,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK10(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl10),
  inference(subsumption_resolution,[],[f366,f153])).
fof(f366,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK10(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) | $spl10),
  inference(superposition,[],[f333,f156])).
fof(f333,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK10(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl10),
  inference(resolution,[],[f180,f104])).
fof(f104,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),X0),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',sK10(X0)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP7(X0)) )),
  inference(cnf_transformation,[],[f54])).
fof(f95,plain,(
  ( ! [X19] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',X19))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',X19),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f490,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f489,f180])).
fof(f489,plain,(
  ~sP7(sK8)),
  inference(subsumption_resolution,[],[f481,f103])).
fof(f481,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK10(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | ~sP7(sK8)),
  inference(resolution,[],[f95,f104])).
fof(f355,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f172,f91])).
fof(f178,plain,(
  sP6(sK8) | $spl8),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  sP6(sK8) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f330,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f329,f142])).
fof(f329,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f305,f200])).
fof(f305,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f133])).
fof(f328,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f327,f142])).
fof(f327,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f304,f200])).
fof(f304,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f132])).
fof(f326,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f325,f142])).
fof(f325,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f303,f200])).
fof(f303,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f131])).
fof(f324,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f323,f142])).
fof(f323,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f302,f200])).
fof(f302,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f130])).
fof(f322,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f321,f142])).
fof(f321,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f301,f200])).
fof(f301,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f129])).
fof(f320,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f319,f142])).
fof(f319,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f300,f200])).
fof(f300,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f128])).
fof(f318,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f317,f142])).
fof(f317,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f299,f200])).
fof(f299,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f127])).
fof(f316,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f315,f153])).
fof(f315,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8)) )),
  inference(forward_demodulation,[],[f298,f200])).
fof(f298,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))) )),
  inference(resolution,[],[f91,f126])).
fof(f172,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | $spl3),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f297,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f296,f142])).
fof(f296,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f295,f200])).
fof(f295,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f265,f152])).
fof(f265,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f133,f221])).
fof(f294,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f293,f142])).
fof(f293,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f292,f200])).
fof(f292,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f264,f148])).
fof(f148,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X24] : ((p(s(bool,'F_0')) & p(s(bool,X24))) <=> p(s(bool,'F_0')))),
  file('thm.closProps.every_Fn_vs_NONE_ind','thm.bool.AND_CLAUSES|split|2')).
fof(f264,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f132,f221])).
fof(f291,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f290,f142])).
fof(f290,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f289,f200])).
fof(f289,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f263,f148])).
fof(f263,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f131,f221])).
fof(f288,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f287,f142])).
fof(f287,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f286,f200])).
fof(f286,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f262,f148])).
fof(f262,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f130,f221])).
fof(f285,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f284,f142])).
fof(f284,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f283,f200])).
fof(f283,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f261,f148])).
fof(f261,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f129,f221])).
fof(f282,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f281,f142])).
fof(f281,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f280,f200])).
fof(f280,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f260,f148])).
fof(f260,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f128,f221])).
fof(f279,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f278,f142])).
fof(f278,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f277,f200])).
fof(f277,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f259,f148])).
fof(f259,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f127,f221])).
fof(f276,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f275,f142])).
fof(f275,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(forward_demodulation,[],[f274,f200])).
fof(f274,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(subsumption_resolution,[],[f258,f148])).
fof(f258,plain,(
  p(s(bool,'F_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(superposition,[],[f126,f221])).
fof(f255,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f231,f142])).
fof(f231,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f133,f200])).
fof(f254,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f230,f142])).
fof(f230,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f132,f200])).
fof(f253,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f229,f142])).
fof(f229,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f131,f200])).
fof(f252,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f228,f142])).
fof(f228,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f130,f200])).
fof(f251,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f227,f142])).
fof(f227,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f129,f200])).
fof(f250,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f226,f142])).
fof(f226,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f128,f200])).
fof(f249,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f225,f142])).
fof(f225,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f127,f200])).
fof(f248,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(subsumption_resolution,[],[f224,f142])).
fof(f224,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(superposition,[],[f126,f200])).
fof(f220,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f208,f89])).
fof(f208,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f133])).
fof(f219,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f207,f89])).
fof(f207,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f132])).
fof(f218,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f206,f89])).
fof(f206,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f131])).
fof(f217,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f205,f89])).
fof(f205,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f130])).
fof(f216,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f204,f89])).
fof(f204,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f129])).
fof(f215,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f203,f89])).
fof(f203,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f128])).
fof(f214,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f202,f89])).
fof(f202,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f127])).
fof(f213,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)),
  inference(subsumption_resolution,[],[f201,f89])).
fof(f201,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),
  inference(resolution,[],[f102,f126])).
fof(f164,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X7)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f133])).
fof(f163,plain,(
  ( ! [X6] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X6)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f132])).
fof(f162,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X5)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f131])).
fof(f161,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X4)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',sK36(sK8)),s('type.list.list'('type.closLang.exp'),sK37(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f130])).
fof(f160,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X3)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f129])).
fof(f159,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X2)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),sK32(sK8)),s('type.option.option'('type.list.list'('type.num.num')),sK33(sK8)),s('type.num.num',sK34(sK8)),s('type.closLang.exp',sK35(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f128])).
fof(f158,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X1)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',sK30(sK8)),s('type.list.list'('type.closLang.exp'),sK31(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f127])).
fof(f157,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK37(sK8))))) | sP5(sK8) | sP4(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',sK35(sK8)),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP3(sK8) | p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),sK31(sK8))))) | sP7(sK8) | sP6(sK8) | sP2(sK8) | sP0(sK8) | ~p(s(bool,happ(s(fun('type.list.list'('type.closLang.exp'),bool),sK8),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',sK29(sK8)))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) | sP1(sK8)) )),
  inference(resolution,[],[f89,f126])).
% SZS output end Proof for thm.closProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 105
% Passive clauses: 194
% Generated clauses: 3288
% Final active clauses: 69
% Final passive clauses: 90
% Input formulas: 21
% Initial clauses: 68
% 
% Selected by SInE selection: 15
% SInE iterations: 1
% 
% Fw subsumption resolutions: 1580
% Fw demodulations: 506
% Bw demodulations: 14
% 
% Simple tautologies: 44
% Forward subsumptions: 716
% 
% Binary resolution: 339
% Forward superposition: 167
% Backward superposition: 302
% 
% Split clauses: 237
% Split components: 1722
% SAT solver clauses: 251
% SAT solver unit clauses: 10
% SAT solver binary clauses: 14
% 
% Sat splits: 237
% Sat splitting refutations: 13
% 
% Memory used [KB]: 3326
% Time elapsed: 0.193 s
% ------------------------------
% ------------------------------
% Success in time 11.96 s
