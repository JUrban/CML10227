Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.evalProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.evalProps
% SZS output start Proof for thm.evalProps
fof(f1057,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1056,f1033,f1029])).
fof(f1029,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2) | $spl4),
  inference(cnf_transformation,[],[f1029_D])).
fof(f1029_D,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1033,plain,(
  s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2)),
  inference(trivial_inequality_removal,[],[f1032])).
fof(f1032,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2)),
  inference(forward_demodulation,[],[f1031,f61])).
fof(f61,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : ! [X10,X9] : s(X7,X9) = s(X7,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(X7,X10),s(X7,X9)))),
  file('thm.evalProps.evalProps_4|49|_prove_ltb','thm.ast.word_size_case_def|split|1')).
fof(f1031,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3))) != s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(sK1,sK4),s(sK1,sK3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2)),
  inference(forward_demodulation,[],[f1021,f61])).
fof(f1021,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W64_0'),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3))))) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',sK2)),
  inference(superposition,[],[f45,f50])).
fof(f50,plain,(
  ( ! [X0] : (s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0)) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X0) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X0))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12] : (s('type.ast.word_size','const.ast.W8_0') = s('type.ast.word_size',X12) | s('type.ast.word_size','const.ast.W64_0') = s('type.ast.word_size',X12))),
  file('thm.evalProps.evalProps_4|49|_prove_ltb','thm.ast.word_size_nchotomy')).
fof(f45,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size',sK2),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.ast.word_size_CASE_3'(s('type.ast.word_size',sK2),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3)))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size',sK2),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.ast.word_size_CASE_3'(s('type.ast.word_size',sK2),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f37])).
fof(f37,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X5),s(X1,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X1,X4),s(X1,X3))))) != s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X0,happ(s(fun(X1,X0),X5),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X3)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X5),s(X1,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X1,X4),s(X1,X3))))) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X0,happ(s(fun(X1,X0),X5),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X3)))))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X5),s(X1,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X1,X4),s(X1,X3))))) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X2),s(X0,happ(s(fun(X1,X0),X5),s(X1,X4))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11] : s(X6,happ(s(fun(X7,X6),X11),s(X7,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X8),s(X7,X10),s(X7,X9))))) = s(X6,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X8),s(X6,happ(s(fun(X7,X6),X11),s(X7,X10))),s(X6,happ(s(fun(X7,X6),X11),s(X7,X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11] : s(X6,happ(s(fun(X7,X6),X11),s(X7,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X8),s(X7,X10),s(X7,X9))))) = s(X6,'const.ast.word_size_CASE_3'(s('type.ast.word_size',X8),s(X6,happ(s(fun(X7,X6),X11),s(X7,X10))),s(X6,happ(s(fun(X7,X6),X11),s(X7,X9)))))),
  file('thm.evalProps.evalProps_4|49|_prove_ltb','thm.evalProps.evalProps_4|49|_prove_ltb')).
fof(f1056,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f1055])).
fof(f1055,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))) | $spl4),
  inference(forward_demodulation,[],[f1054,f60])).
fof(f60,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : ! [X10,X9] : s(X7,X10) = s(X7,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(X7,X10),s(X7,X9)))),
  file('thm.evalProps.evalProps_4|49|_prove_ltb','thm.ast.word_size_case_def|split|0')).
fof(f1054,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))) != s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(sK1,sK4),s(sK1,sK3))))) | $spl4),
  inference(forward_demodulation,[],[f1034,f60])).
fof(f1034,plain,(
  s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(sK1,sK4),s(sK1,sK3))))) != s(sK0,'const.ast.word_size_CASE_3'(s('type.ast.word_size','const.ast.W8_0'),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK4))),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,sK3))))) | $spl4),
  inference(backward_demodulation,[],[f1029,f45])).
% SZS output end Proof for thm.evalProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 28
% Passive clauses: 193
% Generated clauses: 989
% Final active clauses: 23
% Final passive clauses: 133
% Input formulas: 15
% Initial clauses: 19
% 
% Duplicate literals: 90
% Trivial inequalities: 15
% Fw subsumption resolutions: 32
% Fw demodulations: 30
% Bw demodulations: 1
% 
% Simple tautologies: 49
% Equational tautologies: 29
% Forward subsumptions: 559
% 
% Binary resolution: 11
% Forward superposition: 308
% Backward superposition: 343
% Self superposition: 68
% Equality factoring: 52
% Equality resolution: 3
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8
% SAT solver unit clauses: 4
% SAT solver binary clauses: 3
% SAT solver learnt clauses: 1
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 7
% TWLsolver calls for satisfiability: 3
% 
% Memory used [KB]: 1151
% Time elapsed: 0.054 s
% ------------------------------
% ------------------------------
% Success in time 0.061 s
