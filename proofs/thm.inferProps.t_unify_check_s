Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (21798)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 117
% Passive clauses: 3703
% Generated clauses: 18520
% Final active clauses: 101
% Final passive clauses: 3422
% Input formulas: 21
% Initial clauses: 38
% 
% Duplicate literals: 633
% Trivial inequalities: 160
% Fw subsumption resolutions: 1926
% Fw demodulations: 3307
% Bw demodulations: 11
% 
% Simple tautologies: 244
% Equational tautologies: 45
% Forward subsumptions: 8013
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 312
% Factoring: 2
% Forward superposition: 6799
% Backward superposition: 5032
% Self superposition: 191
% Equality factoring: 86
% Equality resolution: 14
% 
% Split clauses: 323
% Split components: 670
% SAT solver clauses: 661
% SAT solver unit clauses: 6
% SAT solver binary clauses: 54
% 
% Sat splits: 323
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 649
% TWLsolver calls for satisfiability: 112
% 
% Memory used [KB]: 12409
% Time elapsed: 0.618 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (21900)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 72
% Passive clauses: 638
% Generated clauses: 11044
% Final active clauses: 65
% Final passive clauses: 557
% Input formulas: 21
% Initial clauses: 38
% 
% Duplicate literals: 912
% Trivial inequalities: 116
% Fw subsumption resolutions: 752
% Fw demodulations: 670
% Bw demodulations: 15
% Condensations: 1751
% Global subsumptions: 3
% 
% Simple tautologies: 180
% Equational tautologies: 49
% Forward subsumptions: 4936
% 
% Binary resolution: 74
% Factoring: 1
% Forward superposition: 3355
% Backward superposition: 2435
% Self superposition: 177
% Equality factoring: 124
% Equality resolution: 16
% 
% Split clauses: 67
% Split components: 134
% SAT solver clauses: 1114
% SAT solver unit clauses: 47
% SAT solver binary clauses: 33
% SAT solver learnt clauses: 6
% 
% Sat splits: 67
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1102
% TWLsolver calls for satisfiability: 194
% 
% Memory used [KB]: 8699
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% (21987)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 514
% Passive clauses: 11998
% Generated clauses: 162701
% Final active clauses: 141
% Final passive clauses: 1079
% Input formulas: 21
% Initial clauses: 38
% Discarded non-redundant clauses: 4846
% 
% Duplicate literals: 4941
% Trivial inequalities: 1036
% Fw subsumption resolutions: 11627
% Fw demodulations: 25850
% Bw demodulations: 7411
% Condensations: 12496
% Global subsumptions: 469
% 
% Simple tautologies: 1263
% Equational tautologies: 555
% Forward subsumptions: 91411
% Bw demodulations to eq. taut.: 201
% 
% Unit resulting resolution: 4372
% Factoring: 10
% Forward superposition: 44892
% Backward superposition: 36942
% Self superposition: 757
% Equality factoring: 291
% Equality resolution: 78
% 
% Split clauses: 328
% Split components: 661
% SAT solver clauses: 13752
% SAT solver unit clauses: 574
% SAT solver binary clauses: 2234
% 
% Sat splits: 328
% Sat splitting refutations: 627
% 
% Memory used [KB]: 110147
% Time elapsed: 10.470 s
% ------------------------------
% ------------------------------
% remaining time: 31 next slice time: 31
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f3995,plain,(
  $false),
  inference(subsumption_resolution,[],[f3994,f84])).
fof(f84,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.t_unify_check_s',aHL_TRUTH)).
fof(f3994,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f3993,f98])).
fof(f98,plain,(
  s(bool,'T_0') = s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))),
  inference(subsumption_resolution,[],[f91,f82])).
fof(f82,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.t_unify_check_s',aHL_FALSITY)).
fof(f91,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))),
  inference(superposition,[],[f55,f65])).
fof(f65,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.t_unify_check_s',aHL_BOOL_CASES)).
fof(f55,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.infer_t.infer_t',sK3),s('type.infer_t.infer_t',sK4))) & ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f38])).
fof(f38,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X3)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X4)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X3),s('type.infer_t.infer_t',X4))) & ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5)))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X3)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X4)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X3),s('type.infer_t.infer_t',X4)))) & ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5)))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X3)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.infer_t.infer_t',X4)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X3),s('type.infer_t.infer_t',X4)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X1),s(fun('type.num.num',bool),X2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9,X10,X11] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X9)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X10)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X9),s('type.infer_t.infer_t',X10)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9,X10,X11] : ((p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X9)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X10)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X6),s('type.infer_t.infer_t',X9),s('type.infer_t.infer_t',X10)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X11)))))),
  file('thm.inferProps.t_unify_check_s','thm.inferProps.t_unify_check_s')).
fof(f3993,plain,(
  ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(subsumption_resolution,[],[f3992,f78])).
fof(f78,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X15] : ((p(s(bool,'T_0')) & p(s(bool,X15))) <=> p(s(bool,X15)))),
  file('thm.inferProps.t_unify_check_s','thm.bool.AND_CLAUSES|split|0')).
fof(f3992,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(forward_demodulation,[],[f3991,f200])).
fof(f200,plain,(
  s(bool,'T_0') = s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))),
  inference(subsumption_resolution,[],[f191,f82])).
fof(f191,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))),
  inference(superposition,[],[f56,f65])).
fof(f56,plain,(
  p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(cnf_transformation,[],[f45])).
fof(f3991,plain,(
  ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(subsumption_resolution,[],[f3990,f73])).
fof(f73,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'T_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'T_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X15] : ((p(s(bool,X15)) & p(s(bool,'T_0'))) <=> p(s(bool,X15)))),
  file('thm.inferProps.t_unify_check_s','thm.bool.AND_CLAUSES|split|1')).
fof(f3990,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(forward_demodulation,[],[f3989,f113])).
fof(f113,plain,(
  s(bool,'T_0') = s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))),
  inference(subsumption_resolution,[],[f106,f82])).
fof(f106,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))),
  inference(superposition,[],[f57,f65])).
fof(f57,plain,(
  p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3))))),
  inference(cnf_transformation,[],[f45])).
fof(f3989,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(subsumption_resolution,[],[f3988,f73])).
fof(f3988,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(forward_demodulation,[],[f3987,f182])).
fof(f182,plain,(
  s(bool,'T_0') = s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4)))),
  inference(subsumption_resolution,[],[f175,f82])).
fof(f175,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4)))),
  inference(superposition,[],[f58,f65])).
fof(f58,plain,(
  p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4))))),
  inference(cnf_transformation,[],[f45])).
fof(f3987,plain,(
  ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(trivial_inequality_removal,[],[f3986])).
fof(f3986,plain,(
  s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK4)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',sK3)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0))))),
  inference(superposition,[],[f202,f59])).
fof(f59,plain,(
  s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK0),s('type.infer_t.infer_t',sK3),s('type.infer_t.infer_t',sK4)))),
  inference(cnf_transformation,[],[f45])).
fof(f202,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',X2)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.infer_t.infer_t',X1)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) )),
  inference(resolution,[],[f60,f66])).
fof(f66,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5)))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X2)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X1)))) | ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ! [X3,X4,X5] : (~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X1)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X2)))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2))) | p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ! [X3,X4,X5] : ((~p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X1)))) | ~p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X2)))) | s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) != s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2)))) | p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) => ! [X3,X4,X5] : ((p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X1)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.infer_t.infer_t',X2)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X0),s('type.infer_t.infer_t',X1),s('type.infer_t.infer_t',X2)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X3),s(fun('type.num.num',bool),X4),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X5))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X12,X9,X10] : (p(s(bool,'const.unify.t_wfs_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X12)))) => ! [X7,X8,X13] : ((p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X12)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X9)))) & p(s(bool,'const.infer.check_t_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.infer_t.infer_t',X10)))) & s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.option.SOME_1'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X13))) = s('type.option.option'('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t')),'const.unify.t_unify_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X12),s('type.infer_t.infer_t',X9),s('type.infer_t.infer_t',X10)))) => p(s(bool,'const.infer.check_s_3'(s('type.num.num',X7),s(fun('type.num.num',bool),X8),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),X13))))))),
  file('thm.inferProps.t_unify_check_s','thm.inferProps.inferProps_73_prove_ltb|split|0')).
fof(f60,plain,(
  ~p(s(bool,'const.infer.check_s_3'(s('type.num.num',sK1),s(fun('type.num.num',bool),sK2),s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),sK5))))),
  inference(cnf_transformation,[],[f45])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 69
% Passive clauses: 595
% Generated clauses: 3853
% Final active clauses: 40
% Final passive clauses: 421
% Input formulas: 21
% Initial clauses: 30
% 
% Selected by SInE selection: 14
% SInE iterations: 1
% 
% Duplicate literals: 311
% Trivial inequalities: 53
% Fw subsumption resolutions: 582
% Fw demodulations: 250
% Bw demodulations: 20
% 
% Simple tautologies: 214
% Equational tautologies: 37
% Forward subsumptions: 1800
% 
% Binary resolution: 312
% Factoring: 3
% Forward superposition: 1121
% Backward superposition: 1025
% Self superposition: 56
% Equality factoring: 58
% Equality resolution: 6
% 
% Split clauses: 59
% Split components: 118
% SAT solver clauses: 69
% SAT solver unit clauses: 7
% SAT solver binary clauses: 37
% 
% Sat splits: 59
% Sat splitting refutations: 9
% 
% Memory used [KB]: 1791
% Time elapsed: 0.068 s
% ------------------------------
% ------------------------------
% Success in time 11.9 s
