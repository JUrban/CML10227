Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.closSem
% (26252)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 119
% Passive clauses: 2995
% Generated clauses: 11250
% Final active clauses: 116
% Final passive clauses: 2721
% Input formulas: 36
% Initial clauses: 47
% 
% Duplicate literals: 255
% Trivial inequalities: 176
% Fw subsumption resolutions: 916
% Fw demodulations: 1357
% Bw demodulations: 2
% 
% Simple tautologies: 143
% Equational tautologies: 35
% Forward subsumptions: 5151
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 682
% Factoring: 3
% Forward superposition: 4484
% Backward superposition: 3063
% Self superposition: 137
% Equality factoring: 54
% Equality resolution: 21
% 
% Split clauses: 144
% Split components: 290
% SAT solver clauses: 350
% SAT solver unit clauses: 87
% SAT solver binary clauses: 143
% 
% Sat splits: 144
% 
% TWLsolver clauses: 350
% TWLsolver calls for satisfiability: 158
% 
% Memory used [KB]: 19573
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.closSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.closSem
% SZS output start Proof for thm.closSem
fof(f7091,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7027,f238,f154,f197,f244,f120,f171,f147,f192,f5959,f5961,f5960,f127,f175,f158,f201,f5597,f5742,f118,f167,f159,f202,f6986,f5953,f5955,f5954,f123,f173,f6918,f3749,f6596,f119,f169])).
fof(f169,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f119,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.closSem.ref_distinct',aHL_TRUTH)).
fof(f6596,plain,(
  $false | ($spl2 | $spl5 | $spl878)),
  inference(subsumption_resolution,[],[f6068,f169])).
fof(f6068,plain,(
  ~p(s(bool,'T_0')) | ($spl5 | $spl878)),
  inference(backward_demodulation,[],[f3749,f171])).
fof(f3749,plain,(
  ( ! [X45] : (s(bool,'T_0') = s(bool,X45)) ) | $spl878),
  inference(cnf_transformation,[],[f3749_D])).
fof(f3749_D,plain,(
  ( ! [X45] : (s(bool,'T_0') = s(bool,X45)) ) <=> ~$spl878),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl878])])).
fof(f6918,plain,(
  ( ! [X24] : (s(bool,'T_0') = s(bool,X24)) ) | ($spl56 | $spl1650)),
  inference(superposition,[],[f5955,f197])).
fof(f173,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f173_D])).
fof(f173_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f123,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X29] : (s(bool,'T_0') = s(bool,X29) <=> p(s(bool,X29)))),
  file('thm.closSem.ref_distinct','thm.bool.EQ_CLAUSES|split|0')).
fof(f5954,plain,(
  ( ! [X116] : (~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X116),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) | $spl1648),
  inference(cnf_transformation,[],[f5954_D])).
fof(f5954_D,plain,(
  ( ! [X116] : (~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X116),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) <=> ~$spl1648),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1648])])).
fof(f5955,plain,(
  ( ! [X115] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X115),s('type.list.list'(sK0),sK2)))) ) | $spl1650),
  inference(cnf_transformation,[],[f5955_D])).
fof(f5955_D,plain,(
  ( ! [X115] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X115),s('type.list.list'(sK0),sK2)))) ) <=> ~$spl1650),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1650])])).
fof(f5953,plain,(
  ( ! [X116,X115] : (s(bool,'T_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X115),s('type.list.list'(sK0),sK2))) | ~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X116),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) | ($spl8 | $spl64 | $spl1586)),
  inference(forward_demodulation,[],[f5862,f201])).
fof(f5862,plain,(
  ( ! [X116,X115] : (~p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X116),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1)))) | s(bool,'T_0') = s(bool,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))),s(fun('type.list.list'(sK0),bool),X115),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X116)))) ) | ($spl8 | $spl1586)),
  inference(superposition,[],[f173,f5742])).
fof(f6986,plain,(
  $false | ($spl1648 | $spl1656)),
  inference(subsumption_resolution,[],[f5954,f5960])).
fof(f202,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))) ) | $spl66),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f159,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X1,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s(X1,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))),s(fun('type.list.list'(X0),X1),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1),X4)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X19] : ! [X8,X18,X31] : s(X19,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),X31),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))) = s(X19,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8))),s(fun('type.list.list'(X6),X19),X18),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),X31)))),
  file('thm.closSem.ref_distinct','thm.closSem.ref_case_def|split|1')).
fof(f167,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) | $spl0),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f118,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1)))),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))) = s('type.closSem.ref'(sK0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f101])).
fof(f101,plain,(
  ? [X0,X1,X2] : s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) != s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1,X2] : ~s('type.closSem.ref'(X0),'const.closSem.ValueArray_1'(s('type.list.list'(X0),X2))) = s('type.closSem.ref'(X0),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ~s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X8))) = s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ~s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X8))) = s('type.closSem.ref'(X6),'const.closSem.ByteArray_1'(s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X7)))),
  file('thm.closSem.ref_distinct','thm.closSem.ref_distinct')).
fof(f5742,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))),s(fun('type.list.list'(sK0),X0),X2),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1)))) ) | $spl1586),
  inference(cnf_transformation,[],[f5742_D])).
fof(f5742_D,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))),s(fun('type.list.list'(sK0),X0),X2),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1)))) ) <=> ~$spl1586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1586])])).
fof(f5597,plain,(
  ( ! [X2,X0,X1] : (s(X0,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))),s(fun('type.list.list'(sK0),X0),X2),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X1)))) ) | ($spl0 | $spl66)),
  inference(superposition,[],[f202,f167])).
fof(f201,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))) ) | $spl64),
  inference(cnf_transformation,[],[f201_D])).
fof(f201_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f158,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(X0,happ(s(fun('type.list.list'(X1),X0),X3),s('type.list.list'(X1),X2))) = s(X0,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X1),'const.closSem.ValueArray_1'(s('type.list.list'(X1),X2))),s(fun('type.list.list'(X1),X0),X3),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X0),X4)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X19,X6] : ! [X8,X18,X31] : s(X19,happ(s(fun('type.list.list'(X6),X19),X18),s('type.list.list'(X6),X8))) = s(X19,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(X6),'const.closSem.ValueArray_1'(s('type.list.list'(X6),X8))),s(fun('type.list.list'(X6),X19),X18),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X19),X31)))),
  file('thm.closSem.ref_distinct','thm.closSem.ref_case_def|split|0')).
fof(f175,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f175_D])).
fof(f175_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f127,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X29] : (s(bool,'F_0') = s(bool,X29) <=> ~p(s(bool,X29)))),
  file('thm.closSem.ref_distinct','thm.bool.EQ_CLAUSES|split|2')).
fof(f5960,plain,(
  ( ! [X120] : (p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X120),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) | $spl1656),
  inference(cnf_transformation,[],[f5960_D])).
fof(f5960_D,plain,(
  ( ! [X120] : (p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X120),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) <=> ~$spl1656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1656])])).
fof(f5961,plain,(
  ( ! [X119] : (s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X119),s('type.list.list'(sK0),sK2)))) ) | $spl1658),
  inference(cnf_transformation,[],[f5961_D])).
fof(f5961_D,plain,(
  ( ! [X119] : (s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X119),s('type.list.list'(sK0),sK2)))) ) <=> ~$spl1658),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1658])])).
fof(f5959,plain,(
  ( ! [X120,X119] : (s(bool,'F_0') = s(bool,happ(s(fun('type.list.list'(sK0),bool),X119),s('type.list.list'(sK0),sK2))) | p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X120),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1))))) ) | ($spl12 | $spl64 | $spl1586)),
  inference(forward_demodulation,[],[f5864,f201])).
fof(f5864,plain,(
  ( ! [X120,X119] : (p(s(bool,happ(s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X120),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK1)))) | s(bool,'F_0') = s(bool,'const.closSem.ref_CASE_3'(s('type.closSem.ref'(sK0),'const.closSem.ValueArray_1'(s('type.list.list'(sK0),sK2))),s(fun('type.list.list'(sK0),bool),X119),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),X120)))) ) | ($spl12 | $spl1586)),
  inference(superposition,[],[f175,f5742])).
fof(f192,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))) ) | $spl46),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f147,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))) )),
  inference(cnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),sK4(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f73])).
fof(f73,plain,(
  ! [X0] : ? [X1] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X0),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X0),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X0),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X0),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X0),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X0),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),X1))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ? [X32] : p(s(bool,'const.bool.TYPE_DEFINITION_2'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),bool),'!_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'_dst_x0x1_2'(s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool),'!_0'),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_dst_x00x01x11_3'(s(fun(bool,fun(bool,bool)),'==>_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'(X6),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'(X6),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'(X6),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s(fun('type.list.list'(X6),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'_dst_x1x0_2'(s(fun('type.list.list'(X6),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),'_dst_x0x1_2'(s(fun(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool),bool),'?_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),bool)),'_dst_x00x10x01_3'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'=_0'),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0x1x0_3'(s(fun('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),fun(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),happ(s(fun('type.list.list'(X6),fun('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),'type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'const.pair.,_0'),s('type.list.list'(X6),'const.bool.ARB_0'))),s(fun('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'const.ind_type.BOTTOM_0'))))))))))),s(fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool)),'_i_0_0'))))),s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),fun(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),bool),bool)),'_dstsel_1_x10_1'(s(fun('type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),'_i_0_0'))))))),s(fun('type.closSem.ref'(X6),'type.ind_type.recspace'('type.pair.prod'('type.list.list'(X6),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))))),X32))))),
  file('thm.closSem.ref_distinct','thm.closSem.ref_TY_DEF')).
fof(f171,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f120,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.closSem.ref_distinct',aHL_FALSITY)).
fof(f244,plain,(
  $false | ($spl5 | $spl46 | $spl86)),
  inference(subsumption_resolution,[],[f241,f171])).
fof(f241,plain,(
  p(s(bool,'F_0')) | ($spl46 | $spl86)),
  inference(backward_demodulation,[],[f238,f192])).
fof(f197,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) ) | $spl56),
  inference(cnf_transformation,[],[f197_D])).
fof(f197_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f154,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X12,X10] : ! [X13,X15] : s(X10,X13) = s(X10,happ(s(fun(X12,X10),'_dst_x0_1'(s(X10,X13))),s(X12,X15)))),
  file('thm.closSem.ref_distinct','_dst_x0_ax')).
fof(f238,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl86),
  inference(cnf_transformation,[],[f238_D])).
fof(f238_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f7027,plain,(
  ( ! [X24] : (s(bool,'F_0') = s(bool,X24)) ) | ($spl56 | $spl1658)),
  inference(superposition,[],[f5961,f197])).
% SZS output end Proof for thm.closSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 79
% Passive clauses: 1440
% Generated clauses: 7513
% Final active clauses: 53
% Final passive clauses: 793
% Input formulas: 36
% Initial clauses: 47
% 
% Duplicate literals: 221
% Trivial inequalities: 89
% Fw subsumption resolutions: 308
% Fw demodulations: 364
% Bw demodulations: 516
% Condensations: 424
% 
% Simple tautologies: 82
% Equational tautologies: 34
% Forward subsumptions: 3156
% Bw demodulations to eq. taut.: 66
% 
% Binary resolution: 138
% Factoring: 1
% Forward superposition: 2006
% Backward superposition: 1706
% Self superposition: 108
% Equality factoring: 50
% Equality resolution: 14
% 
% Split clauses: 49
% Split components: 98
% SAT solver clauses: 1414
% SAT solver unit clauses: 70
% SAT solver binary clauses: 76
% SAT solver learnt clauses: 1
% 
% Sat splits: 49
% Sat splitting refutations: 54
% 
% TWLsolver clauses: 1407
% TWLsolver calls for satisfiability: 204
% 
% Memory used [KB]: 13816
% Time elapsed: 0.543 s
% ------------------------------
% ------------------------------
% Success in time 1.151 s
