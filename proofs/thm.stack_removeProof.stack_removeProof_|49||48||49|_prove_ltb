Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.stack_removeProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stack_removeProof
% SZS output start Proof for thm.stack_removeProof
fof(f457,plain,(
  $false),
  inference(subsumption_resolution,[],[f456,f40])).
fof(f40,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb',aHL_FALSITY)).
fof(f456,plain,(
  p(s(bool,'F_0'))),
  inference(forward_demodulation,[],[f455,f58])).
fof(f58,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),
  inference(resolution,[],[f47,f37])).
fof(f37,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f25])).
fof(f25,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X8)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X8)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X8)))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X8)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb','thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb')).
fof(f47,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb','thm.bool.EQ_CLAUSES|split|3')).
fof(f455,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(forward_demodulation,[],[f446,f443])).
fof(f443,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2)))),
  inference(subsumption_resolution,[],[f436,f38])).
fof(f38,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb','thm.bool.TRUTH')).
fof(f436,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK0) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2)))),
  inference(superposition,[],[f50,f55])).
fof(f55,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))),
  inference(resolution,[],[f43,f36])).
fof(f36,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f28])).
fof(f43,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb','thm.bool.EQ_CLAUSES|split|0')).
fof(f50,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) => s('type.num.num',X1) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6)))) => s('type.num.num',X8) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X8),s('type.num.num',X6))))),
  file('thm.stack_removeProof.stack_removeProof_|49||48||49|_prove_ltb','thm.arithmetic.LESS_MOD')).
fof(f446,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2))))))),
  inference(backward_demodulation,[],[f442,f34])).
fof(f34,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK0),s('type.num.num',sK2))))))),
  inference(cnf_transformation,[],[f28])).
fof(f442,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(subsumption_resolution,[],[f435,f38])).
fof(f435,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(superposition,[],[f50,f54])).
fof(f54,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(resolution,[],[f43,f35])).
fof(f35,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f28])).
% SZS output end Proof for thm.stack_removeProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 70
% Generated clauses: 406
% Final active clauses: 19
% Final passive clauses: 25
% Input formulas: 11
% Initial clauses: 18
% 
% Duplicate literals: 53
% Trivial inequalities: 15
% Fw subsumption resolutions: 28
% Fw demodulations: 14
% Bw demodulations: 4
% 
% Simple tautologies: 28
% Equational tautologies: 15
% Forward subsumptions: 187
% 
% Binary resolution: 19
% Forward superposition: 69
% Backward superposition: 128
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 6
% SAT solver unit clauses: 2
% SAT solver binary clauses: 4
% 
% Sat splits: 4
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 767
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 0.045 s
