Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exhProps
% (15767)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 159
% Passive clauses: 1282
% Generated clauses: 22688
% Final active clauses: 152
% Final passive clauses: 1040
% Input formulas: 45
% Initial clauses: 62
% 
% Duplicate literals: 1525
% Trivial inequalities: 139
% Fw subsumption resolutions: 2940
% Fw demodulations: 2968
% Bw demodulations: 6
% 
% Simple tautologies: 254
% Equational tautologies: 25
% Forward subsumptions: 11887
% 
% Binary resolution: 26
% Forward superposition: 9144
% Backward superposition: 5532
% Self superposition: 156
% Equality factoring: 54
% Equality resolution: 16
% 
% Split clauses: 1236
% Split components: 2481
% SAT solver clauses: 1749
% SAT solver unit clauses: 12
% SAT solver binary clauses: 109
% 
% Sat splits: 1236
% 
% TWLsolver clauses: 1748
% TWLsolver calls for satisfiability: 139
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.exhProps
% (15794)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 88
% Passive clauses: 334
% Generated clauses: 9845
% Final active clauses: 82
% Final passive clauses: 226
% Input formulas: 45
% Initial clauses: 62
% 
% Duplicate literals: 755
% Trivial inequalities: 116
% Fw subsumption resolutions: 411
% Fw demodulations: 386
% Bw demodulations: 24
% Condensations: 1695
% Global subsumptions: 4
% 
% Simple tautologies: 164
% Equational tautologies: 41
% Forward subsumptions: 4466
% 
% Binary resolution: 11
% Forward superposition: 3701
% Backward superposition: 2602
% Self superposition: 196
% Equality factoring: 128
% Equality resolution: 21
% 
% Split clauses: 40
% Split components: 80
% SAT solver clauses: 590
% SAT solver unit clauses: 97
% SAT solver binary clauses: 31
% SAT solver learnt clauses: 8
% 
% Sat splits: 40
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 574
% TWLsolver calls for satisfiability: 164
% 
% Memory used [KB]: 10234
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.exhProps
% (15817)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 537
% Passive clauses: 9652
% Generated clauses: 133549
% Final active clauses: 143
% Final passive clauses: 1104
% Input formulas: 45
% Initial clauses: 62
% Discarded non-redundant clauses: 10144
% 
% Duplicate literals: 5919
% Trivial inequalities: 1111
% Fw subsumption resolutions: 8792
% Fw demodulations: 14459
% Bw demodulations: 4914
% Condensations: 11357
% Global subsumptions: 39
% 
% Simple tautologies: 1093
% Equational tautologies: 707
% Forward subsumptions: 78581
% Fw demodulations to eq. taut.: 27
% Bw demodulations to eq. taut.: 114
% 
% Unit resulting resolution: 3808
% Forward superposition: 39013
% Backward superposition: 36084
% Self superposition: 752
% Equality factoring: 255
% Equality resolution: 70
% 
% Split clauses: 438
% Split components: 885
% SAT solver clauses: 10658
% SAT solver unit clauses: 860
% SAT solver binary clauses: 1841
% 
% Sat splits: 438
% Sat splitting refutations: 89
% 
% Memory used [KB]: 107716
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.exhProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exhProps
% SZS output start Proof for thm.exhProps
fof(f30714,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f81,f90,f82,f94,f95,f99,f86,f103,f104,f111,f115,f121,f127,f131,f120,f132,f130,f146,f150,f160,f151,f161,f152,f162,f97,f158,f165,f101,f176,f181,f186,f185,f191,f179,f189,f193,f196,f238,f242,f243,f248,f247,f254,f241,f252,f244,f256,f259,f271,f276,f281,f280,f307,f274,f305,f277,f309,f312,f334,f339,f344,f343,f341,f225,f362,f364,f273,f369,f337,f336,f367,f371,f374,f458,f477,f482,f487,f491,f492,f592,f594,f639,f677,f481,f680,f682,f683,f486,f685,f723,f724,f725,f726,f727,f728,f729,f730,f741,f743,f761,f765,f149,f88,f768,f776,f781,f833,f915,f927,f974,f975,f991,f480,f992,f989,f994,f1030,f593,f479,f1114,f1137,f1153,f1158,f1157,f1155,f1214,f1215,f1283,f1288,f1293,f1295,f1296,f1299,f1302,f1292,f1290,f1368,f1286,f1365,f1289,f1370,f1407,f1548,f1553,f1583,f1666,f1684,f1694,f1695,f1700,f1715,f1793,f1797,f1795,f1892,f1898,f1900,f1901,f1903,f1904,f1905,f1906,f1908,f1909,f1911,f1912,f1896,f1894,f1915,f1893,f1917,f1952,f1953,f1998,f2002,f2000,f2022,f2028,f2030,f2031,f2033,f2034,f2035,f2036,f2038,f2039,f2041,f2042,f2026,f2024,f2045,f2023,f2047,f2216,f2220,f2218,f2289,f2293,f2291,f2389,f2393,f2391,f2568,f2572,f2570,f2598,f2578,f2606,f2608,f2610,f2611,f2614,f2615,f2616,f2618,f2621,f2623,f2624,f2626,f2627,f2629,f2630,f2633,f2636,f2602,f2600,f2639,f2599,f2641,f2708,f2712,f2719,f2742,f2744,f2746,f2749,f2753,f2754,f2756,f2759,f2761,f2762,f2764,f2765,f2767,f2768,f2771,f2748,f2169,f2777,f1760,f340,f2779,f2934,f2941,f3100,f1670,f1668,f3185,f3189,f3190,f3195,f3197,f3198,f3194,f3192,f3239,f3240,f3272,f3274,f3187,f3298,f3437,f3617,f3708,f3670,f3918,f4034,f3982,f4262,f4289,f240,f4290,f4294,f4326,f4330,f4328,f4303,f4306,f4335,f4333,f4386,f4389,f4392,f4391,f4393,f4396,f4395,f4397,f4400,f4399,f4403,f4406,f4405,f245,f4981,f4985,f5017,f5019,f4292,f5061,f5093,f5097,f5127,f5131,f5198,f5202,f5200,f5236,f5242,f5244,f5245,f5246,f5247,f5248,f5249,f5251,f5252,f5254,f5255,f5257,f5258,f5260,f5261,f5263,f5264,f5266,f5267,f5269,f5270,f5272,f5273,f5275,f5276,f5278,f5279,f5281,f5282,f5284,f5285,f5287,f5288,f5240,f5238,f5354,f5096,f5095,f5391,f5130,f5129,f5516,f5237,f5518,f5548,f5899,f5903,f5901,f6119,f6123,f6121,f6245,f6434,f6438,f6436,f6897,f6901,f6899,f7129,f7213,f7653,f7733,f7655,f7734,f7746,f7752,f7750,f7753,f7766,f7768,f3981,f7767,f3669,f7769,f3514,f7853,f1287,f1285,f7905,f1298,f7908,f7909,f7910,f7912,f7913,f7914,f7915,f7917,f7918,f7920,f7921,f7923,f7924,f7926,f7927,f7929,f7930,f1301,f7931,f7933,f7937,f7939,f7940,f7942,f7943,f7945,f7946,f7948,f7949,f7951,f7952,f7954,f7955,f7956,f7957,f7959,f7960,f7907,f7961,f8104,f8178,f8254,f8180,f8255,f8354,f6249,f6247,f8434,f8569,f8573,f8637,f8645,f8647,f8648,f8649,f8650,f8652,f8653,f8654,f8655,f8657,f8658,f8660,f8661,f8663,f8664,f8666,f8667,f8669,f8670,f8672,f8673,f8675,f8677,f8678,f8679,f8681,f8682,f8685,f8687,f8688,f8690,f8691,f8693,f8694,f8696,f8697,f8698,f8699,f8701,f8702,f8704,f8705,f8707,f8708,f8710,f8711,f8641,f8639,f8791,f2613,f8795,f8796,f2617,f8800,f2620,f8801,f2632,f8802,f2635,f8803,f8805,f8806,f8808,f8812,f8814,f8815,f8816,f8817,f8819,f8820,f8822,f8823,f8825,f8826,f8793,f8828,f8878,f8985,f8638,f8987,f9101,f9208,f9212,f9213,f9225,f9226,f9238,f9308,f9309,f9312,f9313,f9320,f9321,f9557,f9633,f9559,f9634,f9709,f9869,f9710,f9871,f9713,f9873,f9714,f9875,f9721,f8684,f9722,f9877,f9890,f9989,f9990,f9993,f9994,f10002,f10015,f10031,f10040,f10041,f10044,f10046,f10054,f10259,f10255,f9211,f10340,f10341,f10344,f10345,f10352,f10353,f10386,f10536,f10394,f10538,f10395,f10540,f10396,f10516,f10397,f10518,f10400,f10521,f10402,f10523,f10409,f10528,f10410,f10530,f11401,f11412,f11413,f11423,f11424,f11483,f11485,f11486,f11487,f11488,f10253,f10252,f10251,f11496,f10250,f11497,f10247,f11499,f10244,f11500,f10243,f11502,f11503,f9881,f7610,f5949,f4237,f3859,f2788,f183,f2787,f11516,f11518,f2809,f2805,f2106,f2103,f11521,f11551,f180,f11633,f11638,f11639,f11640,f11643,f11646,f11649,f11650,f11651,f11509,f11652,f11655,f11656,f11659,f11662,f11637,f11701,f11704,f11705,f11707,f11708,f11709,f11711,f11714,f11715,f11717,f11718,f11719,f11703,f11766,f11769,f11519,f11770,f11772,f11773,f11774,f11648,f11776,f11504,f11779,f11780,f11782,f11783,f11784,f11768,f11909,f11910,f11986,f11987,f12144,f12207,f2681,f2688,f12209,f12243,f12245,f12253,f12318,f12321,f12323,f12325,f12326,f12328,f12332,f12335,f12338,f12341,f12377,f12380,f12381,f12382,f12383,f12385,f12388,f12389,f12390,f12391,f12437,f12439,f12486,f12488,f12647,f12148,f12146,f12739,f12746,f12756,f12758,f12761,f12778,f12780,f12781,f12379,f12814,f12815,f12816,f12818,f12819,f12821,f12824,f12825,f12826,f12827,f12922,f12929,f12939,f12941,f12944,f12990,f12991,f12992,f2755,f12994,f12995,f12997,f13000,f13001,f13002,f13003,f12320,f13051,f13058,f13068,f13070,f13073,f13257,f13269,f13271,f13567,f13571,f13543,f13813,f13817,f13855,f13858,f13991,f13995,f13949,f13950,f13951,f13952,f14002,f13954,f13955,f13956,f13958,f13959,f13960,f13961,f14010,f13963,f13964,f13965,f11507,f14025,f13994,f14016,f14017,f13998,f14018,f13999,f14019,f14026,f14021,f14005,f14022,f14007,f14023,f14090,f14594,f14598,f14568,f14600,f14646,f14648,f14651,f15151,f15283,f14597,f14596,f16370,f16533,f16537,f16867,f17019,f17327,f17421,f17329,f17422,f17221,f11492,f16759,f17434,f14233,f11494,f13368,f7748,f17436,f17503,f17507,f17555,f17558,f17566,f17567,f11505,f17585,f17591,f17596,f17568,f17615,f17586,f17620,f11520,f17625,f346,f16571,f14065,f12783,f17720,f18123,f3727,f18304,f18462,f4062,f18608,f7289,f19317,f19528,f19532,f19534,f19322,f19536,f2710,f19325,f9464,f19326,f9466,f19328,f19538,f19330,f9468,f19332,f9470,f19339,f9472,f8571,f19340,f9474,f19698,f19706,f19707,f19709,f19711,f19713,f19721,f19737,f19764,f14092,f19777,f3441,f3439,f19778,f8438,f8436,f19781,f17023,f17021,f19783,f3302,f3300,f19785,f8108,f8106,f19793,f9105,f9103,f20015,f20018,f20019,f20020,f20021,f20022,f20065,f20001,f20003,f20076,f20064,f20063,f20062,f13789,f11513,f14686,f14687,f14688,f14689,f20061,f14691,f14693,f14694,f15328,f15291,f15334,f15338,f20084,f20060,f15349,f15357,f15300,f20059,f20079,f20057,f20081,f20055,f20053,f20050,f20087,f20048,f20089,f20046,f17277,f20044,f14940,f17722,f20042,f20094,f18162,f20040,f20096,f18502,f20038,f20098,f19321,f20100,f20032,f12438,f20029,f20101,f19727,f20078,f20026,f11517,f20102,f20115,f20119,f20121,f20123,f20221,f20279,f20290,f20302,f20306,f20307,f20312,f20314,f20311,f20309,f20379,f20393,f20305,f20304,f20390,f20308,f20395,f20398,f20491,f20565,f20569,f20571,f20574,f20577,f20582,f20585,f20588,f20591,f20594,f20597,f20600,f20604,f20607,f20610,f20613,f20616,f20619,f20620,f20623,f20626,f20629,f20567,f20681,f20688,f20082,f20689,f20573,f20690,f20576,f20691,f20579,f20694,f20085,f20697,f20587,f20698,f20590,f20699,f20593,f20700,f20596,f20701,f20599,f20702,f20602,f20704,f20606,f20705,f20609,f20706,f20612,f20707,f20615,f20708,f20618,f20709,f20092,f20710,f20622,f20711,f20625,f20712,f20628,f20713,f20683,f20091,f20717,f20090,f20849,f20853,f20851,f20979,f20981,f21066,f21067,f21068,f21072,f21075,f21079,f21084,f21089,f21091,f21088,f9866,f4199,f21086,f3841,f7754,f21117,f21118,f3201,f278,f21173,f21177,f21175,f21215,f21228,f275,f11553,f21229,f14064,f21233,f14060,f14057,f14055,f21231,f21239,f21234,f14051,f21236,f14048,f338,f21237,f21329,f21332,f21120,f106,f21350,f21528,f21580,f21623,f21628,f21792,f21795,f21895,f21929,f21933,f21936,f21937,f21938,f21939,f21940,f21941,f21942,f21945,f21946,f21951,f21953,f21954,f21956,f21957,f21960,f21963,f21966,f22008,f22015,f22326,f22329,f22477,f22482,f22485,f22488,f22491,f22493,f22496,f22499,f22502,f22505,f22508,f22510,f22511,f22513,f22514,f22516,f22517,f22520,f22523,f22526,f22529,f22532,f22537,f22479,f22733,f22734,f22735,f22962,f22967,f11642,f22968,f11645,f22970,f11654,f22971,f11658,f22972,f11661,f22973,f22975,f22976,f11664,f22977,f22978,f22980,f22981,f22983,f22984,f22985,f22964,f22986,f22966,f11635,f23031,f23033,f23249,f23251,f23252,f23212,f11506,f23258,f178,f23441,f23443,f21927,f23447,f12322,f23448,f2758,f23449,f2770,f23450,f2773,f23451,f12329,f23452,f12334,f23453,f12337,f23454,f12340,f23455,f21944,f23456,f12343,f23457,f21948,f23460,f21959,f23461,f21962,f23462,f21965,f23463,f2751,f23464,f21935,f23466,f23513,f23514,f23515,f23516,f23517,f23520,f23521,f23522,f23523,f23524,f23525,f23526,f23527,f23528,f23529,f23530,f23663,f23664,f23790,f23797,f23799,f23963,f23970,f23972,f23973,f21090,f24152,f13570,f24197,f22328,f13815,f24366,f14091,f4983,f24529,f24536,f24538,f24763,f24765,f13569,f24825,f24829,f24827,f24875,f24879,f24880,f24855,f20118,f20117,f24967,f25122,f25150,f25151,f25152,f25216,f24878,f25241,f25242,f25245,f25246,f25247,f25249,f25250,f25244,f25252,f25314,f24876,f25317,f20313,f25318,f24882,f25319,f25316,f25218,f25440,f25551,f25654,f25804,f25808,f25806,f25831,f25833,f25870,f25874,f25872,f25920,f25921,f25922,f25939,f25945,f25947,f25948,f25949,f25951,f25952,f25954,f25955,f25941,f25973,f26224,f26226,f26228,f26316,f26318,f26519,f25441,f26522,f25946,f26526,f25552,f26563,f26564,f26665,f26675,f26676,f26715,f26716,f26890,f26892,f26843,f26844,f26895,f26846,f26847,f26850,f13996,f26851,f14001,f26898,f14003,f26853,f26897,f26854,f26894,f26855,f27047,f27087,f27092,f27095,f27096,f27097,f27100,f27103,f27106,f27362,f27365,f27367,f27368,f27370,f27371,f27373,f27376,f27378,f27379,f27381,f27382,f27384,f27385,f27387,f27388,f27390,f27391,f27393,f27394,f27396,f27397,f27399,f27400,f27402,f27403,f27405,f27411,f27413,f27415,f21217,f27419,f27421,f27424,f27426,f27523,f27525,f28040,f27364,f28042,f28461,f28463,f28495,f28509,f28510,f28517,f28569,f28574,f28575,f28033,f22327,f28688,f28692,f28690,f28774,f28833,f28885,f28886,f28887,f22487,f28888,f22490,f28889,f28890,f28891,f22495,f28892,f22498,f28893,f22501,f28894,f28895,f22507,f28896,f22519,f28897,f22522,f28898,f22525,f28899,f22528,f28900,f22531,f28901,f22534,f28904,f28905,f28906,f28908,f28909,f28910,f28911,f28935,f28834,f28936,f28948,f28950,f29022,f28835,f9210,f29246,f29254,f25943,f29255,f29271,f29325,f29413,f29415,f29423,f29441,f29374,f29366,f29453,f14009,f29726,f29727,f29728,f29729,f29730,f29731,f29732,f29733,f29734,f29735,f29736,f29737,f29738,f29739,f29740,f29741,f29745,f29746,f29756,f29757,f29777,f29818,f29902,f29903,f23519,f29904,f29905,f29908,f29909,f27085,f29910,f29911,f29912,f29913,f29961,f22484,f29962,f22492,f29963,f22504,f29966,f27102,f29967,f29247,f29968,f27105,f29969,f27108,f29970,f28913,f30128,f29414,f13993,f30283,f30330,f1701,f30579,f26225,f30581,f9891,f30583,f27094,f30585,f26229,f30588,f29326,f30590,f30462,f30465,f30501,f30351,f30504,f30304,f30612,f30121,f30616,f29864,f29860,f29858,f30622,f30623,f30624,f29278,f29274,f30628,f29029,f28919,f28845,f30618,f28842,f30620,f24667,f30633,f30636,f30637,f24300,f30638,f24241,f30626,f24083,f30630,f23575,f30632,f23568,f23259,f30640,f30641,f21386,f30643,f21141,f12443,f484,f20630,f20521,f20422,f30645,f20103,f16132,f30646,f14773,f30647,f14705,f30648,f14040,f4984,f14027,f21230,f14014,f30650,f92,f30651,f29032,f29028,f28922,f28838,f28755,f30661,f28634,f774,f26408,f30664,f24086,f30654,f24082,f30656,f23578,f30658,f23569,f30667,f23478,f23471,f30660,f23297,f30671,f30672,f30673,f30652,f23072,f30675,f23035,f30677,f16194,f30682,f16078,f30663,f14829,f30683,f14683,f20719,f14043,f30685,f30686,f13890,f30669,f13199,f28576,f30520,f30689,f22481,f26174,f23914,f23211,f30688,f21472,f483,f30692,f29209,f2604,f26683,f30696,f30697,f1584,f10159,f30706,f21093,f182,f25910,f117,f30710])).
fof(f30710,plain,(
  ( ! [X20] : (s('type.list.list'('type.exhSem.v'),X20) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X20,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X20,'type.exhSem.v'))))) ) | $spl1168),
  inference(cnf_transformation,[],[f30710_D])).
fof(f30710_D,plain,(
  ( ! [X20] : (s('type.list.list'('type.exhSem.v'),X20) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X20,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X20,'type.exhSem.v'))))) ) <=> ~$spl1168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1168])])).
fof(f117,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl19),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f25910,plain,(
  ( ! [X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X20) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X20,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X20,'type.exhSem.v'))))) ) | ($spl28 | $spl48)),
  inference(duplicate_literal_removal,[],[f25901])).
fof(f25901,plain,(
  ( ! [X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X20) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X20,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X20,'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),X20) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X20,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X20,'type.exhSem.v'))))) ) | ($spl28 | $spl48)),
  inference(superposition,[],[f21082,f72])).
fof(f72,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X1,X0)),s('type.list.list'(X0),sK5(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X1,X0)),s('type.list.list'(X0),sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5])],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X10] : ! [X15] : (s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),X15) | ? [X60,X11] : s('type.list.list'(X10),X15) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X60),s('type.list.list'(X10),X11))))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.list.list_CASES')).
fof(f21082,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl28 | $spl48)),
  inference(forward_demodulation,[],[f161,f245])).
fof(f182,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | $spl39),
  inference(cnf_transformation,[],[f182_D])).
fof(f182_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f21093,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl828),
  inference(cnf_transformation,[],[f21093_D])).
fof(f21093_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl828),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl828])])).
fof(f30706,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl93 | $spl627)),
  inference(forward_demodulation,[],[f15234,f12430])).
fof(f12430,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl9),
  inference(trivial_inequality_removal,[],[f12428])).
fof(f12428,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl9),
  inference(superposition,[],[f96,f72])).
fof(f96,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl9),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f15234,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl82 | $spl93 | $spl627)),
  inference(forward_demodulation,[],[f15095,f12430])).
fof(f15095,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl627)),
  inference(superposition,[],[f11702,f14991])).
fof(f14991,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))) ) | ($spl82 | $spl93)),
  inference(subsumption_resolution,[],[f14936,f997])).
fof(f997,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)))) ) | $spl82),
  inference(superposition,[],[f484,f72])).
fof(f14936,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),X8) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f11787,f14928])).
fof(f14928,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),X12) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X12,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X12,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X12)))) ) | ($spl82 | $spl93)),
  inference(subsumption_resolution,[],[f14905,f997])).
fof(f14905,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),X12) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X12))) | s('type.list.list'('type.exhLang.pat'),X12) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X12,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X12,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X12)))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f11787,f72])).
fof(f11787,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1115,f72])).
fof(f1115,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl93)),
  inference(forward_demodulation,[],[f773,f484])).
fof(f773,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl93),
  inference(cnf_transformation,[],[f773_D])).
fof(f773_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f11702,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl627),
  inference(cnf_transformation,[],[f11702_D])).
fof(f11702_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl627),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl627])])).
fof(f10159,plain,(
  ( ! [X6,X4,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl550),
  inference(cnf_transformation,[],[f10159_D])).
fof(f10159_D,plain,(
  ( ! [X6,X4,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f1584,plain,(
  ( ! [X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) | $spl120),
  inference(cnf_transformation,[],[f1584_D])).
fof(f1584_D,plain,(
  ( ! [X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f30697,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X29))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X27),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X26),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28)))) ) | ($spl9 | $spl1088)),
  inference(forward_demodulation,[],[f29480,f29741])).
fof(f29480,plain,(
  ( ! [X30,X28,X26,X29,X27] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X27),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X26),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X29))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X30),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X26),s('type.list.list'('type.exhLang.pat'),sK1))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X29)))) ) | $spl9),
  inference(superposition,[],[f1564,f12468])).
fof(f12468,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl9),
  inference(forward_demodulation,[],[f12447,f73])).
fof(f73,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X10] : ! [X12] : s('type.list.list'(X10),'const.list.SNOC_2'(s(X10,X12),s('type.list.list'(X10),'const.list.NIL_0'))) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X12),s('type.list.list'(X10),'const.list.NIL_0')))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.list.SNOC|split|0')).
fof(f12447,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl9),
  inference(superposition,[],[f74,f12430])).
fof(f74,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.SNOC_2'(s(X0,X1),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X10] : ! [X12,X61,X15] : s('type.list.list'(X10),'const.list.SNOC_2'(s(X10,X12),s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X61),s('type.list.list'(X10),X15))))) = s('type.list.list'(X10),'const.list.CONS_2'(s(X10,X61),s('type.list.list'(X10),'const.list.SNOC_2'(s(X10,X12),s('type.list.list'(X10),X15)))))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.list.SNOC|split|1')).
fof(f1564,plain,(
  ( ! [X12,X10,X13,X11,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),X9),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13),s('type.list.list'('type.exhLang.pat'),X9),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12)))) )),
  inference(superposition,[],[f69,f817])).
fof(f817,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) )),
  inference(superposition,[],[f71,f72])).
fof(f71,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X8,X9] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.exhSem.pmatch_def|split|19')).
fof(f69,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X56,X57,X8,X9] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X56),s('type.list.list'('type.exhLang.pat'),X57))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.exhSem.pmatch_def|split|21')).
fof(f30696,plain,(
  ( ! [X206,X204,X207,X205] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X207))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X205),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X204),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X206)))) )),
  inference(forward_demodulation,[],[f29520,f69])).
fof(f29520,plain,(
  ( ! [X208,X206,X204,X207,X205] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X205),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X204),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X206))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X207))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X208),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X204),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X207)))) )),
  inference(superposition,[],[f1564,f73])).
fof(f26683,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | $spl988),
  inference(cnf_transformation,[],[f26683_D])).
fof(f26683_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) <=> ~$spl988),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl988])])).
fof(f2604,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | $spl190),
  inference(cnf_transformation,[],[f2604_D])).
fof(f2604_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f29209,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl768)),
  inference(trivial_inequality_removal,[],[f29195])).
fof(f29195,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl768)),
  inference(superposition,[],[f22222,f25472])).
fof(f25472,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl768),
  inference(superposition,[],[f70,f25417])).
fof(f25417,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | $spl768),
  inference(superposition,[],[f25149,f20306])).
fof(f25149,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))) ) | $spl768),
  inference(forward_demodulation,[],[f25135,f73])).
fof(f25135,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))) ) | $spl768),
  inference(superposition,[],[f74,f20306])).
fof(f70,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),X0))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X58,X59,X8,X9] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X59),s('type.list.list'('type.exhSem.v'),X58))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.exhSem.pmatch_def|split|22')).
fof(f22222,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X1),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl9 | $spl48)),
  inference(superposition,[],[f21222,f72])).
fof(f21222,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl48)),
  inference(superposition,[],[f21219,f72])).
fof(f21219,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48)),
  inference(forward_demodulation,[],[f21081,f12430])).
fof(f21081,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl48),
  inference(forward_demodulation,[],[f67,f245])).
fof(f67,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f60])).
fof(f60,plain,(
  ? [X0,X1,X2,X3] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2,X3] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X6),s('type.list.list'('type.exhLang.pat'),X7))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X6),s('type.list.list'('type.exhLang.pat'),X7))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))),
  file('thm.exhProps.pmatch_list_snoc_nil|split|1','thm.exhProps.pmatch_list_snoc_nil|split|1')).
fof(f30692,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl1166),
  inference(cnf_transformation,[],[f30692_D])).
fof(f30692_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl1166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1166])])).
fof(f483,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl83),
  inference(cnf_transformation,[],[f483_D])).
fof(f483_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f21472,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl81),
  inference(superposition,[],[f480,f72])).
fof(f30688,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl1164),
  inference(cnf_transformation,[],[f30688_D])).
fof(f30688_D,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) <=> ~$spl1164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1164])])).
fof(f23211,plain,(
  ( ! [X6,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6)))) ) | $spl381),
  inference(superposition,[],[f7748,f817])).
fof(f23914,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl81),
  inference(superposition,[],[f480,f72])).
fof(f26174,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl381),
  inference(superposition,[],[f7748,f817])).
fof(f22481,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl870),
  inference(cnf_transformation,[],[f22481_D])).
fof(f22481_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl870),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl870])])).
fof(f30689,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl994 | $spl1073)),
  inference(forward_demodulation,[],[f29859,f26894])).
fof(f29859,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1073),
  inference(superposition,[],[f29452,f72])).
fof(f29452,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl1073),
  inference(cnf_transformation,[],[f29452_D])).
fof(f29452_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl1073),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1073])])).
fof(f30520,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl381),
  inference(superposition,[],[f7748,f817])).
fof(f28576,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl1052),
  inference(cnf_transformation,[],[f28576_D])).
fof(f28576_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) <=> ~$spl1052),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1052])])).
fof(f13199,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl37),
  inference(superposition,[],[f12212,f72])).
fof(f12212,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl37),
  inference(superposition,[],[f179,f72])).
fof(f30669,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl1150),
  inference(cnf_transformation,[],[f30669_D])).
fof(f30669_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl1150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1150])])).
fof(f13890,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl671),
  inference(superposition,[],[f13816,f72])).
fof(f13816,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl671),
  inference(cnf_transformation,[],[f13816_D])).
fof(f13816_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl671),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl671])])).
fof(f30686,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | ($spl591 | $spl994)),
  inference(forward_demodulation,[],[f14028,f26894])).
fof(f14028,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl591),
  inference(superposition,[],[f11506,f72])).
fof(f30685,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl1162),
  inference(cnf_transformation,[],[f30685_D])).
fof(f30685_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl1162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1162])])).
fof(f14043,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl675),
  inference(superposition,[],[f13994,f72])).
fof(f20719,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl816),
  inference(cnf_transformation,[],[f20719_D])).
fof(f20719_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl816),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl816])])).
fof(f14683,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl637),
  inference(superposition,[],[f12147,f72])).
fof(f12147,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl637),
  inference(cnf_transformation,[],[f12147_D])).
fof(f12147_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl637),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl637])])).
fof(f30683,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl1160),
  inference(cnf_transformation,[],[f30683_D])).
fof(f30683_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) <=> ~$spl1160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1160])])).
fof(f14829,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl637),
  inference(superposition,[],[f14681,f72])).
fof(f14681,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl637),
  inference(superposition,[],[f12147,f72])).
fof(f30663,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl1146),
  inference(cnf_transformation,[],[f30663_D])).
fof(f30663_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) <=> ~$spl1146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1146])])).
fof(f16078,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl671),
  inference(superposition,[],[f13888,f72])).
fof(f13888,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl671),
  inference(superposition,[],[f13816,f72])).
fof(f30682,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl1158),
  inference(cnf_transformation,[],[f30682_D])).
fof(f30682_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) <=> ~$spl1158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1158])])).
fof(f16194,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl675),
  inference(superposition,[],[f14041,f72])).
fof(f14041,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl675),
  inference(superposition,[],[f13994,f72])).
fof(f30677,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1156),
  inference(cnf_transformation,[],[f30677_D])).
fof(f30677_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1156])])).
fof(f23035,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl609),
  inference(superposition,[],[f11635,f72])).
fof(f30675,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1154),
  inference(cnf_transformation,[],[f30675_D])).
fof(f30675_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1154])])).
fof(f23072,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl625),
  inference(superposition,[],[f11664,f72])).
fof(f30652,plain,(
  ( ! [X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) | $spl1134),
  inference(cnf_transformation,[],[f30652_D])).
fof(f30652_D,plain,(
  ( ! [X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) <=> ~$spl1134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1134])])).
fof(f30673,plain,(
  ( ! [X14,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X14),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1)) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f23257,f12430])).
fof(f23257,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f23214,f12430])).
fof(f23214,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))) ) | $spl627),
  inference(superposition,[],[f11702,f817])).
fof(f30672,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | ($spl591 | $spl994)),
  inference(forward_demodulation,[],[f23260,f26894])).
fof(f23260,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl591),
  inference(superposition,[],[f11506,f72])).
fof(f30671,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1152),
  inference(cnf_transformation,[],[f30671_D])).
fof(f30671_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1152])])).
fof(f23297,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl909),
  inference(superposition,[],[f22964,f72])).
fof(f30660,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl1142),
  inference(cnf_transformation,[],[f30660_D])).
fof(f30660_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl1142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1142])])).
fof(f23471,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl891),
  inference(superposition,[],[f22510,f72])).
fof(f23478,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl671),
  inference(superposition,[],[f13816,f72])).
fof(f30667,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1148),
  inference(cnf_transformation,[],[f30667_D])).
fof(f30667_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1148])])).
fof(f23569,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl917),
  inference(superposition,[],[f22983,f72])).
fof(f30658,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl1140),
  inference(cnf_transformation,[],[f30658_D])).
fof(f30658_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl1140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1140])])).
fof(f23578,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl903),
  inference(superposition,[],[f22528,f72])).
fof(f30656,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl1138),
  inference(cnf_transformation,[],[f30656_D])).
fof(f30656_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl1138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1138])])).
fof(f24082,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl897),
  inference(superposition,[],[f22519,f72])).
fof(f30654,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl1136),
  inference(cnf_transformation,[],[f30654_D])).
fof(f30654_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl1136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1136])])).
fof(f24086,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl899),
  inference(superposition,[],[f22522,f72])).
fof(f30664,plain,(
  ( ! [X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1)) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f26234,f12430])).
fof(f26234,plain,(
  ( ! [X15,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f26177,f12430])).
fof(f26177,plain,(
  ( ! [X15,X16] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | $spl627),
  inference(superposition,[],[f11702,f817])).
fof(f26408,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl671),
  inference(superposition,[],[f13888,f72])).
fof(f774,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl92),
  inference(cnf_transformation,[],[f774_D])).
fof(f774_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f28634,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl865),
  inference(superposition,[],[f22327,f72])).
fof(f30661,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat'))))) ) | $spl1144),
  inference(cnf_transformation,[],[f30661_D])).
fof(f30661_D,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat'))))) ) <=> ~$spl1144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1144])])).
fof(f28755,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)),'type.exhLang.pat'))))) ) | $spl865),
  inference(superposition,[],[f28632,f72])).
fof(f28632,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl865),
  inference(superposition,[],[f22327,f72])).
fof(f28838,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl891),
  inference(superposition,[],[f22510,f72])).
fof(f28922,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl903),
  inference(superposition,[],[f22528,f72])).
fof(f29028,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl897),
  inference(superposition,[],[f22519,f72])).
fof(f29032,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl899),
  inference(superposition,[],[f22522,f72])).
fof(f30651,plain,(
  ( ! [X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1)) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f30594,f12430])).
fof(f30594,plain,(
  ( ! [X17,X18] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) | ($spl9 | $spl627)),
  inference(forward_demodulation,[],[f30524,f12430])).
fof(f30524,plain,(
  ( ! [X17,X18] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) | $spl627),
  inference(superposition,[],[f11702,f817])).
fof(f92,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl4),
  inference(cnf_transformation,[],[f92_D])).
fof(f92_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f30650,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl1133),
  inference(cnf_transformation,[],[f30650_D])).
fof(f30650_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl1133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1133])])).
fof(f14014,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl629),
  inference(superposition,[],[f11767,f72])).
fof(f11767,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl629),
  inference(cnf_transformation,[],[f11767_D])).
fof(f11767_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl629),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl629])])).
fof(f21230,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl837),
  inference(cnf_transformation,[],[f21230_D])).
fof(f21230_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl837),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl837])])).
fof(f14027,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl591),
  inference(superposition,[],[f11506,f72])).
fof(f4984,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl301),
  inference(cnf_transformation,[],[f4984_D])).
fof(f4984_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl301),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl301])])).
fof(f14040,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl675),
  inference(superposition,[],[f13994,f72])).
fof(f30648,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl1130),
  inference(cnf_transformation,[],[f30648_D])).
fof(f30648_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) <=> ~$spl1130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1130])])).
fof(f14705,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl659),
  inference(superposition,[],[f14604,f72])).
fof(f14604,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl659),
  inference(superposition,[],[f12488,f72])).
fof(f30647,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl1128),
  inference(cnf_transformation,[],[f30647_D])).
fof(f30647_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) <=> ~$spl1128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1128])])).
fof(f14773,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl637),
  inference(superposition,[],[f14681,f72])).
fof(f30646,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl1126),
  inference(cnf_transformation,[],[f30646_D])).
fof(f30646_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) <=> ~$spl1126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1126])])).
fof(f16132,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl675),
  inference(superposition,[],[f14041,f72])).
fof(f20103,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl599),
  inference(superposition,[],[f11517,f72])).
fof(f30645,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1125),
  inference(cnf_transformation,[],[f30645_D])).
fof(f30645_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1125])])).
fof(f20422,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl729),
  inference(superposition,[],[f20077,f72])).
fof(f20077,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl729),
  inference(cnf_transformation,[],[f20077_D])).
fof(f20077_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl729),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl729])])).
fof(f20521,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl599),
  inference(superposition,[],[f11517,f72])).
fof(f20630,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl729),
  inference(superposition,[],[f20077,f72])).
fof(f484,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl82),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f12443,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl9),
  inference(superposition,[],[f12430,f72])).
fof(f21141,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl9),
  inference(superposition,[],[f12430,f72])).
fof(f30643,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1123),
  inference(cnf_transformation,[],[f30643_D])).
fof(f30643_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1123])])).
fof(f21386,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl9 | $spl729)),
  inference(superposition,[],[f21140,f72])).
fof(f21140,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl729)),
  inference(backward_demodulation,[],[f12430,f20077])).
fof(f30641,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl1120),
  inference(cnf_transformation,[],[f30641_D])).
fof(f30641_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) <=> ~$spl1120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1120])])).
fof(f30640,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(forward_demodulation,[],[f21392,f73])).
fof(f21392,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(superposition,[],[f12468,f72])).
fof(f23259,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl591),
  inference(superposition,[],[f11506,f72])).
fof(f23568,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl917),
  inference(superposition,[],[f22983,f72])).
fof(f30632,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1113),
  inference(cnf_transformation,[],[f30632_D])).
fof(f30632_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1113])])).
fof(f23575,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl903),
  inference(superposition,[],[f22528,f72])).
fof(f30630,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1111),
  inference(cnf_transformation,[],[f30630_D])).
fof(f30630_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1111])])).
fof(f24083,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl899),
  inference(superposition,[],[f22522,f72])).
fof(f30626,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1107),
  inference(cnf_transformation,[],[f30626_D])).
fof(f30626_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1107])])).
fof(f24241,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl901),
  inference(superposition,[],[f22525,f72])).
fof(f30638,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl1118),
  inference(cnf_transformation,[],[f30638_D])).
fof(f30638_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) <=> ~$spl1118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1118])])).
fof(f24300,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | ($spl9 | $spl729)),
  inference(superposition,[],[f21387,f72])).
fof(f21387,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl729)),
  inference(superposition,[],[f21140,f72])).
fof(f30637,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | $spl1116),
  inference(cnf_transformation,[],[f30637_D])).
fof(f30637_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) <=> ~$spl1116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1116])])).
fof(f30636,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(forward_demodulation,[],[f30635,f73])).
fof(f30635,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(forward_demodulation,[],[f30634,f74])).
fof(f30634,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(forward_demodulation,[],[f24367,f73])).
fof(f24367,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl9),
  inference(superposition,[],[f21427,f72])).
fof(f21427,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl9),
  inference(forward_demodulation,[],[f21426,f73])).
fof(f21426,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl9),
  inference(forward_demodulation,[],[f21397,f74])).
fof(f21397,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl9),
  inference(superposition,[],[f74,f12468])).
fof(f30633,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl1114),
  inference(cnf_transformation,[],[f30633_D])).
fof(f30633_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) <=> ~$spl1114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1114])])).
fof(f24667,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | ($spl9 | $spl729)),
  inference(superposition,[],[f24666,f72])).
fof(f24666,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl729)),
  inference(forward_demodulation,[],[f20423,f12430])).
fof(f20423,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl729),
  inference(superposition,[],[f20077,f72])).
fof(f30620,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1100),
  inference(cnf_transformation,[],[f30620_D])).
fof(f30620_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1100])])).
fof(f28842,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl994),
  inference(superposition,[],[f26894,f72])).
fof(f30618,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl1099),
  inference(cnf_transformation,[],[f30618_D])).
fof(f30618_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl1099),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1099])])).
fof(f28845,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl67 | $spl994)),
  inference(superposition,[],[f23871,f26894])).
fof(f23871,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl67),
  inference(superposition,[],[f337,f72])).
fof(f28919,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl903),
  inference(superposition,[],[f22528,f72])).
fof(f29029,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl899),
  inference(superposition,[],[f22522,f72])).
fof(f30628,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1109),
  inference(cnf_transformation,[],[f30628_D])).
fof(f30628_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1109])])).
fof(f29274,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl993),
  inference(superposition,[],[f26891,f72])).
fof(f26891,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl993),
  inference(cnf_transformation,[],[f26891_D])).
fof(f26891_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl993),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl993])])).
fof(f29278,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl901),
  inference(superposition,[],[f22525,f72])).
fof(f30624,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl1104),
  inference(cnf_transformation,[],[f30624_D])).
fof(f30624_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) <=> ~$spl1104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1104])])).
fof(f30623,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl994),
  inference(forward_demodulation,[],[f29282,f73])).
fof(f29282,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) ) | $spl994),
  inference(superposition,[],[f28846,f72])).
fof(f28846,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl994),
  inference(superposition,[],[f74,f26894])).
fof(f30622,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1103),
  inference(cnf_transformation,[],[f30622_D])).
fof(f30622_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1103])])).
fof(f29858,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl1073),
  inference(superposition,[],[f29452,f72])).
fof(f29860,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl994),
  inference(superposition,[],[f26894,f72])).
fof(f29864,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl67 | $spl994)),
  inference(superposition,[],[f23871,f26894])).
fof(f30616,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl1097),
  inference(cnf_transformation,[],[f30616_D])).
fof(f30616_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl1097),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1097])])).
fof(f30121,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl1011),
  inference(superposition,[],[f27363,f72])).
fof(f27363,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1011),
  inference(cnf_transformation,[],[f27363_D])).
fof(f27363_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1011),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1011])])).
fof(f30612,plain,(
  $false | ($spl9 | $spl11 | $spl40 | $spl1088)),
  inference(trivial_inequality_removal,[],[f30608])).
fof(f30608,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl11 | $spl40 | $spl1088)),
  inference(superposition,[],[f99,f30593])).
fof(f30593,plain,(
  ( ! [X15] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | ($spl9 | $spl40 | $spl1088)),
  inference(forward_demodulation,[],[f30592,f30254])).
fof(f30254,plain,(
  ( ! [X37,X35,X36] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X35),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X36),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X37)))) ) | ($spl40 | $spl1088)),
  inference(superposition,[],[f29741,f185])).
fof(f30592,plain,(
  ( ! [X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | $spl9),
  inference(subsumption_resolution,[],[f30523,f12430])).
fof(f30523,plain,(
  ( ! [X15,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | $spl9),
  inference(superposition,[],[f12441,f817])).
fof(f12441,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl9),
  inference(backward_demodulation,[],[f12430,f96])).
fof(f30304,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat'))))) ) | $spl1092),
  inference(cnf_transformation,[],[f30304_D])).
fof(f30304_D,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat'))))) ) <=> ~$spl1092),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1092])])).
fof(f30504,plain,(
  ( ! [X68,X66,X69,X67] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X69))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X66),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X68))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X66),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X68)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X66),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X68)))),'type.exhLang.pat'))))) ) | $spl1088),
  inference(superposition,[],[f29741,f817])).
fof(f30351,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | $spl1094),
  inference(cnf_transformation,[],[f30351_D])).
fof(f30351_D,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) <=> ~$spl1094),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1094])])).
fof(f30501,plain,(
  ( ! [X57,X58] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X58))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X57),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X57),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X57),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl40 | $spl1088)),
  inference(superposition,[],[f30254,f817])).
fof(f30465,plain,(
  ( ! [X70,X72,X71,X69] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X72))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X69),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X70),s('type.list.list'('type.exhLang.pat'),X71))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X69),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X70),s('type.list.list'('type.exhLang.pat'),X71)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X69),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X70),s('type.list.list'('type.exhLang.pat'),X71)))),'type.exhLang.pat'))))) ) | $spl1088),
  inference(superposition,[],[f817,f29741])).
fof(f30462,plain,(
  ( ! [X61,X60] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X61))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X60),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X60),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X60),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl40 | $spl1088)),
  inference(superposition,[],[f817,f30254])).
fof(f30590,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X30)))) ) | $spl994),
  inference(forward_demodulation,[],[f30589,f26894])).
fof(f30589,plain,(
  ( ! [X30] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X30))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | $spl994),
  inference(forward_demodulation,[],[f30384,f69])).
fof(f30384,plain,(
  ( ! [X30,X31] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X30))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X31),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X30))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | $spl994),
  inference(superposition,[],[f817,f26894])).
fof(f29326,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl1068),
  inference(cnf_transformation,[],[f29326_D])).
fof(f29326_D,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) <=> ~$spl1068),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1068])])).
fof(f30588,plain,(
  ( ! [X28,X27] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28)))) ) | $spl994),
  inference(forward_demodulation,[],[f30587,f28846])).
fof(f30587,plain,(
  ( ! [X28,X27] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl994),
  inference(forward_demodulation,[],[f30383,f69])).
fof(f30383,plain,(
  ( ! [X28,X29,X27] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X29),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X27),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl994),
  inference(superposition,[],[f817,f28846])).
fof(f26229,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl982),
  inference(cnf_transformation,[],[f26229_D])).
fof(f26229_D,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) <=> ~$spl982),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl982])])).
fof(f30585,plain,(
  ( ! [X19,X18] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19)))) ) | ($spl9 | $spl550)),
  inference(forward_demodulation,[],[f30584,f12468])).
fof(f30584,plain,(
  ( ! [X19,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl9 | $spl550)),
  inference(forward_demodulation,[],[f30380,f10159])).
fof(f30380,plain,(
  ( ! [X19,X20,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X20),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl9),
  inference(superposition,[],[f817,f12468])).
fof(f27094,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | $spl1002),
  inference(cnf_transformation,[],[f27094_D])).
fof(f27094_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) <=> ~$spl1002),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1002])])).
fof(f30583,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16)))) ) | $spl924),
  inference(forward_demodulation,[],[f30582,f23519])).
fof(f30582,plain,(
  ( ! [X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | $spl924),
  inference(forward_demodulation,[],[f30379,f69])).
fof(f30379,plain,(
  ( ! [X17,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X17),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | $spl924),
  inference(superposition,[],[f817,f23519])).
fof(f9891,plain,(
  ( ! [X43,X44] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) | $spl548),
  inference(cnf_transformation,[],[f9891_D])).
fof(f9891_D,plain,(
  ( ! [X43,X44] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) <=> ~$spl548),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl548])])).
fof(f30581,plain,(
  ( ! [X14,X12,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X14))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X13) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X13,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X13,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f30378,f69])).
fof(f30378,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X14))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X14))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X13)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X13) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X13,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X13,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f817,f3865])).
fof(f3865,plain,(
  ( ! [X6,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),X6))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),X6))))))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f3787,f74])).
fof(f3787,plain,(
  ( ! [X6,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),X6))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))))))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f74,f3708])).
fof(f26225,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) | $spl980),
  inference(cnf_transformation,[],[f26225_D])).
fof(f26225_D,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) <=> ~$spl980),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl980])])).
fof(f30579,plain,(
  ( ! [X4,X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4)))) ) | ($spl191 | $spl268 | $spl550)),
  inference(forward_demodulation,[],[f30578,f9878])).
fof(f9878,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | ($spl191 | $spl268)),
  inference(subsumption_resolution,[],[f9726,f2603])).
fof(f2603,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | $spl191),
  inference(cnf_transformation,[],[f2603_D])).
fof(f2603_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f9726,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f3865,f73])).
fof(f30578,plain,(
  ( ! [X4,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) | ($spl191 | $spl268 | $spl550)),
  inference(forward_demodulation,[],[f30375,f10159])).
fof(f30375,plain,(
  ( ! [X4,X5,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X5),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) | ($spl191 | $spl268)),
  inference(superposition,[],[f817,f9878])).
fof(f1701,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl128),
  inference(cnf_transformation,[],[f1701_D])).
fof(f1701_D,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f30330,plain,(
  ( ! [X6,X4,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl40 | $spl1088)),
  inference(superposition,[],[f30254,f72])).
fof(f30283,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X14))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),X12)))),'type.exhLang.pat'))))) ) | $spl1088),
  inference(superposition,[],[f29741,f72])).
fof(f13993,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl672),
  inference(cnf_transformation,[],[f13993_D])).
fof(f13993_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f29414,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1071),
  inference(cnf_transformation,[],[f29414_D])).
fof(f29414_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1071),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1071])])).
fof(f30128,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl1011),
  inference(forward_demodulation,[],[f30122,f73])).
fof(f30122,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl1011),
  inference(superposition,[],[f27363,f72])).
fof(f28913,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1063),
  inference(cnf_transformation,[],[f28913_D])).
fof(f28913_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1063),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1063])])).
fof(f29970,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl865 | $spl924)),
  inference(forward_demodulation,[],[f29951,f23519])).
fof(f29951,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl865 | $spl924)),
  inference(superposition,[],[f28632,f23519])).
fof(f27108,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1009),
  inference(cnf_transformation,[],[f27108_D])).
fof(f27108_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1009),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1009])])).
fof(f29969,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl924)),
  inference(forward_demodulation,[],[f29950,f23519])).
fof(f29950,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl924)),
  inference(superposition,[],[f24666,f23519])).
fof(f27105,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1007),
  inference(cnf_transformation,[],[f27105_D])).
fof(f27105_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1007),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1007])])).
fof(f29968,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl67 | $spl924)),
  inference(forward_demodulation,[],[f29949,f23519])).
fof(f29949,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl67 | $spl924)),
  inference(superposition,[],[f23871,f23519])).
fof(f29247,plain,(
  ( ! [X17] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X17) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X17,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X17,'type.exhSem.v'))))) ) | $spl1064),
  inference(cnf_transformation,[],[f29247_D])).
fof(f29247_D,plain,(
  ( ! [X17] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X17) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X17,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X17,'type.exhSem.v'))))) ) <=> ~$spl1064),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1064])])).
fof(f29967,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X9) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X9,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X9,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl924)),
  inference(forward_demodulation,[],[f29948,f23519])).
fof(f29948,plain,(
  ( ! [X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),X9) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X9,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X9,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl924)),
  inference(superposition,[],[f22222,f23519])).
fof(f27102,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl1005),
  inference(cnf_transformation,[],[f27102_D])).
fof(f27102_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl1005),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1005])])).
fof(f29966,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl924)),
  inference(forward_demodulation,[],[f29945,f23519])).
fof(f29945,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl924)),
  inference(superposition,[],[f21387,f23519])).
fof(f22504,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl887),
  inference(cnf_transformation,[],[f22504_D])).
fof(f22504_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl887),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl887])])).
fof(f29963,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl105 | $spl924)),
  inference(forward_demodulation,[],[f29934,f23519])).
fof(f29934,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl105 | $spl924)),
  inference(superposition,[],[f7964,f23519])).
fof(f7964,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl105),
  inference(superposition,[],[f1286,f72])).
fof(f22492,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | $spl878),
  inference(cnf_transformation,[],[f22492_D])).
fof(f22492_D,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) <=> ~$spl878),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl878])])).
fof(f29962,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl268 | $spl924)),
  inference(forward_demodulation,[],[f29930,f23519])).
fof(f29930,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | ($spl268 | $spl924)),
  inference(superposition,[],[f3865,f23519])).
fof(f22484,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl873),
  inference(cnf_transformation,[],[f22484_D])).
fof(f22484_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl873),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl873])])).
fof(f29961,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl87 | $spl924)),
  inference(forward_demodulation,[],[f29925,f23519])).
fof(f29925,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl87 | $spl924)),
  inference(superposition,[],[f1320,f23519])).
fof(f1320,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl87),
  inference(superposition,[],[f593,f72])).
fof(f29913,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl865 | $spl994)),
  inference(forward_demodulation,[],[f29894,f26894])).
fof(f29894,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl865 | $spl994)),
  inference(superposition,[],[f28632,f26894])).
fof(f29912,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl994)),
  inference(forward_demodulation,[],[f29893,f26894])).
fof(f29893,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994)),
  inference(superposition,[],[f24666,f26894])).
fof(f29911,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl67 | $spl994)),
  inference(forward_demodulation,[],[f29892,f26894])).
fof(f29892,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl67 | $spl994)),
  inference(superposition,[],[f23871,f26894])).
fof(f29910,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X9) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X9,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X9,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl994)),
  inference(forward_demodulation,[],[f29891,f26894])).
fof(f29891,plain,(
  ( ! [X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),X9) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X9,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X9,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl994)),
  inference(superposition,[],[f22222,f26894])).
fof(f27085,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl998),
  inference(cnf_transformation,[],[f27085_D])).
fof(f27085_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl998),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl998])])).
fof(f29909,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl92 | $spl994)),
  inference(forward_demodulation,[],[f29890,f26894])).
fof(f29890,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl92 | $spl994)),
  inference(superposition,[],[f21797,f26894])).
fof(f21797,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl92),
  inference(superposition,[],[f774,f72])).
fof(f29908,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl994)),
  inference(forward_demodulation,[],[f29888,f26894])).
fof(f29888,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994)),
  inference(superposition,[],[f21387,f26894])).
fof(f29905,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl105 | $spl994)),
  inference(forward_demodulation,[],[f29877,f26894])).
fof(f29877,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl105 | $spl994)),
  inference(superposition,[],[f7964,f26894])).
fof(f29904,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl268 | $spl994)),
  inference(forward_demodulation,[],[f29873,f26894])).
fof(f29873,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl268 | $spl994)),
  inference(superposition,[],[f3865,f26894])).
fof(f23519,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | $spl924),
  inference(cnf_transformation,[],[f23519_D])).
fof(f23519_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) <=> ~$spl924),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl924])])).
fof(f29903,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl268 | $spl994)),
  inference(forward_demodulation,[],[f29872,f26894])).
fof(f29872,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl268 | $spl994)),
  inference(superposition,[],[f3708,f26894])).
fof(f29902,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl87 | $spl994)),
  inference(forward_demodulation,[],[f29868,f26894])).
fof(f29868,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl87 | $spl994)),
  inference(superposition,[],[f1320,f26894])).
fof(f29818,plain,(
  $false | ($spl994 | $spl1001 | $spl1072)),
  inference(subsumption_resolution,[],[f29778,f27086])).
fof(f27086,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl1001),
  inference(cnf_transformation,[],[f27086_D])).
fof(f27086_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl1001),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1001])])).
fof(f29778,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl994 | $spl1072)),
  inference(backward_demodulation,[],[f29453,f26894])).
fof(f29777,plain,(
  $false | ($spl11 | $spl994 | $spl1001 | $spl1010)),
  inference(trivial_inequality_removal,[],[f29773])).
fof(f29773,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl11 | $spl994 | $spl1001 | $spl1010)),
  inference(superposition,[],[f99,f29419])).
fof(f29419,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl994 | $spl1001 | $spl1010)),
  inference(forward_demodulation,[],[f29418,f69])).
fof(f29418,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl994 | $spl1001 | $spl1010)),
  inference(forward_demodulation,[],[f29417,f26894])).
fof(f29417,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl994 | $spl1001 | $spl1010)),
  inference(subsumption_resolution,[],[f29416,f27086])).
fof(f29416,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl994 | $spl1010)),
  inference(forward_demodulation,[],[f29361,f26894])).
fof(f29361,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl1010),
  inference(superposition,[],[f27364,f817])).
fof(f29757,plain,(
  $false | ($spl7 | $spl92)),
  inference(subsumption_resolution,[],[f94,f21803])).
fof(f21803,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl92),
  inference(superposition,[],[f69,f774])).
fof(f29756,plain,(
  $false | ($spl7 | $spl48 | $spl92)),
  inference(subsumption_resolution,[],[f284,f21803])).
fof(f284,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl7 | $spl48)),
  inference(backward_demodulation,[],[f245,f94])).
fof(f29746,plain,(
  ( ! [X24,X21,X25,X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X24),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X20),s('type.list.list'('type.exhLang.pat'),X21))))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X25))) | s('type.list.list'('type.exhLang.pat'),X21) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X21,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X21,'type.exhLang.pat'))))) ) | $spl1090),
  inference(cnf_transformation,[],[f29746_D])).
fof(f29746_D,plain,(
  ( ! [X24,X21,X25,X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X24),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X20),s('type.list.list'('type.exhLang.pat'),X21))))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X25))) | s('type.list.list'('type.exhLang.pat'),X21) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X21,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X21,'type.exhLang.pat'))))) ) <=> ~$spl1090),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1090])])).
fof(f29745,plain,(
  ( ! [X24,X21,X25,X22,X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X24),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X20),s('type.list.list'('type.exhLang.pat'),X21))))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X25))) | s('type.list.list'('type.exhLang.pat'),X21) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X21,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X21,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f29567,f69])).
fof(f29567,plain,(
  ( ! [X24,X23,X21,X25,X22,X20] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X20),s('type.list.list'('type.exhLang.pat'),X21))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X22))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X24),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X20),s('type.list.list'('type.exhLang.pat'),X21))))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X25))) | s('type.list.list'('type.exhLang.pat'),X21) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X21,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X21,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f1564,f3865])).
fof(f29741,plain,(
  ( ! [X212,X210,X213,X211,X209] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X212),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X210),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X209),s('type.list.list'('type.exhLang.pat'),X211))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X213)))) ) | $spl1088),
  inference(cnf_transformation,[],[f29741_D])).
fof(f29741_D,plain,(
  ( ! [X212,X210,X213,X211,X209] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X212),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X210),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X209),s('type.list.list'('type.exhLang.pat'),X211))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X213)))) ) <=> ~$spl1088),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1088])])).
fof(f29740,plain,(
  ( ! [X212,X210,X213,X211,X209,X214] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X214))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X212),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X210),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X209),s('type.list.list'('type.exhLang.pat'),X211))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X213)))) )),
  inference(forward_demodulation,[],[f29521,f69])).
fof(f29521,plain,(
  ( ! [X212,X210,X215,X213,X211,X209,X214] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X212),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X210),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X209),s('type.list.list'('type.exhLang.pat'),X211))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X213))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X214))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X215),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X209),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X210),s('type.list.list'('type.exhLang.pat'),X211))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X214)))) )),
  inference(superposition,[],[f1564,f74])).
fof(f29739,plain,(
  ( ! [X200,X199,X201] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X200),s('type.list.list'('type.exhLang.pat'),X199),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X201))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),X199)) ) | $spl1086),
  inference(cnf_transformation,[],[f29739_D])).
fof(f29739_D,plain,(
  ( ! [X200,X199,X201] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X200),s('type.list.list'('type.exhLang.pat'),X199),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X201))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),X199)) ) <=> ~$spl1086),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1086])])).
fof(f29738,plain,(
  ( ! [X202,X200,X199,X201] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X202))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X200),s('type.list.list'('type.exhLang.pat'),X199),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X201))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),X199)) )),
  inference(forward_demodulation,[],[f29519,f69])).
fof(f29519,plain,(
  ( ! [X202,X200,X199,X203,X201] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X200),s('type.list.list'('type.exhLang.pat'),X199),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X201))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X202))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X203),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X199,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X199,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X202))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),X199)) )),
  inference(superposition,[],[f1564,f72])).
fof(f29737,plain,(
  ( ! [X123,X124,X122] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X123),s('type.list.list'('type.exhLang.pat'),sK5(X122,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X124))) | s('type.list.list'('type.exhLang.pat'),X122) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X122)))))) ) | $spl1084),
  inference(cnf_transformation,[],[f29737_D])).
fof(f29737_D,plain,(
  ( ! [X123,X124,X122] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X123),s('type.list.list'('type.exhLang.pat'),sK5(X122,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X124))) | s('type.list.list'('type.exhLang.pat'),X122) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X122)))))) ) <=> ~$spl1084),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1084])])).
fof(f29736,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X125))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X123),s('type.list.list'('type.exhLang.pat'),sK5(X122,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X124))) | s('type.list.list'('type.exhLang.pat'),X122) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X122)))))) ) | $spl268),
  inference(forward_demodulation,[],[f29500,f69])).
fof(f29500,plain,(
  ( ! [X125,X123,X126,X124,X122] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X123),s('type.list.list'('type.exhLang.pat'),sK5(X122,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X124))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X125))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X126),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(X122,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(X122,'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X125))) | s('type.list.list'('type.exhLang.pat'),X122) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X122)))))) ) | $spl268),
  inference(superposition,[],[f1564,f9833])).
fof(f9833,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(X8,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(X8,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))) ) | $spl268),
  inference(duplicate_literal_removal,[],[f9698])).
fof(f9698,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))))) | s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(X8,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(X8,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))) ) | $spl268),
  inference(superposition,[],[f3865,f3708])).
fof(f29735,plain,(
  ( ! [X101,X99,X100] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X100),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X101))) | s('type.list.list'('type.exhLang.pat'),X99) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X99,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X99,'type.exhLang.pat'))))) ) | $spl1082),
  inference(cnf_transformation,[],[f29735_D])).
fof(f29735_D,plain,(
  ( ! [X101,X99,X100] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X100),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X101))) | s('type.list.list'('type.exhLang.pat'),X99) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X99,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X99,'type.exhLang.pat'))))) ) <=> ~$spl1082),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1082])])).
fof(f29734,plain,(
  ( ! [X101,X99,X102,X100] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X102))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X100),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X101))) | s('type.list.list'('type.exhLang.pat'),X99) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X99,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X99,'type.exhLang.pat'))))) ) | $spl92),
  inference(forward_demodulation,[],[f29495,f69])).
fof(f29495,plain,(
  ( ! [X103,X101,X99,X102,X100] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X100),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X101))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X102))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X103),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X99)),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X102))) | s('type.list.list'('type.exhLang.pat'),X99) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X99,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X99,'type.exhLang.pat'))))) ) | $spl92),
  inference(superposition,[],[f1564,f21797])).
fof(f29733,plain,(
  ( ! [X74,X75,X73] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X74),s('type.list.list'('type.exhLang.pat'),X73),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X75))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X73))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))) ) | $spl1080),
  inference(cnf_transformation,[],[f29733_D])).
fof(f29733_D,plain,(
  ( ! [X74,X75,X73] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X74),s('type.list.list'('type.exhLang.pat'),X73),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X75))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X73))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))) ) <=> ~$spl1080),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1080])])).
fof(f29732,plain,(
  ( ! [X76,X74,X75,X73] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X76))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X74),s('type.list.list'('type.exhLang.pat'),X73),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X75))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X73))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))) ) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f29489,f69])).
fof(f29489,plain,(
  ( ! [X76,X74,X77,X75,X73] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X74),s('type.list.list'('type.exhLang.pat'),X73),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X75))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X76))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X77),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X73,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X73,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X76))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X73))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3)))) ) | ($spl6 | $spl48)),
  inference(superposition,[],[f1564,f22124])).
fof(f22124,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl6 | $spl48)),
  inference(superposition,[],[f21083,f72])).
fof(f21083,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48)),
  inference(forward_demodulation,[],[f93,f245])).
fof(f93,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl6),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f29731,plain,(
  ( ! [X70,X68,X69] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X69),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X70))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')))) ) | $spl1078),
  inference(cnf_transformation,[],[f29731_D])).
fof(f29731_D,plain,(
  ( ! [X70,X68,X69] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X69),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X70))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')))) ) <=> ~$spl1078),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1078])])).
fof(f29730,plain,(
  ( ! [X70,X68,X71,X69] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X71))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X69),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X70))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')))) ) | $spl606),
  inference(forward_demodulation,[],[f29488,f69])).
fof(f29488,plain,(
  ( ! [X70,X68,X72,X71,X69] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X69),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X70))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X71))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X72),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X68,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X68,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X71))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X68),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')))) ) | $spl606),
  inference(superposition,[],[f1564,f21690])).
fof(f21690,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl606),
  inference(superposition,[],[f11552,f72])).
fof(f11552,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl606),
  inference(cnf_transformation,[],[f11552_D])).
fof(f11552_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl606),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl606])])).
fof(f29729,plain,(
  ( ! [X64,X62,X67,X63] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X63),s('type.list.list'('type.exhLang.pat'),X62),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X64))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62)))))))) ) | $spl1076),
  inference(cnf_transformation,[],[f29729_D])).
fof(f29729_D,plain,(
  ( ! [X64,X62,X67,X63] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X63),s('type.list.list'('type.exhLang.pat'),X62),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X64))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62)))))))) ) <=> ~$spl1076),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1076])])).
fof(f29728,plain,(
  ( ! [X64,X62,X67,X65,X63] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X65))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X63),s('type.list.list'('type.exhLang.pat'),X62),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X64))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62)))))))) ) | $spl268),
  inference(forward_demodulation,[],[f29487,f69])).
fof(f29487,plain,(
  ( ! [X66,X64,X62,X67,X65,X63] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X63),s('type.list.list'('type.exhLang.pat'),X62),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X64))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X65))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X66),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X62,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X62,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X65))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X67),s('type.list.list'('type.exhLang.pat'),X62)))))))) ) | $spl268),
  inference(superposition,[],[f1564,f3865])).
fof(f29727,plain,(
  ( ! [X59,X57,X58] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X58),s('type.list.list'('type.exhLang.pat'),X57),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X59))) | s('type.list.list'('type.exhLang.pat'),X57) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X57)))))) ) | $spl1074),
  inference(cnf_transformation,[],[f29727_D])).
fof(f29727_D,plain,(
  ( ! [X59,X57,X58] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X58),s('type.list.list'('type.exhLang.pat'),X57),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X59))) | s('type.list.list'('type.exhLang.pat'),X57) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X57)))))) ) <=> ~$spl1074),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1074])])).
fof(f29726,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X60))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X58),s('type.list.list'('type.exhLang.pat'),X57),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X59))) | s('type.list.list'('type.exhLang.pat'),X57) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X57)))))) ) | $spl268),
  inference(forward_demodulation,[],[f29486,f69])).
fof(f29486,plain,(
  ( ! [X61,X59,X57,X60,X58] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X58),s('type.list.list'('type.exhLang.pat'),X57),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X59))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X60))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X61),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X57,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X57,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X60))) | s('type.list.list'('type.exhLang.pat'),X57) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X57)))))) ) | $spl268),
  inference(superposition,[],[f1564,f3708])).
fof(f14009,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl690),
  inference(cnf_transformation,[],[f14009_D])).
fof(f14009_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl690),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl690])])).
fof(f29453,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl1072),
  inference(cnf_transformation,[],[f29453_D])).
fof(f29453_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl1072),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1072])])).
fof(f29366,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl1010),
  inference(superposition,[],[f27364,f72])).
fof(f29374,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl1010),
  inference(superposition,[],[f72,f27364])).
fof(f29441,plain,(
  $false | ($spl268 | $spl925 | $spl994 | $spl1001 | $spl1010)),
  inference(subsumption_resolution,[],[f29440,f23518])).
fof(f23518,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | $spl925),
  inference(cnf_transformation,[],[f23518_D])).
fof(f23518_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) <=> ~$spl925),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl925])])).
fof(f29440,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl268 | $spl994 | $spl1001 | $spl1010)),
  inference(forward_demodulation,[],[f29439,f26894])).
fof(f29439,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl994 | $spl1001 | $spl1010)),
  inference(subsumption_resolution,[],[f29438,f27086])).
fof(f29438,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl994 | $spl1010)),
  inference(forward_demodulation,[],[f29370,f26894])).
fof(f29370,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl1010)),
  inference(superposition,[],[f3708,f27364])).
fof(f29423,plain,(
  $false | ($spl268 | $spl925 | $spl994 | $spl1001 | $spl1010)),
  inference(subsumption_resolution,[],[f29422,f23518])).
fof(f29422,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl268 | $spl994 | $spl1001 | $spl1010)),
  inference(forward_demodulation,[],[f29421,f26894])).
fof(f29421,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl994 | $spl1001 | $spl1010)),
  inference(subsumption_resolution,[],[f29420,f27086])).
fof(f29420,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl994 | $spl1010)),
  inference(forward_demodulation,[],[f29362,f26894])).
fof(f29362,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl1010)),
  inference(superposition,[],[f27364,f3708])).
fof(f29415,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1070),
  inference(cnf_transformation,[],[f29415_D])).
fof(f29415_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1070),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1070])])).
fof(f29413,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl1010),
  inference(forward_demodulation,[],[f29360,f73])).
fof(f29360,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl1010),
  inference(superposition,[],[f27364,f72])).
fof(f29325,plain,(
  ( ! [X12,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12)))) ) | $spl994),
  inference(forward_demodulation,[],[f29324,f28846])).
fof(f29324,plain,(
  ( ! [X12,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl994),
  inference(forward_demodulation,[],[f29289,f69])).
fof(f29289,plain,(
  ( ! [X12,X13,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl994),
  inference(superposition,[],[f817,f28846])).
fof(f29271,plain,(
  $false | ($spl191 | $spl268 | $spl925 | $spl992)),
  inference(subsumption_resolution,[],[f26962,f23518])).
fof(f26962,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl191 | $spl268 | $spl992)),
  inference(superposition,[],[f9878,f26892])).
fof(f29255,plain,(
  ( ! [X44] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X44),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) | $spl1066),
  inference(cnf_transformation,[],[f29255_D])).
fof(f29255_D,plain,(
  ( ! [X44] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X44),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) <=> ~$spl1066),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1066])])).
fof(f25943,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | $spl970),
  inference(cnf_transformation,[],[f25943_D])).
fof(f25943_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) <=> ~$spl970),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl970])])).
fof(f29254,plain,(
  ( ! [X44] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X44),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f29153,f26237])).
fof(f26237,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f25291,f20306])).
fof(f25291,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl762),
  inference(forward_demodulation,[],[f25290,f73])).
fof(f25290,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl762),
  inference(forward_demodulation,[],[f25276,f74])).
fof(f25276,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl762),
  inference(superposition,[],[f74,f25269])).
fof(f25269,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))) ) | $spl762),
  inference(forward_demodulation,[],[f25257,f73])).
fof(f25257,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))) ) | $spl762),
  inference(superposition,[],[f74,f20119])).
fof(f29153,plain,(
  ( ! [X44] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X44),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(superposition,[],[f22222,f25532])).
fof(f25532,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | ($spl762 | $spl768)),
  inference(superposition,[],[f25299,f25417])).
fof(f25299,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f74,f25272])).
fof(f25272,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(superposition,[],[f25269,f20306])).
fof(f29246,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X17) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X17,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X17,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl994)),
  inference(forward_demodulation,[],[f29092,f26894])).
fof(f29092,plain,(
  ( ! [X17] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),X17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhSem.v'),X17) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X17,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X17,'type.exhSem.v'))))) ) | ($spl9 | $spl48 | $spl994)),
  inference(superposition,[],[f22222,f26894])).
fof(f9210,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl518),
  inference(cnf_transformation,[],[f9210_D])).
fof(f9210_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl518),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl518])])).
fof(f28835,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1058),
  inference(cnf_transformation,[],[f28835_D])).
fof(f28835_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1058),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1058])])).
fof(f29022,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl84),
  inference(forward_demodulation,[],[f28969,f73])).
fof(f28969,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl84),
  inference(superposition,[],[f486,f72])).
fof(f28950,plain,(
  $false | ($spl85 | $spl381 | $spl570)),
  inference(subsumption_resolution,[],[f28949,f7748])).
fof(f28949,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl85 | $spl570)),
  inference(subsumption_resolution,[],[f28933,f11423])).
fof(f28933,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl85),
  inference(superposition,[],[f485,f72])).
fof(f485,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl85),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f28948,plain,(
  $false | ($spl6 | $spl9 | $spl48 | $spl85 | $spl268 | $spl570)),
  inference(subsumption_resolution,[],[f28947,f21219])).
fof(f28947,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl9 | $spl48 | $spl85 | $spl268 | $spl570)),
  inference(forward_demodulation,[],[f28946,f12496])).
fof(f12496,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f12495,f12430])).
fof(f12495,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl268)),
  inference(subsumption_resolution,[],[f12480,f12430])).
fof(f12480,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl268)),
  inference(superposition,[],[f12441,f3708])).
fof(f28946,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48 | $spl85 | $spl570)),
  inference(forward_demodulation,[],[f28945,f11423])).
fof(f28945,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48 | $spl85 | $spl570)),
  inference(subsumption_resolution,[],[f28932,f11423])).
fof(f28932,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48 | $spl85)),
  inference(superposition,[],[f485,f22124])).
fof(f28936,plain,(
  $false | ($spl85 | $spl118 | $spl570)),
  inference(subsumption_resolution,[],[f28927,f11423])).
fof(f28927,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl85 | $spl118)),
  inference(superposition,[],[f485,f1583])).
fof(f28834,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl1059),
  inference(cnf_transformation,[],[f28834_D])).
fof(f28834_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl1059),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1059])])).
fof(f28935,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl85),
  inference(forward_demodulation,[],[f28926,f73])).
fof(f28926,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl85),
  inference(superposition,[],[f485,f72])).
fof(f28911,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl865 | $spl994)),
  inference(forward_demodulation,[],[f28876,f26894])).
fof(f28876,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl865 | $spl994)),
  inference(superposition,[],[f28632,f26894])).
fof(f28910,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl994)),
  inference(forward_demodulation,[],[f28875,f26894])).
fof(f28875,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994)),
  inference(superposition,[],[f24666,f26894])).
fof(f28909,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl67 | $spl994)),
  inference(forward_demodulation,[],[f28874,f26894])).
fof(f28874,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl67 | $spl994)),
  inference(superposition,[],[f23871,f26894])).
fof(f28908,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl1060),
  inference(cnf_transformation,[],[f28908_D])).
fof(f28908_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl1060),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1060])])).
fof(f28906,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48 | $spl994)),
  inference(forward_demodulation,[],[f28873,f26894])).
fof(f28873,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl6 | $spl48 | $spl994)),
  inference(superposition,[],[f22124,f26894])).
fof(f28905,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl92 | $spl994)),
  inference(forward_demodulation,[],[f28872,f26894])).
fof(f28872,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl92 | $spl994)),
  inference(superposition,[],[f21797,f26894])).
fof(f28904,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl994)),
  inference(forward_demodulation,[],[f28870,f26894])).
fof(f28870,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994)),
  inference(superposition,[],[f21387,f26894])).
fof(f22534,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl907),
  inference(cnf_transformation,[],[f22534_D])).
fof(f22534_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl907),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl907])])).
fof(f28901,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl83 | $spl994)),
  inference(forward_demodulation,[],[f28868,f26894])).
fof(f28868,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl83 | $spl994)),
  inference(superposition,[],[f21124,f26894])).
fof(f21124,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl83),
  inference(superposition,[],[f483,f72])).
fof(f22531,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl905),
  inference(cnf_transformation,[],[f22531_D])).
fof(f22531_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl905),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl905])])).
fof(f28900,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl73 | $spl994)),
  inference(forward_demodulation,[],[f28867,f26894])).
fof(f28867,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl73 | $spl994)),
  inference(superposition,[],[f17648,f26894])).
fof(f17648,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl73),
  inference(superposition,[],[f345,f72])).
fof(f345,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl73),
  inference(cnf_transformation,[],[f345_D])).
fof(f345_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f22528,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl903),
  inference(cnf_transformation,[],[f22528_D])).
fof(f22528_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl903),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl903])])).
fof(f28899,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl637 | $spl994)),
  inference(forward_demodulation,[],[f28866,f26894])).
fof(f28866,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl637 | $spl994)),
  inference(superposition,[],[f14681,f26894])).
fof(f22525,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl901),
  inference(cnf_transformation,[],[f22525_D])).
fof(f22525_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl901),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl901])])).
fof(f28898,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl659 | $spl994)),
  inference(forward_demodulation,[],[f28865,f26894])).
fof(f28865,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl659 | $spl994)),
  inference(superposition,[],[f14604,f26894])).
fof(f22522,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl899),
  inference(cnf_transformation,[],[f22522_D])).
fof(f22522_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl899),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl899])])).
fof(f28897,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl675 | $spl994)),
  inference(forward_demodulation,[],[f28864,f26894])).
fof(f28864,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl675 | $spl994)),
  inference(superposition,[],[f14041,f26894])).
fof(f22519,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl897),
  inference(cnf_transformation,[],[f22519_D])).
fof(f22519_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl897),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl897])])).
fof(f28896,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl671 | $spl994)),
  inference(forward_demodulation,[],[f28863,f26894])).
fof(f28863,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl671 | $spl994)),
  inference(superposition,[],[f13888,f26894])).
fof(f22507,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl889),
  inference(cnf_transformation,[],[f22507_D])).
fof(f22507_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl889),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl889])])).
fof(f28895,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl307 | $spl994)),
  inference(forward_demodulation,[],[f28860,f26894])).
fof(f28860,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl307 | $spl994)),
  inference(superposition,[],[f8262,f26894])).
fof(f8262,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl307),
  inference(superposition,[],[f5096,f72])).
fof(f28894,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl105 | $spl994)),
  inference(forward_demodulation,[],[f28859,f26894])).
fof(f28859,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl105 | $spl994)),
  inference(superposition,[],[f7964,f26894])).
fof(f22501,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | $spl885),
  inference(cnf_transformation,[],[f22501_D])).
fof(f22501_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) <=> ~$spl885),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl885])])).
fof(f28893,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | ($spl107 | $spl994)),
  inference(forward_demodulation,[],[f28858,f26894])).
fof(f28858,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl107 | $spl994)),
  inference(superposition,[],[f7814,f26894])).
fof(f7814,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl107),
  inference(superposition,[],[f1289,f72])).
fof(f22498,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl883),
  inference(cnf_transformation,[],[f22498_D])).
fof(f22498_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl883),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl883])])).
fof(f28892,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl311 | $spl994)),
  inference(forward_demodulation,[],[f28857,f26894])).
fof(f28857,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl311 | $spl994)),
  inference(superposition,[],[f6432,f26894])).
fof(f6432,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl311),
  inference(superposition,[],[f5130,f72])).
fof(f22495,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl881),
  inference(cnf_transformation,[],[f22495_D])).
fof(f22495_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl881),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl881])])).
fof(f28891,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl315 | $spl994)),
  inference(forward_demodulation,[],[f28856,f26894])).
fof(f28856,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl315 | $spl994)),
  inference(superposition,[],[f5514,f26894])).
fof(f5514,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl315),
  inference(superposition,[],[f5201,f72])).
fof(f5201,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl315),
  inference(cnf_transformation,[],[f5201_D])).
fof(f5201_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl315),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl315])])).
fof(f28890,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl268 | $spl994)),
  inference(forward_demodulation,[],[f28855,f26894])).
fof(f28855,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl268 | $spl994)),
  inference(superposition,[],[f3865,f26894])).
fof(f28889,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl268 | $spl994)),
  inference(forward_demodulation,[],[f28854,f26894])).
fof(f28854,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl268 | $spl994)),
  inference(superposition,[],[f3708,f26894])).
fof(f22490,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl877),
  inference(cnf_transformation,[],[f22490_D])).
fof(f22490_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl877),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl877])])).
fof(f28888,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl153 | $spl994)),
  inference(forward_demodulation,[],[f28853,f26894])).
fof(f28853,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl153 | $spl994)),
  inference(superposition,[],[f2043,f26894])).
fof(f2043,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl153),
  inference(superposition,[],[f2001,f72])).
fof(f2001,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl153),
  inference(cnf_transformation,[],[f2001_D])).
fof(f2001_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f22487,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl875),
  inference(cnf_transformation,[],[f22487_D])).
fof(f22487_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl875),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl875])])).
fof(f28887,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl133 | $spl994)),
  inference(forward_demodulation,[],[f28852,f26894])).
fof(f28852,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl133 | $spl994)),
  inference(superposition,[],[f1913,f26894])).
fof(f1913,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl133),
  inference(superposition,[],[f1796,f72])).
fof(f1796,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl133),
  inference(cnf_transformation,[],[f1796_D])).
fof(f1796_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f28886,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl87 | $spl994)),
  inference(forward_demodulation,[],[f28850,f26894])).
fof(f28850,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl87 | $spl994)),
  inference(superposition,[],[f1320,f26894])).
fof(f28885,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl994),
  inference(forward_demodulation,[],[f28884,f26894])).
fof(f28884,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | $spl994),
  inference(forward_demodulation,[],[f28849,f69])).
fof(f28849,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | $spl994),
  inference(superposition,[],[f817,f26894])).
fof(f28833,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl84),
  inference(forward_demodulation,[],[f28780,f73])).
fof(f28780,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl84),
  inference(superposition,[],[f486,f72])).
fof(f28774,plain,(
  $false | ($spl871 | $spl1000 | $spl1010)),
  inference(subsumption_resolution,[],[f27364,f28580])).
fof(f28580,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl871 | $spl1000)),
  inference(forward_demodulation,[],[f22480,f27087])).
fof(f22480,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl871),
  inference(cnf_transformation,[],[f22480_D])).
fof(f22480_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl871),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl871])])).
fof(f28690,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl1054),
  inference(cnf_transformation,[],[f28690_D])).
fof(f28690_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl1054),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1054])])).
fof(f28692,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl1056),
  inference(cnf_transformation,[],[f28692_D])).
fof(f28692_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl1056),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1056])])).
fof(f28688,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl60 | $spl252)),
  inference(forward_demodulation,[],[f28640,f73])).
fof(f28640,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl60 | $spl252)),
  inference(superposition,[],[f21077,f72])).
fof(f21077,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl60 | $spl252)),
  inference(forward_demodulation,[],[f280,f3192])).
fof(f22327,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl865),
  inference(cnf_transformation,[],[f22327_D])).
fof(f22327_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl865),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl865])])).
fof(f28033,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | ($spl893 | $spl1000)),
  inference(superposition,[],[f27314,f72])).
fof(f27314,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl893 | $spl1000)),
  inference(superposition,[],[f27182,f72])).
fof(f27182,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl893 | $spl1000)),
  inference(forward_demodulation,[],[f27180,f73])).
fof(f27180,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl893 | $spl1000)),
  inference(superposition,[],[f27119,f74])).
fof(f27119,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl893 | $spl1000)),
  inference(backward_demodulation,[],[f27087,f22513])).
fof(f28575,plain,(
  $false | ($spl9 | $spl48 | $spl268 | $spl727 | $spl994 | $spl1000)),
  inference(subsumption_resolution,[],[f28567,f20075])).
fof(f20075,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | $spl727),
  inference(cnf_transformation,[],[f20075_D])).
fof(f20075_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) <=> ~$spl727),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl727])])).
fof(f28567,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(trivial_inequality_removal,[],[f28561])).
fof(f28561,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(superposition,[],[f21224,f28493])).
fof(f28493,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl9 | $spl268 | $spl994 | $spl1000)),
  inference(superposition,[],[f27777,f12496])).
fof(f27777,plain,(
  ( ! [X2,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f69,f27770])).
fof(f27770,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27769,f27087])).
fof(f27769,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl994 | $spl1000)),
  inference(forward_demodulation,[],[f26905,f27360])).
fof(f27360,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27359,f73])).
fof(f27359,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27322,f74])).
fof(f27322,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f74,f27129])).
fof(f27129,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl994 | $spl1000)),
  inference(backward_demodulation,[],[f27087,f26894])).
fof(f26905,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl994),
  inference(superposition,[],[f74,f26894])).
fof(f21224,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl9 | $spl48)),
  inference(superposition,[],[f21219,f72])).
fof(f28574,plain,(
  $false | ($spl9 | $spl48 | $spl191 | $spl268 | $spl994 | $spl1000)),
  inference(subsumption_resolution,[],[f28568,f2603])).
fof(f28568,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(trivial_inequality_removal,[],[f28560])).
fof(f28560,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(superposition,[],[f21222,f28493])).
fof(f28569,plain,(
  $false | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(trivial_inequality_removal,[],[f28559])).
fof(f28559,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl48 | $spl268 | $spl994 | $spl1000)),
  inference(superposition,[],[f21219,f28493])).
fof(f28517,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl1050),
  inference(cnf_transformation,[],[f28517_D])).
fof(f28517_D,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) <=> ~$spl1050),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1050])])).
fof(f28510,plain,(
  ( ! [X2,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f817,f27777])).
fof(f28509,plain,(
  ( ! [X4,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X5))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f27777,f817])).
fof(f28495,plain,(
  ( ! [X6,X4,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X6))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f27777,f72])).
fof(f28463,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | $spl1049),
  inference(cnf_transformation,[],[f28463_D])).
fof(f28463_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) <=> ~$spl1049),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1049])])).
fof(f28461,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | ($spl762 | $spl768 | $spl961)),
  inference(forward_demodulation,[],[f28442,f26237])).
fof(f28442,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl961)),
  inference(superposition,[],[f25839,f25532])).
fof(f25839,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),X0)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),X0))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl961),
  inference(superposition,[],[f25807,f72])).
fof(f25807,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl961),
  inference(cnf_transformation,[],[f25807_D])).
fof(f25807_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl961),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl961])])).
fof(f28042,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | $spl1047),
  inference(cnf_transformation,[],[f28042_D])).
fof(f28042_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) <=> ~$spl1047),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1047])])).
fof(f27364,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl1010),
  inference(cnf_transformation,[],[f27364_D])).
fof(f27364_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl1010),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1010])])).
fof(f28040,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | ($spl893 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27991,f27129])).
fof(f27991,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl893 | $spl994 | $spl1000)),
  inference(superposition,[],[f27314,f27129])).
fof(f27525,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl1044),
  inference(cnf_transformation,[],[f27525_D])).
fof(f27525_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl1044),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1044])])).
fof(f27523,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl6 | $spl48 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f27467,f26237])).
fof(f27467,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl6 | $spl48 | $spl762 | $spl768)),
  inference(superposition,[],[f22127,f25532])).
fof(f22127,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl6 | $spl48)),
  inference(superposition,[],[f21083,f72])).
fof(f27426,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1043),
  inference(cnf_transformation,[],[f27426_D])).
fof(f27426_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1043),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1043])])).
fof(f27424,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27423,f27129])).
fof(f27423,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27422,f73])).
fof(f27422,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27351,f74])).
fof(f27351,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(superposition,[],[f24666,f27129])).
fof(f27421,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1041),
  inference(cnf_transformation,[],[f27421_D])).
fof(f27421_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1041),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1041])])).
fof(f27419,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl67 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27350,f27129])).
fof(f27350,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl67 | $spl994 | $spl1000)),
  inference(superposition,[],[f23871,f27129])).
fof(f21217,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | $spl834),
  inference(cnf_transformation,[],[f21217_D])).
fof(f21217_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) <=> ~$spl834),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl834])])).
fof(f27415,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | ($spl9 | $spl92 | $spl268 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27414,f27129])).
fof(f27414,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl92 | $spl268 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27348,f12496])).
fof(f27348,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl92 | $spl994 | $spl1000)),
  inference(superposition,[],[f21797,f27129])).
fof(f27413,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1039),
  inference(cnf_transformation,[],[f27413_D])).
fof(f27413_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1039),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1039])])).
fof(f27411,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27410,f27129])).
fof(f27410,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27409,f73])).
fof(f27409,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27346,f74])).
fof(f27346,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl994 | $spl1000)),
  inference(superposition,[],[f21387,f27129])).
fof(f27405,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1037),
  inference(cnf_transformation,[],[f27405_D])).
fof(f27405_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1037),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1037])])).
fof(f27403,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl73 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27343,f27129])).
fof(f27343,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl73 | $spl994 | $spl1000)),
  inference(superposition,[],[f17648,f27129])).
fof(f27402,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1035),
  inference(cnf_transformation,[],[f27402_D])).
fof(f27402_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1035),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1035])])).
fof(f27400,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl637 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27342,f27129])).
fof(f27342,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl637 | $spl994 | $spl1000)),
  inference(superposition,[],[f14681,f27129])).
fof(f27399,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1033),
  inference(cnf_transformation,[],[f27399_D])).
fof(f27399_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1033),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1033])])).
fof(f27397,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl659 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27341,f27129])).
fof(f27341,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl659 | $spl994 | $spl1000)),
  inference(superposition,[],[f14604,f27129])).
fof(f27396,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1031),
  inference(cnf_transformation,[],[f27396_D])).
fof(f27396_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1031),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1031])])).
fof(f27394,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl675 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27340,f27129])).
fof(f27340,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl675 | $spl994 | $spl1000)),
  inference(superposition,[],[f14041,f27129])).
fof(f27393,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1029),
  inference(cnf_transformation,[],[f27393_D])).
fof(f27393_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1029),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1029])])).
fof(f27391,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl671 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27339,f27129])).
fof(f27339,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl671 | $spl994 | $spl1000)),
  inference(superposition,[],[f13888,f27129])).
fof(f27390,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1027),
  inference(cnf_transformation,[],[f27390_D])).
fof(f27390_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1027),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1027])])).
fof(f27388,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl307 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27336,f27129])).
fof(f27336,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl307 | $spl994 | $spl1000)),
  inference(superposition,[],[f8262,f27129])).
fof(f27387,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1025),
  inference(cnf_transformation,[],[f27387_D])).
fof(f27387_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1025),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1025])])).
fof(f27385,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl105 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27335,f27129])).
fof(f27335,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl105 | $spl994 | $spl1000)),
  inference(superposition,[],[f7964,f27129])).
fof(f27384,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) | $spl1023),
  inference(cnf_transformation,[],[f27384_D])).
fof(f27384_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) <=> ~$spl1023),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1023])])).
fof(f27382,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) | ($spl107 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27334,f27129])).
fof(f27334,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl107 | $spl994 | $spl1000)),
  inference(superposition,[],[f7814,f27129])).
fof(f27381,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1021),
  inference(cnf_transformation,[],[f27381_D])).
fof(f27381_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1021),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1021])])).
fof(f27379,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl311 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27333,f27129])).
fof(f27333,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl311 | $spl994 | $spl1000)),
  inference(superposition,[],[f6432,f27129])).
fof(f27378,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1019),
  inference(cnf_transformation,[],[f27378_D])).
fof(f27378_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1019),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1019])])).
fof(f27376,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl315 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27332,f27129])).
fof(f27332,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl315 | $spl994 | $spl1000)),
  inference(superposition,[],[f5514,f27129])).
fof(f27373,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1017),
  inference(cnf_transformation,[],[f27373_D])).
fof(f27373_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1017),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1017])])).
fof(f27371,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl153 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27329,f27129])).
fof(f27329,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl153 | $spl994 | $spl1000)),
  inference(superposition,[],[f2043,f27129])).
fof(f27370,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1015),
  inference(cnf_transformation,[],[f27370_D])).
fof(f27370_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1015),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1015])])).
fof(f27368,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl133 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27328,f27129])).
fof(f27328,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl133 | $spl994 | $spl1000)),
  inference(superposition,[],[f1913,f27129])).
fof(f27367,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl1013),
  inference(cnf_transformation,[],[f27367_D])).
fof(f27367_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl1013),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1013])])).
fof(f27365,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl87 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27326,f27129])).
fof(f27326,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl87 | $spl994 | $spl1000)),
  inference(superposition,[],[f1320,f27129])).
fof(f27362,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl92 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27361,f27129])).
fof(f27361,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl92 | $spl994 | $spl1000)),
  inference(forward_demodulation,[],[f27325,f21803])).
fof(f27325,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl994 | $spl1000)),
  inference(superposition,[],[f817,f27129])).
fof(f27106,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl924)),
  inference(forward_demodulation,[],[f27078,f23519])).
fof(f27078,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl924)),
  inference(superposition,[],[f24666,f23519])).
fof(f27103,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl67 | $spl924)),
  inference(forward_demodulation,[],[f27077,f23519])).
fof(f27077,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl67 | $spl924)),
  inference(superposition,[],[f23871,f23519])).
fof(f27100,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl729 | $spl924)),
  inference(forward_demodulation,[],[f27074,f23519])).
fof(f27074,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl9 | $spl729 | $spl924)),
  inference(superposition,[],[f21387,f23519])).
fof(f27097,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl105 | $spl924)),
  inference(forward_demodulation,[],[f27063,f23519])).
fof(f27063,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl105 | $spl924)),
  inference(superposition,[],[f7964,f23519])).
fof(f27096,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl268 | $spl924)),
  inference(forward_demodulation,[],[f27059,f23519])).
fof(f27059,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | ($spl268 | $spl924)),
  inference(superposition,[],[f3865,f23519])).
fof(f27095,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl87 | $spl924)),
  inference(forward_demodulation,[],[f27054,f23519])).
fof(f27054,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | ($spl87 | $spl924)),
  inference(superposition,[],[f1320,f23519])).
fof(f27092,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl924),
  inference(forward_demodulation,[],[f27091,f23519])).
fof(f27091,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | $spl924),
  inference(forward_demodulation,[],[f27053,f69])).
fof(f27053,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))),'type.exhLang.pat'))))) ) | $spl924),
  inference(superposition,[],[f817,f23519])).
fof(f27087,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl1000),
  inference(cnf_transformation,[],[f27087_D])).
fof(f27087_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl1000),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1000])])).
fof(f27047,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl924),
  inference(superposition,[],[f23519,f72])).
fof(f26855,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl870)),
  inference(superposition,[],[f3865,f22481])).
fof(f26894,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl994),
  inference(cnf_transformation,[],[f26894_D])).
fof(f26894_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl994),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl994])])).
fof(f26854,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl870),
  inference(superposition,[],[f72,f22481])).
fof(f26897,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl996),
  inference(cnf_transformation,[],[f26897_D])).
fof(f26897_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl996),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl996])])).
fof(f26853,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl870)),
  inference(superposition,[],[f21690,f22481])).
fof(f14003,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | $spl684),
  inference(cnf_transformation,[],[f14003_D])).
fof(f14003_D,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f26898,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl870)),
  inference(forward_demodulation,[],[f26852,f74])).
fof(f26852,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl870)),
  inference(superposition,[],[f3865,f22481])).
fof(f14001,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | $spl682),
  inference(cnf_transformation,[],[f14001_D])).
fof(f14001_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) <=> ~$spl682),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl682])])).
fof(f26851,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl870)),
  inference(superposition,[],[f3708,f22481])).
fof(f13996,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl676),
  inference(cnf_transformation,[],[f13996_D])).
fof(f13996_D,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f26850,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl870),
  inference(superposition,[],[f817,f22481])).
fof(f26847,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl870),
  inference(superposition,[],[f22481,f72])).
fof(f26846,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl870)),
  inference(superposition,[],[f22481,f21690])).
fof(f26895,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl870)),
  inference(forward_demodulation,[],[f26845,f74])).
fof(f26845,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl870)),
  inference(superposition,[],[f22481,f3865])).
fof(f26844,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl870)),
  inference(superposition,[],[f22481,f3708])).
fof(f26843,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl870),
  inference(superposition,[],[f22481,f817])).
fof(f26892,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl992),
  inference(cnf_transformation,[],[f26892_D])).
fof(f26892_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl992),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl992])])).
fof(f26890,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl870),
  inference(forward_demodulation,[],[f26842,f73])).
fof(f26842,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl870),
  inference(superposition,[],[f22481,f72])).
fof(f26716,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v'))))) ) | $spl990),
  inference(cnf_transformation,[],[f26716_D])).
fof(f26716_D,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v'))))) ) <=> ~$spl990),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl990])])).
fof(f26715,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f26714,f25536])).
fof(f25536,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f74,f25299])).
fof(f26714,plain,(
  ( ! [X14,X15,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f26701,f70])).
fof(f26701,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25536])).
fof(f819,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) )),
  inference(superposition,[],[f71,f72])).
fof(f26676,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f25472])).
fof(f26675,plain,(
  ( ! [X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f25472,f819])).
fof(f26665,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f25472,f72])).
fof(f26564,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v'))))) ) | $spl986),
  inference(cnf_transformation,[],[f26564_D])).
fof(f26564_D,plain,(
  ( ! [X14,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v'))))) ) <=> ~$spl986),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl986])])).
fof(f26563,plain,(
  ( ! [X14,X15,X13] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15)))) ) | $spl768),
  inference(forward_demodulation,[],[f26562,f25438])).
fof(f25438,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl768),
  inference(forward_demodulation,[],[f25437,f73])).
fof(f25437,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl768),
  inference(forward_demodulation,[],[f25421,f74])).
fof(f25421,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))))) ) | $spl768),
  inference(superposition,[],[f74,f25149])).
fof(f26562,plain,(
  ( ! [X14,X15,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v'))))) ) | $spl768),
  inference(forward_demodulation,[],[f26542,f70])).
fof(f26542,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X13),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f25438])).
fof(f25552,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | $spl956),
  inference(cnf_transformation,[],[f25552_D])).
fof(f25552_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) <=> ~$spl956),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl956])])).
fof(f26526,plain,(
  ( ! [X52,X53] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X53)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f26525,f25299])).
fof(f26525,plain,(
  ( ! [X52,X53] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X53))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f26454,f70])).
fof(f26454,plain,(
  ( ! [X54,X52,X53] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X53))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X54),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X53))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X52),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25299])).
fof(f25946,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl972),
  inference(cnf_transformation,[],[f25946_D])).
fof(f25946_D,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) <=> ~$spl972),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl972])])).
fof(f26522,plain,(
  ( ! [X47,X46] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X46))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X47),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X46)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f26451,f26237])).
fof(f26451,plain,(
  ( ! [X47,X46] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X46))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X47),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X46))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25532])).
fof(f25441,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) | $spl954),
  inference(cnf_transformation,[],[f25441_D])).
fof(f25441_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) <=> ~$spl954),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl954])])).
fof(f26519,plain,(
  ( ! [X37,X36] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X37)))) ) | $spl768),
  inference(forward_demodulation,[],[f26518,f25149])).
fof(f26518,plain,(
  ( ! [X37,X36] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X37))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) | $spl768),
  inference(forward_demodulation,[],[f26448,f70])).
fof(f26448,plain,(
  ( ! [X37,X38,X36] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X37))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X38),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X37))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X36),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f25149])).
fof(f26318,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | $spl985),
  inference(cnf_transformation,[],[f26318_D])).
fof(f26318_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) <=> ~$spl985),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl985])])).
fof(f26316,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | ($spl762 | $spl768 | $spl933)),
  inference(forward_demodulation,[],[f26300,f26237])).
fof(f26300,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl933)),
  inference(superposition,[],[f25411,f25532])).
fof(f25411,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhSem.v'),X0) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),X0)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),X0))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl762 | $spl933)),
  inference(superposition,[],[f25410,f72])).
fof(f25410,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl762 | $spl933)),
  inference(forward_demodulation,[],[f24828,f20119])).
fof(f24828,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl933),
  inference(cnf_transformation,[],[f24828_D])).
fof(f24828_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl933),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl933])])).
fof(f26228,plain,(
  ( ! [X12,X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13)))) ) | ($spl9 | $spl550)),
  inference(forward_demodulation,[],[f26227,f12468])).
fof(f26227,plain,(
  ( ! [X12,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl9 | $spl550)),
  inference(forward_demodulation,[],[f26048,f10159])).
fof(f26048,plain,(
  ( ! [X14,X12,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl9),
  inference(superposition,[],[f817,f12468])).
fof(f26226,plain,(
  ( ! [X10,X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f26047,f69])).
fof(f26047,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),X9)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f817,f3865])).
fof(f26224,plain,(
  ( ! [X4,X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4)))) ) | ($spl191 | $spl268 | $spl550)),
  inference(forward_demodulation,[],[f26223,f9878])).
fof(f26223,plain,(
  ( ! [X4,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) | ($spl191 | $spl268 | $spl550)),
  inference(forward_demodulation,[],[f26045,f10159])).
fof(f26045,plain,(
  ( ! [X4,X5,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X5),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))),'type.exhLang.pat'))))) ) | ($spl191 | $spl268)),
  inference(superposition,[],[f817,f9878])).
fof(f25973,plain,(
  $false | ($spl11 | $spl760 | $spl934)),
  inference(trivial_inequality_removal,[],[f25969])).
fof(f25969,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl11 | $spl760 | $spl934)),
  inference(superposition,[],[f99,f25956])).
fof(f25956,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl760 | $spl934)),
  inference(forward_demodulation,[],[f24876,f25157])).
fof(f25157,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl760),
  inference(superposition,[],[f70,f20117])).
fof(f25941,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | $spl968),
  inference(cnf_transformation,[],[f25941_D])).
fof(f25941_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) <=> ~$spl968),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl968])])).
fof(f25955,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25935,f25532])).
fof(f25935,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(superposition,[],[f72,f25532])).
fof(f25954,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl978),
  inference(cnf_transformation,[],[f25954_D])).
fof(f25954_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl978),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl978])])).
fof(f25952,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25933,f25532])).
fof(f25933,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl606 | $spl762 | $spl768)),
  inference(superposition,[],[f21692,f25532])).
fof(f21692,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl606),
  inference(superposition,[],[f11552,f72])).
fof(f25951,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl977),
  inference(cnf_transformation,[],[f25951_D])).
fof(f25951_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl977),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl977])])).
fof(f25949,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25932,f25532])).
fof(f25932,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(superposition,[],[f21224,f25532])).
fof(f25948,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | $spl974),
  inference(cnf_transformation,[],[f25948_D])).
fof(f25948_D,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) <=> ~$spl974),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl974])])).
fof(f25947,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl4 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25931,f25532])).
fof(f25931,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl4 | $spl762 | $spl768)),
  inference(superposition,[],[f13140,f25532])).
fof(f13140,plain,(
  ( ! [X2,X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X2))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl4),
  inference(superposition,[],[f12254,f72])).
fof(f12254,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl4),
  inference(superposition,[],[f69,f92])).
fof(f25945,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25929,f25532])).
fof(f25929,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25532])).
fof(f25939,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25925,f25532])).
fof(f25925,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(superposition,[],[f25532,f72])).
fof(f25922,plain,(
  $false | ($spl28 | $spl48 | $spl550 | $spl727)),
  inference(subsumption_resolution,[],[f25907,f20075])).
fof(f25907,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl28 | $spl48 | $spl550)),
  inference(trivial_inequality_removal,[],[f25905])).
fof(f25905,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl28 | $spl48 | $spl550)),
  inference(superposition,[],[f21082,f10159])).
fof(f25921,plain,(
  $false | ($spl28 | $spl48 | $spl92 | $spl727)),
  inference(subsumption_resolution,[],[f25908,f20075])).
fof(f25908,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl28 | $spl48 | $spl92)),
  inference(trivial_inequality_removal,[],[f25904])).
fof(f25904,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl28 | $spl48 | $spl92)),
  inference(superposition,[],[f21082,f21803])).
fof(f25920,plain,(
  $false | ($spl6 | $spl28 | $spl48 | $spl727)),
  inference(subsumption_resolution,[],[f25909,f20075])).
fof(f25909,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl6 | $spl28 | $spl48)),
  inference(trivial_inequality_removal,[],[f25903])).
fof(f25903,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl6 | $spl28 | $spl48)),
  inference(superposition,[],[f21082,f21083])).
fof(f25872,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')))) | $spl964),
  inference(cnf_transformation,[],[f25872_D])).
fof(f25872_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl964),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl964])])).
fof(f25874,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl966),
  inference(cnf_transformation,[],[f25874_D])).
fof(f25874_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl966),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl966])])).
fof(f25870,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl771)),
  inference(forward_demodulation,[],[f25843,f73])).
fof(f25843,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl771)),
  inference(superposition,[],[f25313,f72])).
fof(f25313,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl771)),
  inference(forward_demodulation,[],[f25312,f25272])).
fof(f25312,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl762 | $spl768 | $spl771)),
  inference(subsumption_resolution,[],[f25298,f20308])).
fof(f25298,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl762 | $spl768)),
  inference(superposition,[],[f25272,f72])).
fof(f25833,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | $spl962),
  inference(cnf_transformation,[],[f25833_D])).
fof(f25833_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) <=> ~$spl962),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl962])])).
fof(f25831,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl760 | $spl960)),
  inference(forward_demodulation,[],[f25830,f25808])).
fof(f25830,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | ($spl760 | $spl960)),
  inference(forward_demodulation,[],[f25817,f25157])).
fof(f25817,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | $spl960),
  inference(superposition,[],[f819,f25808])).
fof(f25806,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl958),
  inference(cnf_transformation,[],[f25806_D])).
fof(f25806_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl958),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl958])])).
fof(f25808,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl960),
  inference(cnf_transformation,[],[f25808_D])).
fof(f25808_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl960),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl960])])).
fof(f25804,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl936),
  inference(forward_demodulation,[],[f25777,f73])).
fof(f25777,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl936),
  inference(superposition,[],[f24878,f72])).
fof(f25654,plain,(
  $false | ($spl760 | $spl939)),
  inference(subsumption_resolution,[],[f24882,f25157])).
fof(f25551,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25550,f25299])).
fof(f25550,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25539,f70])).
fof(f25539,plain,(
  ( ! [X12,X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25299])).
fof(f25440,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | $spl768),
  inference(forward_demodulation,[],[f25439,f25149])).
fof(f25439,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) | $spl768),
  inference(forward_demodulation,[],[f25424,f70])).
fof(f25424,plain,(
  ( ! [X12,X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')))),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f25149])).
fof(f25218,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl940),
  inference(cnf_transformation,[],[f25218_D])).
fof(f25218_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl940),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl940])])).
fof(f25316,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | $spl952),
  inference(cnf_transformation,[],[f25316_D])).
fof(f25316_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) <=> ~$spl952),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl952])])).
fof(f25319,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25306,f25272])).
fof(f25306,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl606 | $spl762 | $spl768)),
  inference(superposition,[],[f21692,f25272])).
fof(f24882,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl939),
  inference(cnf_transformation,[],[f24882_D])).
fof(f24882_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl939),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl939])])).
fof(f25318,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25305,f25272])).
fof(f25305,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl762 | $spl768)),
  inference(superposition,[],[f21224,f25272])).
fof(f20313,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) | $spl774),
  inference(cnf_transformation,[],[f20313_D])).
fof(f20313_D,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) <=> ~$spl774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl774])])).
fof(f25317,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl4 | $spl762 | $spl768)),
  inference(forward_demodulation,[],[f25304,f25272])).
fof(f25304,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | ($spl4 | $spl762 | $spl768)),
  inference(superposition,[],[f13140,f25272])).
fof(f24876,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl934),
  inference(cnf_transformation,[],[f24876_D])).
fof(f24876_D,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) <=> ~$spl934),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl934])])).
fof(f25314,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl762 | $spl768)),
  inference(forward_demodulation,[],[f25302,f25272])).
fof(f25302,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | ($spl762 | $spl768)),
  inference(superposition,[],[f819,f25272])).
fof(f25252,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl950),
  inference(cnf_transformation,[],[f25252_D])).
fof(f25252_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl950),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl950])])).
fof(f25244,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | $spl944),
  inference(cnf_transformation,[],[f25244_D])).
fof(f25244_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) <=> ~$spl944),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl944])])).
fof(f25250,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl932)),
  inference(forward_demodulation,[],[f25230,f24829])).
fof(f25230,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | ($spl606 | $spl932)),
  inference(superposition,[],[f21692,f24829])).
fof(f25249,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl949),
  inference(cnf_transformation,[],[f25249_D])).
fof(f25249_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl949),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl949])])).
fof(f25247,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl932)),
  inference(forward_demodulation,[],[f25229,f24829])).
fof(f25229,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl932)),
  inference(superposition,[],[f21224,f24829])).
fof(f25246,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | $spl946),
  inference(cnf_transformation,[],[f25246_D])).
fof(f25246_D,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) <=> ~$spl946),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl946])])).
fof(f25245,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl4 | $spl932)),
  inference(forward_demodulation,[],[f25228,f24829])).
fof(f25228,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | ($spl4 | $spl932)),
  inference(superposition,[],[f13140,f24829])).
fof(f25242,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl942),
  inference(cnf_transformation,[],[f25242_D])).
fof(f25242_D,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) <=> ~$spl942),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl942])])).
fof(f25241,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl932),
  inference(forward_demodulation,[],[f25226,f24829])).
fof(f25226,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | $spl932),
  inference(superposition,[],[f819,f24829])).
fof(f24878,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | $spl936),
  inference(cnf_transformation,[],[f24878_D])).
fof(f24878_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) <=> ~$spl936),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl936])])).
fof(f25216,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl606 | $spl768)),
  inference(forward_demodulation,[],[f25179,f20306])).
fof(f25179,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | ($spl606 | $spl768)),
  inference(superposition,[],[f21692,f20306])).
fof(f25152,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl768)),
  inference(forward_demodulation,[],[f25141,f20306])).
fof(f25141,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl768)),
  inference(superposition,[],[f21224,f20306])).
fof(f25151,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl4 | $spl768)),
  inference(forward_demodulation,[],[f25140,f20306])).
fof(f25140,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | ($spl4 | $spl768)),
  inference(superposition,[],[f13140,f20306])).
fof(f25150,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl768),
  inference(forward_demodulation,[],[f25138,f20306])).
fof(f25138,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f20306])).
fof(f25122,plain,(
  $false | ($spl9 | $spl32 | $spl48 | $spl606 | $spl727)),
  inference(subsumption_resolution,[],[f20075,f24926])).
fof(f24926,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhSem.v'),X14) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X14,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X14,'type.exhSem.v'))))) ) | ($spl9 | $spl32 | $spl48 | $spl606)),
  inference(subsumption_resolution,[],[f24923,f11552])).
fof(f24923,plain,(
  ( ! [X14] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X14) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X14,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X14,'type.exhSem.v'))))) ) | ($spl9 | $spl32 | $spl48)),
  inference(duplicate_literal_removal,[],[f24912])).
fof(f24912,plain,(
  ( ! [X14] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X14) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X14,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X14,'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),X14) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X14,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X14,'type.exhSem.v'))))) ) | ($spl9 | $spl32 | $spl48)),
  inference(superposition,[],[f19040,f72])).
fof(f19040,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl9 | $spl32 | $spl48)),
  inference(forward_demodulation,[],[f11525,f12430])).
fof(f11525,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | ($spl32 | $spl48)),
  inference(forward_demodulation,[],[f165,f245])).
fof(f24967,plain,(
  $false | ($spl9 | $spl32 | $spl48 | $spl606 | $spl727 | $spl770)),
  inference(subsumption_resolution,[],[f22009,f24927])).
fof(f24927,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl9 | $spl32 | $spl48 | $spl606 | $spl770)),
  inference(forward_demodulation,[],[f24922,f20309])).
fof(f24922,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl32 | $spl48 | $spl606)),
  inference(trivial_inequality_removal,[],[f24915])).
fof(f24915,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl32 | $spl48 | $spl606)),
  inference(superposition,[],[f19040,f11552])).
fof(f22009,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl727 | $spl770)),
  inference(forward_demodulation,[],[f20075,f20309])).
fof(f20117,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl760),
  inference(cnf_transformation,[],[f20117_D])).
fof(f20117_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl760),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl760])])).
fof(f20118,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl763),
  inference(cnf_transformation,[],[f20118_D])).
fof(f20118_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl763),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl763])])).
fof(f24855,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl727),
  inference(forward_demodulation,[],[f24847,f73])).
fof(f24847,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl727),
  inference(superposition,[],[f20075,f72])).
fof(f24880,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl768)),
  inference(forward_demodulation,[],[f24866,f20306])).
fof(f24866,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | ($spl9 | $spl48 | $spl768)),
  inference(superposition,[],[f21224,f20306])).
fof(f24879,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | ($spl4 | $spl768)),
  inference(forward_demodulation,[],[f24865,f20306])).
fof(f24865,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | ($spl4 | $spl768)),
  inference(superposition,[],[f13140,f20306])).
fof(f24875,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl768),
  inference(forward_demodulation,[],[f24863,f20306])).
fof(f24863,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'))))) ) | $spl768),
  inference(superposition,[],[f819,f20306])).
fof(f24827,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl930),
  inference(cnf_transformation,[],[f24827_D])).
fof(f24827_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl930),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl930])])).
fof(f24829,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl932),
  inference(cnf_transformation,[],[f24829_D])).
fof(f24829_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl932),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl932])])).
fof(f24825,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl763),
  inference(forward_demodulation,[],[f24808,f73])).
fof(f24808,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v'),'type.exhSem.v')))) | $spl763),
  inference(superposition,[],[f22058,f72])).
fof(f22058,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | $spl763),
  inference(trivial_inequality_removal,[],[f22057])).
fof(f22057,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') | s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0')),'type.exhSem.v')))) | $spl763),
  inference(superposition,[],[f20118,f72])).
fof(f13569,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl664),
  inference(cnf_transformation,[],[f13569_D])).
fof(f13569_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f24765,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl928),
  inference(cnf_transformation,[],[f24765_D])).
fof(f24765_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl928),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl928])])).
fof(f24763,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl844),
  inference(forward_demodulation,[],[f24728,f73])).
fof(f24728,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl844),
  inference(superposition,[],[f21927,f72])).
fof(f24538,plain,(
  $false | ($spl9 | $spl48 | $spl520 | $spl550 | $spl727 | $spl770)),
  inference(subsumption_resolution,[],[f24537,f22009])).
fof(f24537,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl9 | $spl48 | $spl520 | $spl550 | $spl770)),
  inference(forward_demodulation,[],[f24527,f20309])).
fof(f24527,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(trivial_inequality_removal,[],[f24521])).
fof(f24521,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(superposition,[],[f21224,f24461])).
fof(f24461,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl520 | $spl550)),
  inference(superposition,[],[f10159,f9212])).
fof(f24536,plain,(
  $false | ($spl9 | $spl48 | $spl191 | $spl520 | $spl550)),
  inference(subsumption_resolution,[],[f24528,f2603])).
fof(f24528,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(trivial_inequality_removal,[],[f24520])).
fof(f24520,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(superposition,[],[f21222,f24461])).
fof(f24529,plain,(
  $false | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(trivial_inequality_removal,[],[f24519])).
fof(f24519,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl48 | $spl520 | $spl550)),
  inference(superposition,[],[f21219,f24461])).
fof(f4983,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl298),
  inference(cnf_transformation,[],[f4983_D])).
fof(f4983_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f14091,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl693),
  inference(cnf_transformation,[],[f14091_D])).
fof(f14091_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl693),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl693])])).
fof(f24366,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl655),
  inference(forward_demodulation,[],[f24359,f73])).
fof(f24359,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl655),
  inference(superposition,[],[f12378,f72])).
fof(f12378,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl655),
  inference(cnf_transformation,[],[f12378_D])).
fof(f12378_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl655),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl655])])).
fof(f13815,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl668),
  inference(cnf_transformation,[],[f13815_D])).
fof(f13815_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f22328,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl864),
  inference(cnf_transformation,[],[f22328_D])).
fof(f22328_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl864),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl864])])).
fof(f24197,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl40 | $spl268)),
  inference(forward_demodulation,[],[f24166,f12430])).
fof(f24166,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl40 | $spl268)),
  inference(superposition,[],[f3865,f185])).
fof(f13570,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl667),
  inference(cnf_transformation,[],[f13570_D])).
fof(f13570_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl667),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl667])])).
fof(f24152,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl641),
  inference(forward_demodulation,[],[f24146,f73])).
fof(f24146,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl641),
  inference(superposition,[],[f12319,f72])).
fof(f12319,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl641),
  inference(cnf_transformation,[],[f12319_D])).
fof(f12319_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl641),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl641])])).
fof(f21090,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | $spl826),
  inference(cnf_transformation,[],[f21090_D])).
fof(f21090_D,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) <=> ~$spl826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl826])])).
fof(f23973,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f23910,f12496])).
fof(f23910,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f23889,f73])).
fof(f23889,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(superposition,[],[f3865,f12496])).
fof(f23972,plain,(
  $false | ($spl9 | $spl48 | $spl191 | $spl268 | $spl727 | $spl770 | $spl866)),
  inference(subsumption_resolution,[],[f23971,f22009])).
fof(f23971,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl9 | $spl48 | $spl191 | $spl268 | $spl770 | $spl866)),
  inference(forward_demodulation,[],[f23961,f20309])).
fof(f23961,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23955])).
fof(f23955,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21224,f23802])).
fof(f23802,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f69,f22670])).
fof(f22670,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl191 | $spl268 | $spl866)),
  inference(subsumption_resolution,[],[f22634,f2603])).
fof(f22634,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl268 | $spl866)),
  inference(superposition,[],[f22329,f3708])).
fof(f23970,plain,(
  $false | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(subsumption_resolution,[],[f23962,f2603])).
fof(f23962,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23954])).
fof(f23954,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21222,f23802])).
fof(f23963,plain,(
  $false | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23953])).
fof(f23953,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl48 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21219,f23802])).
fof(f23799,plain,(
  $false | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl727 | $spl770 | $spl866)),
  inference(subsumption_resolution,[],[f23798,f22009])).
fof(f23798,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl770 | $spl866)),
  inference(forward_demodulation,[],[f23788,f20309])).
fof(f23788,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23782])).
fof(f23782,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21224,f22703])).
fof(f22703,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f69,f22668])).
fof(f22668,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(forward_demodulation,[],[f22630,f12430])).
fof(f22630,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f22329,f22324])).
fof(f22324,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22323,f12430])).
fof(f22323,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl66 | $spl191 | $spl268)),
  inference(duplicate_literal_removal,[],[f22285])).
fof(f22285,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21932,f3708])).
fof(f21932,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21898,f74])).
fof(f21898,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f74,f21834])).
fof(f21834,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f9878,f338])).
fof(f23797,plain,(
  $false | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(subsumption_resolution,[],[f23789,f2603])).
fof(f23789,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23781])).
fof(f23781,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21222,f22703])).
fof(f23790,plain,(
  $false | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(trivial_inequality_removal,[],[f23780])).
fof(f23780,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268 | $spl866)),
  inference(superposition,[],[f21219,f22703])).
fof(f23664,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl926),
  inference(cnf_transformation,[],[f23664_D])).
fof(f23664_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) <=> ~$spl926),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl926])])).
fof(f23663,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11)))) ) | $spl66),
  inference(forward_demodulation,[],[f23662,f21307])).
fof(f21307,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl66),
  inference(forward_demodulation,[],[f21278,f73])).
fof(f21278,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl66),
  inference(superposition,[],[f74,f338])).
fof(f23662,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl66),
  inference(forward_demodulation,[],[f23633,f69])).
fof(f23633,plain,(
  ( ! [X12,X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X12),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl66),
  inference(superposition,[],[f817,f21307])).
fof(f23530,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23503,f22365])).
fof(f22365,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21307,f22324])).
fof(f23503,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268)),
  inference(superposition,[],[f21124,f22365])).
fof(f23529,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23502,f22365])).
fof(f23502,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268)),
  inference(superposition,[],[f17648,f22365])).
fof(f23528,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637)),
  inference(forward_demodulation,[],[f23501,f22365])).
fof(f23501,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637)),
  inference(superposition,[],[f14681,f22365])).
fof(f23527,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659)),
  inference(forward_demodulation,[],[f23500,f22365])).
fof(f23500,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659)),
  inference(superposition,[],[f14604,f22365])).
fof(f23526,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675)),
  inference(forward_demodulation,[],[f23499,f22365])).
fof(f23499,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675)),
  inference(superposition,[],[f14041,f22365])).
fof(f23525,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307)),
  inference(forward_demodulation,[],[f23496,f22365])).
fof(f23496,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307)),
  inference(superposition,[],[f8262,f22365])).
fof(f23524,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23495,f22365])).
fof(f23495,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268)),
  inference(superposition,[],[f7964,f22365])).
fof(f23523,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23494,f22365])).
fof(f23494,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268)),
  inference(superposition,[],[f7814,f22365])).
fof(f23522,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311)),
  inference(forward_demodulation,[],[f23493,f22365])).
fof(f23493,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311)),
  inference(superposition,[],[f6432,f22365])).
fof(f23521,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315)),
  inference(forward_demodulation,[],[f23492,f22365])).
fof(f23492,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315)),
  inference(superposition,[],[f5514,f22365])).
fof(f23520,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23491,f22365])).
fof(f23491,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f3865,f22365])).
fof(f23517,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23490,f22365])).
fof(f23490,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f3708,f22365])).
fof(f23516,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23489,f22365])).
fof(f23489,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268)),
  inference(superposition,[],[f2043,f22365])).
fof(f23515,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23488,f22365])).
fof(f23488,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268)),
  inference(superposition,[],[f1913,f22365])).
fof(f23514,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23486,f22365])).
fof(f23486,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268)),
  inference(superposition,[],[f1320,f22365])).
fof(f23513,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23512,f22365])).
fof(f23512,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23485,f69])).
fof(f23485,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f817,f22365])).
fof(f23466,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl923),
  inference(cnf_transformation,[],[f23466_D])).
fof(f23466_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl923),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl923])])).
fof(f21935,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | $spl848),
  inference(cnf_transformation,[],[f21935_D])).
fof(f21935_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) <=> ~$spl848),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl848])])).
fof(f23464,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23435,f21834])).
fof(f23435,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl9 | $spl48 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21222,f21834])).
fof(f2751,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl227),
  inference(cnf_transformation,[],[f2751_D])).
fof(f2751_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl227),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl227])])).
fof(f23463,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23433,f21834])).
fof(f23433,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl191 | $spl268)),
  inference(superposition,[],[f17648,f21834])).
fof(f21965,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl863),
  inference(cnf_transformation,[],[f21965_D])).
fof(f21965_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl863),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl863])])).
fof(f23462,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl637)),
  inference(forward_demodulation,[],[f23432,f21834])).
fof(f23432,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl637)),
  inference(superposition,[],[f14681,f21834])).
fof(f21962,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl861),
  inference(cnf_transformation,[],[f21962_D])).
fof(f21962_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl861),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl861])])).
fof(f23461,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl659)),
  inference(forward_demodulation,[],[f23431,f21834])).
fof(f23431,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl659)),
  inference(superposition,[],[f14604,f21834])).
fof(f21959,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl859),
  inference(cnf_transformation,[],[f21959_D])).
fof(f21959_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl859),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl859])])).
fof(f23460,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl675)),
  inference(forward_demodulation,[],[f23430,f21834])).
fof(f23430,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl675)),
  inference(superposition,[],[f14041,f21834])).
fof(f21948,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl853),
  inference(cnf_transformation,[],[f21948_D])).
fof(f21948_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl853),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl853])])).
fof(f23457,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl37 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23428,f21834])).
fof(f23428,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl37 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f12212,f21834])).
fof(f12343,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl653),
  inference(cnf_transformation,[],[f12343_D])).
fof(f12343_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl653),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl653])])).
fof(f23456,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl307)),
  inference(forward_demodulation,[],[f23427,f21834])).
fof(f23427,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl307)),
  inference(superposition,[],[f8262,f21834])).
fof(f21944,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl851),
  inference(cnf_transformation,[],[f21944_D])).
fof(f21944_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl851),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl851])])).
fof(f23455,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl105 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23426,f21834])).
fof(f23426,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl105 | $spl191 | $spl268)),
  inference(superposition,[],[f7964,f21834])).
fof(f12340,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | $spl651),
  inference(cnf_transformation,[],[f12340_D])).
fof(f12340_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) <=> ~$spl651),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl651])])).
fof(f23454,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl66 | $spl107 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23425,f21834])).
fof(f23425,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl107 | $spl191 | $spl268)),
  inference(superposition,[],[f7814,f21834])).
fof(f12337,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl649),
  inference(cnf_transformation,[],[f12337_D])).
fof(f12337_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl649),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl649])])).
fof(f23453,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl311)),
  inference(forward_demodulation,[],[f23424,f21834])).
fof(f23424,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl311)),
  inference(superposition,[],[f6432,f21834])).
fof(f12334,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl647),
  inference(cnf_transformation,[],[f12334_D])).
fof(f12334_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl647),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl647])])).
fof(f23452,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl315)),
  inference(forward_demodulation,[],[f23423,f21834])).
fof(f23423,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl315)),
  inference(superposition,[],[f5514,f21834])).
fof(f12329,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | $spl644),
  inference(cnf_transformation,[],[f12329_D])).
fof(f12329_D,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) <=> ~$spl644),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl644])])).
fof(f23451,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23422,f21834])).
fof(f23422,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f3865,f21834])).
fof(f2773,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl241),
  inference(cnf_transformation,[],[f2773_D])).
fof(f2773_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl241),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl241])])).
fof(f23450,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl153 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23420,f21834])).
fof(f23420,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl153 | $spl191 | $spl268)),
  inference(superposition,[],[f2043,f21834])).
fof(f2770,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl239),
  inference(cnf_transformation,[],[f2770_D])).
fof(f2770_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl239),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl239])])).
fof(f23449,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl133 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23419,f21834])).
fof(f23419,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl133 | $spl191 | $spl268)),
  inference(superposition,[],[f1913,f21834])).
fof(f2758,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl231),
  inference(cnf_transformation,[],[f2758_D])).
fof(f2758_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl231),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl231])])).
fof(f23448,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl87 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23417,f21834])).
fof(f23417,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl87 | $spl191 | $spl268)),
  inference(superposition,[],[f1320,f21834])).
fof(f12322,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl642),
  inference(cnf_transformation,[],[f12322_D])).
fof(f12322_D,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) <=> ~$spl642),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl642])])).
fof(f23447,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23416,f21834])).
fof(f23416,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f817,f21834])).
fof(f21927,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl844),
  inference(cnf_transformation,[],[f21927_D])).
fof(f21927_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl844),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl844])])).
fof(f23443,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | $spl920),
  inference(cnf_transformation,[],[f23443_D])).
fof(f23443_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) <=> ~$spl920),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl920])])).
fof(f23441,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f23410,f22324])).
fof(f23410,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21834,f72])).
fof(f178,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl34),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f23258,plain,(
  ( ! [X21] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X21))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))))) ) | ($spl4 | $spl597)),
  inference(forward_demodulation,[],[f23245,f12254])).
fof(f23245,plain,(
  ( ! [X21,X22] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X21))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X22),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X21)))) ) | $spl597),
  inference(trivial_inequality_removal,[],[f23216])).
fof(f23216,plain,(
  ( ! [X21,X22] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X21))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X22),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X21)))) ) | $spl597),
  inference(superposition,[],[f12247,f817])).
fof(f12247,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl597),
  inference(superposition,[],[f11515,f72])).
fof(f11515,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl597),
  inference(cnf_transformation,[],[f11515_D])).
fof(f11515_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl597),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl597])])).
fof(f11506,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl591),
  inference(cnf_transformation,[],[f11506_D])).
fof(f11506_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl591),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl591])])).
fof(f23212,plain,(
  ( ! [X10,X9] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) ) | $spl629),
  inference(superposition,[],[f11767,f817])).
fof(f23252,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl918),
  inference(cnf_transformation,[],[f23252_D])).
fof(f23252_D,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) <=> ~$spl918),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl918])])).
fof(f23251,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl866),
  inference(forward_demodulation,[],[f23250,f22329])).
fof(f23250,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl866),
  inference(forward_demodulation,[],[f23107,f69])).
fof(f23107,plain,(
  ( ! [X8,X7,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl866),
  inference(superposition,[],[f817,f22329])).
fof(f23249,plain,(
  ( ! [X4,X5,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X5))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X4) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X4,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X4,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f23106,f69])).
fof(f23106,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X5))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X5))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X4) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X4,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X4,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f817,f3865])).
fof(f23033,plain,(
  $false | ($spl4 | $spl9 | $spl66 | $spl73 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(subsumption_resolution,[],[f23032,f345])).
fof(f23032,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl4 | $spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22996,f12430])).
fof(f22996,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl4 | $spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f12468,f22900])).
fof(f22900,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl4 | $spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(backward_demodulation,[],[f22870,f92])).
fof(f22870,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22869,f22324])).
fof(f22869,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22836,f338])).
fof(f22836,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f22604,f22668])).
fof(f22604,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl868)),
  inference(forward_demodulation,[],[f22576,f73])).
fof(f22576,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl868)),
  inference(superposition,[],[f74,f22541])).
fof(f22541,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl868)),
  inference(backward_demodulation,[],[f22479,f22365])).
fof(f23031,plain,(
  $false | ($spl4 | $spl9 | $spl66 | $spl73 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(subsumption_resolution,[],[f23030,f345])).
fof(f23030,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl4 | $spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22995,f22541])).
fof(f22995,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl4 | $spl9 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f22604,f22900])).
fof(f11635,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl609),
  inference(cnf_transformation,[],[f11635_D])).
fof(f11635_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl609),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl609])])).
fof(f22966,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl910),
  inference(cnf_transformation,[],[f22966_D])).
fof(f22966_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl910),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl910])])).
fof(f22986,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22944,f22870])).
fof(f22944,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f17648,f22870])).
fof(f22964,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl909),
  inference(cnf_transformation,[],[f22964_D])).
fof(f22964_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl909),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl909])])).
fof(f22985,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22943,f22870])).
fof(f22943,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637 | $spl866 | $spl868)),
  inference(superposition,[],[f14681,f22870])).
fof(f22984,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22942,f22870])).
fof(f22942,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659 | $spl866 | $spl868)),
  inference(superposition,[],[f14604,f22870])).
fof(f22983,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl917),
  inference(cnf_transformation,[],[f22983_D])).
fof(f22983_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl917),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl917])])).
fof(f22981,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22941,f22870])).
fof(f22941,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675 | $spl866 | $spl868)),
  inference(superposition,[],[f14041,f22870])).
fof(f22980,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl915),
  inference(cnf_transformation,[],[f22980_D])).
fof(f22980_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl915),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl915])])).
fof(f22978,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl597 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22940,f22870])).
fof(f22940,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl597 | $spl866 | $spl868)),
  inference(superposition,[],[f12247,f22870])).
fof(f22977,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl37 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22939,f22870])).
fof(f22939,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl37 | $spl66 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f12212,f22870])).
fof(f11664,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl625),
  inference(cnf_transformation,[],[f11664_D])).
fof(f11664_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl625),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl625])])).
fof(f22976,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22938,f22870])).
fof(f22938,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307 | $spl866 | $spl868)),
  inference(superposition,[],[f8262,f22870])).
fof(f22975,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl913),
  inference(cnf_transformation,[],[f22975_D])).
fof(f22975_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl913),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl913])])).
fof(f22973,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22937,f22870])).
fof(f22937,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f7964,f22870])).
fof(f11661,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | $spl623),
  inference(cnf_transformation,[],[f11661_D])).
fof(f11661_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) <=> ~$spl623),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl623])])).
fof(f22972,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22936,f22870])).
fof(f22936,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f7814,f22870])).
fof(f11658,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl621),
  inference(cnf_transformation,[],[f11658_D])).
fof(f11658_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl621),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl621])])).
fof(f22971,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22935,f22870])).
fof(f22935,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311 | $spl866 | $spl868)),
  inference(superposition,[],[f6432,f22870])).
fof(f11654,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl619),
  inference(cnf_transformation,[],[f11654_D])).
fof(f11654_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl619),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl619])])).
fof(f22970,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22934,f22870])).
fof(f22934,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315 | $spl866 | $spl868)),
  inference(superposition,[],[f5514,f22870])).
fof(f11645,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl615),
  inference(cnf_transformation,[],[f11645_D])).
fof(f11645_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl615),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl615])])).
fof(f22968,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22931,f22870])).
fof(f22931,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f2043,f22870])).
fof(f11642,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl613),
  inference(cnf_transformation,[],[f11642_D])).
fof(f11642_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl613),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl613])])).
fof(f22967,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22930,f22870])).
fof(f22930,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f1913,f22870])).
fof(f22962,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(forward_demodulation,[],[f22928,f22870])).
fof(f22928,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268 | $spl866 | $spl868)),
  inference(superposition,[],[f1320,f22870])).
fof(f22735,plain,(
  $false | ($spl9 | $spl66 | $spl191 | $spl268 | $spl381 | $spl630 | $spl866)),
  inference(subsumption_resolution,[],[f22701,f7748])).
fof(f22701,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(superposition,[],[f11910,f22668])).
fof(f22734,plain,(
  $false | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(subsumption_resolution,[],[f22731,f483])).
fof(f22731,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(duplicate_literal_removal,[],[f22700])).
fof(f22700,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(superposition,[],[f21425,f22668])).
fof(f21425,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl9 | $spl630)),
  inference(forward_demodulation,[],[f21424,f12468])).
fof(f21424,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl9 | $spl630)),
  inference(forward_demodulation,[],[f21394,f11910])).
fof(f21394,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl9),
  inference(superposition,[],[f12468,f72])).
fof(f22733,plain,(
  $false | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(subsumption_resolution,[],[f22732,f483])).
fof(f22732,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(duplicate_literal_removal,[],[f22699])).
fof(f22699,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl630 | $spl866)),
  inference(superposition,[],[f22668,f21425])).
fof(f22479,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl868),
  inference(cnf_transformation,[],[f22479_D])).
fof(f22479_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl868),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl868])])).
fof(f22537,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22473,f22365])).
fof(f22473,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f72,f22365])).
fof(f22532,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22470,f22365])).
fof(f22470,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl83 | $spl191 | $spl268)),
  inference(superposition,[],[f21124,f22365])).
fof(f22529,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22469,f22365])).
fof(f22469,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl73 | $spl191 | $spl268)),
  inference(superposition,[],[f17648,f22365])).
fof(f22526,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637)),
  inference(forward_demodulation,[],[f22468,f22365])).
fof(f22468,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl637)),
  inference(superposition,[],[f14681,f22365])).
fof(f22523,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659)),
  inference(forward_demodulation,[],[f22467,f22365])).
fof(f22467,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl659)),
  inference(superposition,[],[f14604,f22365])).
fof(f22520,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675)),
  inference(forward_demodulation,[],[f22466,f22365])).
fof(f22466,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl675)),
  inference(superposition,[],[f14041,f22365])).
fof(f22517,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl671)),
  inference(forward_demodulation,[],[f22465,f22365])).
fof(f22465,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl671)),
  inference(superposition,[],[f13888,f22365])).
fof(f22516,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl895),
  inference(cnf_transformation,[],[f22516_D])).
fof(f22516_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl895),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl895])])).
fof(f22514,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl219 | $spl268)),
  inference(forward_demodulation,[],[f22464,f22365])).
fof(f22464,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl219 | $spl268)),
  inference(superposition,[],[f13093,f22365])).
fof(f13093,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl219),
  inference(superposition,[],[f2711,f72])).
fof(f2711,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl219),
  inference(cnf_transformation,[],[f2711_D])).
fof(f2711_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl219])])).
fof(f22513,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl893),
  inference(cnf_transformation,[],[f22513_D])).
fof(f22513_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl893),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl893])])).
fof(f22511,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl597)),
  inference(forward_demodulation,[],[f22463,f22365])).
fof(f22463,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl597)),
  inference(superposition,[],[f12247,f22365])).
fof(f22510,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl891),
  inference(cnf_transformation,[],[f22510_D])).
fof(f22510_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl891),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl891])])).
fof(f22508,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl37 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22462,f22365])).
fof(f22462,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl37 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f12212,f22365])).
fof(f22505,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307)),
  inference(forward_demodulation,[],[f22461,f22365])).
fof(f22461,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl307)),
  inference(superposition,[],[f8262,f22365])).
fof(f22502,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22460,f22365])).
fof(f22460,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl105 | $spl191 | $spl268)),
  inference(superposition,[],[f7964,f22365])).
fof(f22499,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22459,f22365])).
fof(f22459,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl107 | $spl191 | $spl268)),
  inference(superposition,[],[f7814,f22365])).
fof(f22496,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311)),
  inference(forward_demodulation,[],[f22458,f22365])).
fof(f22458,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl311)),
  inference(superposition,[],[f6432,f22365])).
fof(f22493,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315)),
  inference(forward_demodulation,[],[f22457,f22365])).
fof(f22457,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268 | $spl315)),
  inference(superposition,[],[f5514,f22365])).
fof(f22491,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22456,f22365])).
fof(f22456,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f3865,f22365])).
fof(f22488,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22454,f22365])).
fof(f22454,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl153 | $spl191 | $spl268)),
  inference(superposition,[],[f2043,f22365])).
fof(f22485,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22453,f22365])).
fof(f22453,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl133 | $spl191 | $spl268)),
  inference(superposition,[],[f1913,f22365])).
fof(f22482,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22451,f22365])).
fof(f22451,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl87 | $spl191 | $spl268)),
  inference(superposition,[],[f1320,f22365])).
fof(f22477,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22446,f22365])).
fof(f22446,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f22365,f72])).
fof(f22329,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl866),
  inference(cnf_transformation,[],[f22329_D])).
fof(f22329_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) <=> ~$spl866),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl866])])).
fof(f22326,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22325,f12468])).
fof(f22325,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl9 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f22286,f12430])).
fof(f22286,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21932,f3865])).
fof(f22015,plain,(
  $false | ($spl727 | $spl762 | $spl770)),
  inference(subsumption_resolution,[],[f22012,f20119])).
fof(f22012,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | ($spl727 | $spl770)),
  inference(superposition,[],[f22009,f73])).
fof(f22008,plain,(
  $false | ($spl9 | $spl48 | $spl726)),
  inference(trivial_inequality_removal,[],[f22004])).
fof(f22004,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl9 | $spl48 | $spl726)),
  inference(superposition,[],[f21219,f20106])).
fof(f20106,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl726),
  inference(superposition,[],[f70,f20076])).
fof(f21966,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21919,f21834])).
fof(f21919,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl191 | $spl268)),
  inference(superposition,[],[f17648,f21834])).
fof(f21963,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl637)),
  inference(forward_demodulation,[],[f21918,f21834])).
fof(f21918,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl637)),
  inference(superposition,[],[f14681,f21834])).
fof(f21960,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl659)),
  inference(forward_demodulation,[],[f21917,f21834])).
fof(f21917,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl659)),
  inference(superposition,[],[f14604,f21834])).
fof(f21957,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl675)),
  inference(forward_demodulation,[],[f21916,f21834])).
fof(f21916,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl675)),
  inference(superposition,[],[f14041,f21834])).
fof(f21956,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl857),
  inference(cnf_transformation,[],[f21956_D])).
fof(f21956_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl857),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl857])])).
fof(f21954,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl671)),
  inference(forward_demodulation,[],[f21915,f21834])).
fof(f21915,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl671)),
  inference(superposition,[],[f13888,f21834])).
fof(f21953,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl855),
  inference(cnf_transformation,[],[f21953_D])).
fof(f21953_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl855),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl855])])).
fof(f21951,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl219 | $spl268)),
  inference(forward_demodulation,[],[f21914,f21834])).
fof(f21914,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl219 | $spl268)),
  inference(superposition,[],[f13093,f21834])).
fof(f21946,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl37 | $spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21912,f21834])).
fof(f21912,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl37 | $spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f12212,f21834])).
fof(f21945,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl307)),
  inference(forward_demodulation,[],[f21911,f21834])).
fof(f21911,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl307)),
  inference(superposition,[],[f8262,f21834])).
fof(f21942,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl105 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21910,f21834])).
fof(f21910,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl105 | $spl191 | $spl268)),
  inference(superposition,[],[f7964,f21834])).
fof(f21941,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl66 | $spl107 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21909,f21834])).
fof(f21909,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl107 | $spl191 | $spl268)),
  inference(superposition,[],[f7814,f21834])).
fof(f21940,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl311)),
  inference(forward_demodulation,[],[f21908,f21834])).
fof(f21908,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl311)),
  inference(superposition,[],[f6432,f21834])).
fof(f21939,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl315)),
  inference(forward_demodulation,[],[f21907,f21834])).
fof(f21907,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268 | $spl315)),
  inference(superposition,[],[f5514,f21834])).
fof(f21938,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21906,f21834])).
fof(f21906,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat'))))) ) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f3865,f21834])).
fof(f21937,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl153 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21904,f21834])).
fof(f21904,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl153 | $spl191 | $spl268)),
  inference(superposition,[],[f2043,f21834])).
fof(f21936,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl133 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21903,f21834])).
fof(f21903,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl133 | $spl191 | $spl268)),
  inference(superposition,[],[f1913,f21834])).
fof(f21933,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl87 | $spl191 | $spl268)),
  inference(forward_demodulation,[],[f21901,f21834])).
fof(f21901,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),'type.exhLang.pat')))) | ($spl66 | $spl87 | $spl191 | $spl268)),
  inference(superposition,[],[f1320,f21834])).
fof(f21929,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl846),
  inference(cnf_transformation,[],[f21929_D])).
fof(f21929_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl846),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl846])])).
fof(f21895,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl191 | $spl268)),
  inference(superposition,[],[f21834,f72])).
fof(f21795,plain,(
  $false | ($spl9 | $spl21 | $spl606)),
  inference(subsumption_resolution,[],[f14044,f11552])).
fof(f14044,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl9 | $spl21)),
  inference(forward_demodulation,[],[f120,f12430])).
fof(f21792,plain,(
  $false | ($spl9 | $spl15 | $spl48 | $spl606)),
  inference(subsumption_resolution,[],[f12830,f11552])).
fof(f12830,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl9 | $spl15 | $spl48)),
  inference(forward_demodulation,[],[f11524,f12430])).
fof(f11524,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl15 | $spl48)),
  inference(forward_demodulation,[],[f103,f245])).
fof(f21628,plain,(
  $false | ($spl83 | $spl380)),
  inference(subsumption_resolution,[],[f21617,f483])).
fof(f21617,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl380),
  inference(duplicate_literal_removal,[],[f21589])).
fof(f21589,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl380),
  inference(superposition,[],[f72,f7747])).
fof(f7747,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl380),
  inference(cnf_transformation,[],[f7747_D])).
fof(f7747_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f21623,plain,(
  $false | ($spl83 | $spl380)),
  inference(subsumption_resolution,[],[f21618,f483])).
fof(f21618,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl380),
  inference(duplicate_literal_removal,[],[f21586])).
fof(f21586,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl380),
  inference(superposition,[],[f7747,f72])).
fof(f21580,plain,(
  $false | ($spl16 | $spl607)),
  inference(subsumption_resolution,[],[f21578,f105])).
fof(f105,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl16),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f21578,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl607),
  inference(superposition,[],[f11553,f71])).
fof(f21528,plain,(
  $false | ($spl12 | $spl57 | $spl252)),
  inference(subsumption_resolution,[],[f21475,f274])).
fof(f21475,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl12 | $spl252)),
  inference(superposition,[],[f21078,f73])).
fof(f21078,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl12 | $spl252)),
  inference(forward_demodulation,[],[f101,f3192])).
fof(f21350,plain,(
  $false | ($spl11 | $spl120)),
  inference(trivial_inequality_removal,[],[f21346])).
fof(f21346,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl11 | $spl120)),
  inference(superposition,[],[f99,f1584])).
fof(f106,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl17),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f21120,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl830),
  inference(cnf_transformation,[],[f21120_D])).
fof(f21120_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl830),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl830])])).
fof(f21332,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl11 | $spl252)),
  inference(forward_demodulation,[],[f21331,f3192])).
fof(f21331,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl11),
  inference(superposition,[],[f99,f72])).
fof(f21329,plain,(
  $false | ($spl66 | $spl245 | $spl654)),
  inference(subsumption_resolution,[],[f16840,f338])).
fof(f16840,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl245 | $spl654)),
  inference(forward_demodulation,[],[f2778,f12379])).
fof(f2778,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl245),
  inference(cnf_transformation,[],[f2778_D])).
fof(f2778_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl245),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl245])])).
fof(f21237,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl842),
  inference(cnf_transformation,[],[f21237_D])).
fof(f21237_D,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) <=> ~$spl842),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl842])])).
fof(f338,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl66),
  inference(cnf_transformation,[],[f338_D])).
fof(f338_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f14048,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl654),
  inference(superposition,[],[f12379,f817])).
fof(f21236,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | $spl840),
  inference(cnf_transformation,[],[f21236_D])).
fof(f21236_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f14051,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | ($spl268 | $spl654)),
  inference(superposition,[],[f12379,f3708])).
fof(f21234,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))))) ) | $spl838),
  inference(cnf_transformation,[],[f21234_D])).
fof(f21234_D,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))))) ) <=> ~$spl838),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl838])])).
fof(f21239,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl268 | $spl654)),
  inference(forward_demodulation,[],[f21238,f73])).
fof(f21238,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl268 | $spl654)),
  inference(forward_demodulation,[],[f14052,f74])).
fof(f14052,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))))) ) | ($spl268 | $spl654)),
  inference(superposition,[],[f12379,f3865])).
fof(f21231,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl836),
  inference(cnf_transformation,[],[f21231_D])).
fof(f21231_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl836),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl836])])).
fof(f14055,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl654),
  inference(superposition,[],[f12379,f72])).
fof(f14057,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl654),
  inference(superposition,[],[f817,f12379])).
fof(f14060,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | ($spl268 | $spl654)),
  inference(superposition,[],[f3708,f12379])).
fof(f21233,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl268 | $spl654)),
  inference(forward_demodulation,[],[f21232,f73])).
fof(f21232,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl268 | $spl654)),
  inference(forward_demodulation,[],[f14061,f74])).
fof(f14061,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))))) ) | ($spl268 | $spl654)),
  inference(superposition,[],[f3865,f12379])).
fof(f14064,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl654),
  inference(superposition,[],[f72,f12379])).
fof(f21229,plain,(
  $false | ($spl11 | $spl128)),
  inference(subsumption_resolution,[],[f99,f1920])).
fof(f1920,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl128),
  inference(backward_demodulation,[],[f1701,f71])).
fof(f11553,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl607),
  inference(cnf_transformation,[],[f11553_D])).
fof(f11553_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl607),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl607])])).
fof(f275,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl56),
  inference(cnf_transformation,[],[f275_D])).
fof(f275_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f21228,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl9 | $spl48 | $spl252)),
  inference(forward_demodulation,[],[f21227,f73])).
fof(f21227,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl9 | $spl48 | $spl252)),
  inference(forward_demodulation,[],[f21226,f3192])).
fof(f21226,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl9 | $spl48)),
  inference(superposition,[],[f21219,f72])).
fof(f21215,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f21214,f12496])).
fof(f21214,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f21192,f73])).
fof(f21192,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(superposition,[],[f3865,f12496])).
fof(f21175,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl832),
  inference(cnf_transformation,[],[f21175_D])).
fof(f21175_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl832),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl832])])).
fof(f21177,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f21176,f12430])).
fof(f21176,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f21152,f73])).
fof(f21152,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl9 | $spl268)),
  inference(superposition,[],[f3865,f12430])).
fof(f21173,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl268)),
  inference(forward_demodulation,[],[f21151,f12430])).
fof(f21151,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl9 | $spl268)),
  inference(superposition,[],[f3708,f12430])).
fof(f278,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | $spl58),
  inference(cnf_transformation,[],[f278_D])).
fof(f278_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f3201,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | $spl252),
  inference(superposition,[],[f72,f3192])).
fof(f21118,plain,(
  $false | ($spl9 | $spl745)),
  inference(subsumption_resolution,[],[f21080,f20090])).
fof(f21080,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl9),
  inference(trivial_inequality_removal,[],[f12428])).
fof(f21117,plain,(
  $false | ($spl9 | $spl745)),
  inference(subsumption_resolution,[],[f12430,f20090])).
fof(f7754,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | $spl384),
  inference(cnf_transformation,[],[f7754_D])).
fof(f7754_D,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f3841,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),X29) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X29,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X29,'type.exhLang.pat'))))) ) | $spl268),
  inference(duplicate_literal_removal,[],[f3761])).
fof(f3761,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),X29) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X29,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X29,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X29) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X29,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X29,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f3708,f72])).
fof(f21086,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | $spl822),
  inference(cnf_transformation,[],[f21086_D])).
fof(f21086_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) <=> ~$spl822),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl822])])).
fof(f4199,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | $spl272),
  inference(duplicate_literal_removal,[],[f4102])).
fof(f4102,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | $spl272),
  inference(superposition,[],[f4034,f72])).
fof(f9866,plain,(
  ( ! [X97,X96] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),X96) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X96,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X96,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f9834,f73])).
fof(f9834,plain,(
  ( ! [X97,X96] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),X96) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X96,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X96,'type.exhLang.pat'))))) ) | $spl268),
  inference(duplicate_literal_removal,[],[f9692])).
fof(f9692,plain,(
  ( ! [X97,X96] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X97),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),X96) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X96,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X96,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X96) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X96,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X96,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f3865,f72])).
fof(f21088,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl824),
  inference(cnf_transformation,[],[f21088_D])).
fof(f21088_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl824),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl824])])).
fof(f21091,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl268 | $spl520)),
  inference(forward_demodulation,[],[f21001,f9212])).
fof(f21001,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl268 | $spl520)),
  inference(superposition,[],[f3708,f9212])).
fof(f21089,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))))) ) | ($spl268 | $spl520)),
  inference(forward_demodulation,[],[f21025,f9212])).
fof(f21025,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl268 | $spl520)),
  inference(forward_demodulation,[],[f21002,f73])).
fof(f21002,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl268 | $spl520)),
  inference(superposition,[],[f3865,f9212])).
fof(f21084,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | ($spl272 | $spl520)),
  inference(forward_demodulation,[],[f21003,f9212])).
fof(f21003,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl272 | $spl520)),
  inference(superposition,[],[f4034,f9212])).
fof(f21079,plain,(
  $false | ($spl11 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f99,f19968])).
fof(f19968,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl82 | $spl550)),
  inference(backward_demodulation,[],[f11397,f71])).
fof(f11397,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl82 | $spl550)),
  inference(superposition,[],[f10159,f484])).
fof(f21075,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f90,f20799])).
fof(f20799,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl8),
  inference(superposition,[],[f69,f97])).
fof(f21072,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f67,f20799])).
fof(f21068,plain,(
  $false | ($spl8 | $spl15 | $spl48)),
  inference(subsumption_resolution,[],[f11524,f20799])).
fof(f21067,plain,(
  $false | ($spl8 | $spl21)),
  inference(subsumption_resolution,[],[f120,f20799])).
fof(f21066,plain,(
  $false | ($spl8 | $spl48 | $spl58)),
  inference(trivial_inequality_removal,[],[f21062])).
fof(f21062,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl8 | $spl48 | $spl58)),
  inference(superposition,[],[f11528,f20799])).
fof(f11528,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58)),
  inference(forward_demodulation,[],[f11527,f245])).
fof(f11527,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl58),
  inference(forward_demodulation,[],[f67,f278])).
fof(f20981,plain,(
  $false | ($spl67 | $spl69 | $spl570 | $spl654)),
  inference(subsumption_resolution,[],[f20980,f340])).
fof(f20980,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | ($spl67 | $spl570 | $spl654)),
  inference(forward_demodulation,[],[f20941,f14103])).
fof(f14103,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl67 | $spl654)),
  inference(subsumption_resolution,[],[f14055,f337])).
fof(f20941,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl570 | $spl654)),
  inference(superposition,[],[f12379,f11423])).
fof(f20979,plain,(
  $false | ($spl67 | $spl69 | $spl570 | $spl654)),
  inference(subsumption_resolution,[],[f20978,f340])).
fof(f20978,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | ($spl67 | $spl570 | $spl654)),
  inference(forward_demodulation,[],[f20938,f14103])).
fof(f20938,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl570 | $spl654)),
  inference(superposition,[],[f11423,f12379])).
fof(f20851,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl818),
  inference(cnf_transformation,[],[f20851_D])).
fof(f20851_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl818),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl818])])).
fof(f20853,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | $spl821),
  inference(cnf_transformation,[],[f20853_D])).
fof(f20853_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) <=> ~$spl821),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl821])])).
fof(f20849,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl697),
  inference(superposition,[],[f14597,f72])).
fof(f20090,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl745),
  inference(cnf_transformation,[],[f20090_D])).
fof(f20090_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl745),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl745])])).
fof(f20717,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl657),
  inference(superposition,[],[f12439,f72])).
fof(f20091,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl744),
  inference(cnf_transformation,[],[f20091_D])).
fof(f20091_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl744),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl744])])).
fof(f20683,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl814),
  inference(cnf_transformation,[],[f20683_D])).
fof(f20683_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl814),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl814])])).
fof(f20713,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl656),
  inference(forward_demodulation,[],[f20677,f12438])).
fof(f20677,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl656),
  inference(superposition,[],[f72,f12438])).
fof(f20628,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl813),
  inference(cnf_transformation,[],[f20628_D])).
fof(f20628_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl813),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl813])])).
fof(f20712,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl73 | $spl656)),
  inference(forward_demodulation,[],[f20675,f12438])).
fof(f20675,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl656)),
  inference(superposition,[],[f17648,f12438])).
fof(f20625,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl811),
  inference(cnf_transformation,[],[f20625_D])).
fof(f20625_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl811),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl811])])).
fof(f20711,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl637 | $spl656)),
  inference(forward_demodulation,[],[f20674,f12438])).
fof(f20674,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl637 | $spl656)),
  inference(superposition,[],[f14681,f12438])).
fof(f20622,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl809),
  inference(cnf_transformation,[],[f20622_D])).
fof(f20622_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl809),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl809])])).
fof(f20710,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl656 | $spl659)),
  inference(forward_demodulation,[],[f20673,f12438])).
fof(f20673,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl656 | $spl659)),
  inference(superposition,[],[f14604,f12438])).
fof(f20092,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl746),
  inference(cnf_transformation,[],[f20092_D])).
fof(f20092_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) <=> ~$spl746),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl746])])).
fof(f20709,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl654 | $spl656)),
  inference(forward_demodulation,[],[f20672,f12438])).
fof(f20672,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl67 | $spl654 | $spl656)),
  inference(superposition,[],[f14159,f12438])).
fof(f14159,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl67 | $spl654)),
  inference(superposition,[],[f14149,f72])).
fof(f14149,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl67 | $spl654)),
  inference(forward_demodulation,[],[f14126,f73])).
fof(f14126,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl67 | $spl654)),
  inference(superposition,[],[f74,f14103])).
fof(f20618,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl807),
  inference(cnf_transformation,[],[f20618_D])).
fof(f20618_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl807),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl807])])).
fof(f20708,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl656 | $spl675)),
  inference(forward_demodulation,[],[f20671,f12438])).
fof(f20671,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl656 | $spl675)),
  inference(superposition,[],[f14041,f12438])).
fof(f20615,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl805),
  inference(cnf_transformation,[],[f20615_D])).
fof(f20615_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl805),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl805])])).
fof(f20707,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl656 | $spl671)),
  inference(forward_demodulation,[],[f20670,f12438])).
fof(f20670,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl656 | $spl671)),
  inference(superposition,[],[f13888,f12438])).
fof(f20612,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl803),
  inference(cnf_transformation,[],[f20612_D])).
fof(f20612_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl803),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl803])])).
fof(f20706,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl219 | $spl656)),
  inference(forward_demodulation,[],[f20669,f12438])).
fof(f20669,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl219 | $spl656)),
  inference(superposition,[],[f13093,f12438])).
fof(f20609,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl801),
  inference(cnf_transformation,[],[f20609_D])).
fof(f20609_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl801),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl801])])).
fof(f20705,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl656)),
  inference(forward_demodulation,[],[f20668,f12438])).
fof(f20668,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl67 | $spl656)),
  inference(superposition,[],[f13006,f12438])).
fof(f13006,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl67),
  inference(superposition,[],[f337,f72])).
fof(f20606,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl799),
  inference(cnf_transformation,[],[f20606_D])).
fof(f20606_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl799),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl799])])).
fof(f20704,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl597 | $spl656)),
  inference(forward_demodulation,[],[f20703,f12438])).
fof(f20703,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl597 | $spl656)),
  inference(forward_demodulation,[],[f20667,f74])).
fof(f20667,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl597 | $spl656)),
  inference(superposition,[],[f12247,f12438])).
fof(f20602,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl797),
  inference(cnf_transformation,[],[f20602_D])).
fof(f20602_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl797),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl797])])).
fof(f20702,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl37 | $spl656)),
  inference(forward_demodulation,[],[f20666,f12438])).
fof(f20666,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl37 | $spl656)),
  inference(superposition,[],[f12212,f12438])).
fof(f20599,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl795),
  inference(cnf_transformation,[],[f20599_D])).
fof(f20599_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl795),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl795])])).
fof(f20701,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl307 | $spl656)),
  inference(forward_demodulation,[],[f20665,f12438])).
fof(f20665,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl307 | $spl656)),
  inference(superposition,[],[f8262,f12438])).
fof(f20596,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl793),
  inference(cnf_transformation,[],[f20596_D])).
fof(f20596_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl793),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl793])])).
fof(f20700,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl105 | $spl656)),
  inference(forward_demodulation,[],[f20664,f12438])).
fof(f20664,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl105 | $spl656)),
  inference(superposition,[],[f7964,f12438])).
fof(f20593,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) | $spl791),
  inference(cnf_transformation,[],[f20593_D])).
fof(f20593_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) <=> ~$spl791),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl791])])).
fof(f20699,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) | ($spl107 | $spl656)),
  inference(forward_demodulation,[],[f20663,f12438])).
fof(f20663,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl107 | $spl656)),
  inference(superposition,[],[f7814,f12438])).
fof(f20590,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl789),
  inference(cnf_transformation,[],[f20590_D])).
fof(f20590_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl789),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl789])])).
fof(f20698,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl311 | $spl656)),
  inference(forward_demodulation,[],[f20662,f12438])).
fof(f20662,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl311 | $spl656)),
  inference(superposition,[],[f6432,f12438])).
fof(f20587,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl787),
  inference(cnf_transformation,[],[f20587_D])).
fof(f20587_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl787),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl787])])).
fof(f20697,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl315 | $spl656)),
  inference(forward_demodulation,[],[f20661,f12438])).
fof(f20661,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl315 | $spl656)),
  inference(superposition,[],[f5514,f12438])).
fof(f20085,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | $spl738),
  inference(cnf_transformation,[],[f20085_D])).
fof(f20085_D,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) <=> ~$spl738),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl738])])).
fof(f20694,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl656)),
  inference(forward_demodulation,[],[f20693,f12438])).
fof(f20693,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl268 | $spl656)),
  inference(forward_demodulation,[],[f20659,f74])).
fof(f20659,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl268 | $spl656)),
  inference(superposition,[],[f3865,f12438])).
fof(f20579,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl785),
  inference(cnf_transformation,[],[f20579_D])).
fof(f20579_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl785),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl785])])).
fof(f20691,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl153 | $spl656)),
  inference(forward_demodulation,[],[f20657,f12438])).
fof(f20657,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl153 | $spl656)),
  inference(superposition,[],[f2043,f12438])).
fof(f20576,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl783),
  inference(cnf_transformation,[],[f20576_D])).
fof(f20576_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl783),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl783])])).
fof(f20690,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl133 | $spl656)),
  inference(forward_demodulation,[],[f20656,f12438])).
fof(f20656,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl133 | $spl656)),
  inference(superposition,[],[f1913,f12438])).
fof(f20573,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl781),
  inference(cnf_transformation,[],[f20573_D])).
fof(f20573_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl781),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl781])])).
fof(f20689,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl87 | $spl656)),
  inference(forward_demodulation,[],[f20654,f12438])).
fof(f20654,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl656)),
  inference(superposition,[],[f1320,f12438])).
fof(f20082,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl734),
  inference(cnf_transformation,[],[f20082_D])).
fof(f20082_D,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) <=> ~$spl734),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl734])])).
fof(f20688,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl656)),
  inference(forward_demodulation,[],[f20652,f12438])).
fof(f20652,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl656)),
  inference(superposition,[],[f1007,f12438])).
fof(f1007,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl82),
  inference(superposition,[],[f1006,f72])).
fof(f1006,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl82),
  inference(forward_demodulation,[],[f999,f73])).
fof(f999,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl82),
  inference(superposition,[],[f74,f484])).
fof(f20681,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl656),
  inference(forward_demodulation,[],[f20638,f12438])).
fof(f20638,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl656),
  inference(superposition,[],[f12438,f72])).
fof(f20567,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | $spl778),
  inference(cnf_transformation,[],[f20567_D])).
fof(f20567_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) <=> ~$spl778),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl778])])).
fof(f20629,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f20561,f11547])).
fof(f11547,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82)),
  inference(trivial_inequality_removal,[],[f11545])).
fof(f11545,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82)),
  inference(superposition,[],[f11528,f1036])).
fof(f1036,plain,(
  ( ! [X2,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),X1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X1)))) ) | $spl82),
  inference(superposition,[],[f69,f997])).
fof(f20561,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82)),
  inference(superposition,[],[f72,f11547])).
fof(f20626,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl73 | $spl82)),
  inference(forward_demodulation,[],[f20559,f11547])).
fof(f20559,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl73 | $spl82)),
  inference(superposition,[],[f17648,f11547])).
fof(f20623,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl637)),
  inference(forward_demodulation,[],[f20558,f11547])).
fof(f20558,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl637)),
  inference(superposition,[],[f14681,f11547])).
fof(f20620,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl659)),
  inference(forward_demodulation,[],[f20557,f11547])).
fof(f20557,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl659)),
  inference(superposition,[],[f14604,f11547])).
fof(f20619,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl48 | $spl58 | $spl67 | $spl82 | $spl654)),
  inference(forward_demodulation,[],[f20556,f11547])).
fof(f20556,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl48 | $spl58 | $spl67 | $spl82 | $spl654)),
  inference(superposition,[],[f14159,f11547])).
fof(f20616,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl675)),
  inference(forward_demodulation,[],[f20555,f11547])).
fof(f20555,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl675)),
  inference(superposition,[],[f14041,f11547])).
fof(f20613,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl671)),
  inference(forward_demodulation,[],[f20554,f11547])).
fof(f20554,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl671)),
  inference(superposition,[],[f13888,f11547])).
fof(f20610,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl219)),
  inference(forward_demodulation,[],[f20553,f11547])).
fof(f20553,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl219)),
  inference(superposition,[],[f13093,f11547])).
fof(f20607,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl67 | $spl82)),
  inference(forward_demodulation,[],[f20552,f11547])).
fof(f20552,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl67 | $spl82)),
  inference(superposition,[],[f13006,f11547])).
fof(f20604,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl597)),
  inference(forward_demodulation,[],[f20603,f11547])).
fof(f20603,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl597)),
  inference(forward_demodulation,[],[f20551,f74])).
fof(f20551,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl597)),
  inference(superposition,[],[f12247,f11547])).
fof(f20600,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl37 | $spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f20550,f11547])).
fof(f20550,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl37 | $spl48 | $spl58 | $spl82)),
  inference(superposition,[],[f12212,f11547])).
fof(f20597,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl307)),
  inference(forward_demodulation,[],[f20549,f11547])).
fof(f20549,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl307)),
  inference(superposition,[],[f8262,f11547])).
fof(f20594,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl105)),
  inference(forward_demodulation,[],[f20548,f11547])).
fof(f20548,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl105)),
  inference(superposition,[],[f7964,f11547])).
fof(f20591,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) | ($spl48 | $spl58 | $spl82 | $spl107)),
  inference(forward_demodulation,[],[f20547,f11547])).
fof(f20547,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl107)),
  inference(superposition,[],[f7814,f11547])).
fof(f20588,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl311)),
  inference(forward_demodulation,[],[f20546,f11547])).
fof(f20546,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl311)),
  inference(superposition,[],[f6432,f11547])).
fof(f20585,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl315)),
  inference(forward_demodulation,[],[f20545,f11547])).
fof(f20545,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl315)),
  inference(superposition,[],[f5514,f11547])).
fof(f20582,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl48 | $spl58 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f20581,f11547])).
fof(f20581,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl48 | $spl58 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f20543,f74])).
fof(f20543,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl48 | $spl58 | $spl82 | $spl268)),
  inference(superposition,[],[f3865,f11547])).
fof(f20577,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl153)),
  inference(forward_demodulation,[],[f20541,f11547])).
fof(f20541,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl153)),
  inference(superposition,[],[f2043,f11547])).
fof(f20574,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl133)),
  inference(forward_demodulation,[],[f20540,f11547])).
fof(f20540,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl133)),
  inference(superposition,[],[f1913,f11547])).
fof(f20571,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl87)),
  inference(forward_demodulation,[],[f20538,f11547])).
fof(f20538,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl87)),
  inference(superposition,[],[f1320,f11547])).
fof(f20569,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f20536,f11547])).
fof(f20536,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl48 | $spl58 | $spl82)),
  inference(superposition,[],[f1007,f11547])).
fof(f20565,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f20526,f11547])).
fof(f20526,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82)),
  inference(superposition,[],[f11547,f72])).
fof(f20491,plain,(
  $false | ($spl48 | $spl58 | $spl82 | $spl93 | $spl550)),
  inference(subsumption_resolution,[],[f20445,f11397])).
fof(f20445,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl93)),
  inference(backward_demodulation,[],[f20442,f11528])).
fof(f20442,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl48 | $spl58 | $spl82 | $spl93)),
  inference(forward_demodulation,[],[f11547,f20148])).
fof(f20148,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl93)),
  inference(trivial_inequality_removal,[],[f20145])).
fof(f20145,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl48 | $spl58 | $spl82 | $spl93)),
  inference(superposition,[],[f11528,f17739])).
fof(f17739,plain,(
  ( ! [X14,X15,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X14),s('type.list.list'('type.exhLang.pat'),X13),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X13)))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f69,f14928])).
fof(f20398,plain,(
  $false | ($spl761 | $spl771)),
  inference(subsumption_resolution,[],[f20397,f20116])).
fof(f20116,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl761),
  inference(cnf_transformation,[],[f20116_D])).
fof(f20116_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl761),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl761])])).
fof(f20397,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl771),
  inference(trivial_inequality_removal,[],[f20396])).
fof(f20396,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl771),
  inference(superposition,[],[f20308,f72])).
fof(f20395,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | $spl776),
  inference(cnf_transformation,[],[f20395_D])).
fof(f20395_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) <=> ~$spl776),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl776])])).
fof(f20308,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | $spl771),
  inference(cnf_transformation,[],[f20308_D])).
fof(f20308_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) <=> ~$spl771),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl771])])).
fof(f20390,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') != s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | $spl761),
  inference(superposition,[],[f20116,f72])).
fof(f20304,plain,(
  s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) | $spl766),
  inference(cnf_transformation,[],[f20304_D])).
fof(f20304_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) <=> ~$spl766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl766])])).
fof(f20305,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl769),
  inference(cnf_transformation,[],[f20305_D])).
fof(f20305_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl769),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl769])])).
fof(f20393,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) | $spl761),
  inference(forward_demodulation,[],[f20387,f73])).
fof(f20387,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) != s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) | $spl761),
  inference(superposition,[],[f20116,f72])).
fof(f20379,plain,(
  $false | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl659 | $spl728)),
  inference(subsumption_resolution,[],[f20378,f12488])).
fof(f20378,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl728)),
  inference(forward_demodulation,[],[f20377,f484])).
fof(f20377,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl728)),
  inference(forward_demodulation,[],[f20376,f20148])).
fof(f20376,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl191 | $spl728)),
  inference(subsumption_resolution,[],[f20333,f2603])).
fof(f20333,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl82 | $spl93 | $spl728)),
  inference(superposition,[],[f18213,f20078])).
fof(f18213,plain,(
  ( ! [X12,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(forward_demodulation,[],[f18212,f73])).
fof(f18212,plain,(
  ( ! [X12,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(forward_demodulation,[],[f18118,f74])).
fof(f18118,plain,(
  ( ! [X12,X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f74,f17941])).
fof(f17941,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),X13) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X13,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X13,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X13)))))) ) | ($spl82 | $spl93)),
  inference(subsumption_resolution,[],[f17922,f997])).
fof(f17922,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),X13) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X13))) | s('type.list.list'('type.exhLang.pat'),X13) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X13,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X13,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X13)))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f17695,f14928])).
fof(f17695,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1115,f72])).
fof(f20309,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | $spl770),
  inference(cnf_transformation,[],[f20309_D])).
fof(f20309_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) <=> ~$spl770),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl770])])).
fof(f20311,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | $spl772),
  inference(cnf_transformation,[],[f20311_D])).
fof(f20311_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) <=> ~$spl772),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl772])])).
fof(f20314,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | $spl760),
  inference(forward_demodulation,[],[f20298,f20117])).
fof(f20298,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | $spl760),
  inference(superposition,[],[f72,f20117])).
fof(f20312,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) | ($spl4 | $spl760)),
  inference(forward_demodulation,[],[f20294,f20117])).
fof(f20294,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v'))))) ) | ($spl4 | $spl760)),
  inference(superposition,[],[f13140,f20117])).
fof(f20307,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | $spl760),
  inference(forward_demodulation,[],[f20292,f20117])).
fof(f20292,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'))),'type.exhSem.v')))) | $spl760),
  inference(superposition,[],[f20117,f72])).
fof(f20306,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl768),
  inference(cnf_transformation,[],[f20306_D])).
fof(f20306_D,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl768])])).
fof(f20302,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) | $spl760),
  inference(forward_demodulation,[],[f20291,f73])).
fof(f20291,plain,(
  s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v'),'type.exhSem.v')))) | $spl760),
  inference(superposition,[],[f20117,f72])).
fof(f20290,plain,(
  $false | ($spl82 | $spl252 | $spl257 | $spl550)),
  inference(subsumption_resolution,[],[f3218,f19968])).
fof(f3218,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl252 | $spl257)),
  inference(forward_demodulation,[],[f3197,f3192])).
fof(f20279,plain,(
  $false | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl550 | $spl635 | $spl659)),
  inference(subsumption_resolution,[],[f20278,f12488])).
fof(f20278,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl550 | $spl635)),
  inference(forward_demodulation,[],[f20277,f484])).
fof(f20277,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl550 | $spl635)),
  inference(forward_demodulation,[],[f20276,f20148])).
fof(f20276,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl191 | $spl550 | $spl635)),
  inference(subsumption_resolution,[],[f20231,f2603])).
fof(f20231,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl93 | $spl550 | $spl635)),
  inference(superposition,[],[f18213,f20024])).
fof(f20024,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl82 | $spl550 | $spl635)),
  inference(forward_demodulation,[],[f20023,f15272])).
fof(f15272,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | $spl635),
  inference(trivial_inequality_removal,[],[f15270])).
fof(f15270,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | $spl635),
  inference(superposition,[],[f12145,f72])).
fof(f12145,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl635),
  inference(cnf_transformation,[],[f12145_D])).
fof(f12145_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl635),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl635])])).
fof(f20023,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f12281,f11397])).
fof(f12281,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(superposition,[],[f11528,f72])).
fof(f20221,plain,(
  $false | ($spl17 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f106,f19968])).
fof(f20123,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | $spl764),
  inference(cnf_transformation,[],[f20123_D])).
fof(f20123_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) <=> ~$spl764),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl764])])).
fof(f20121,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4)))) ) | ($spl82 | $spl550 | $spl726)),
  inference(forward_demodulation,[],[f20120,f20076])).
fof(f20120,plain,(
  ( ! [X4] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | ($spl82 | $spl550 | $spl726)),
  inference(forward_demodulation,[],[f20108,f11397])).
fof(f20108,plain,(
  ( ! [X4,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))),'type.exhSem.v'))))) ) | $spl726),
  inference(superposition,[],[f819,f20076])).
fof(f20119,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | $spl762),
  inference(cnf_transformation,[],[f20119_D])).
fof(f20119_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) <=> ~$spl762),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl762])])).
fof(f20115,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.SNOC_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl726),
  inference(forward_demodulation,[],[f20105,f73])).
fof(f20105,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(sK5('const.list.NIL_0','type.exhSem.v'),'type.exhSem.v')))) | $spl726),
  inference(superposition,[],[f20076,f72])).
fof(f20102,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl758),
  inference(cnf_transformation,[],[f20102_D])).
fof(f20102_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) <=> ~$spl758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl758])])).
fof(f11517,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl599),
  inference(cnf_transformation,[],[f11517_D])).
fof(f11517_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl599),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl599])])).
fof(f20026,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl93 | $spl268 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20025,f15284])).
fof(f15284,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl635),
  inference(backward_demodulation,[],[f15272,f12145])).
fof(f20025,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl93 | $spl268 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f19850,f15272])).
fof(f19850,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X30),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl93 | $spl268 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f19475])).
fof(f19475,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat'))))) ) | ($spl82 | $spl93 | $spl268)),
  inference(duplicate_literal_removal,[],[f19364])).
fof(f19364,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat'))))) ) | ($spl82 | $spl93 | $spl268)),
  inference(superposition,[],[f3865,f18213])).
fof(f15538,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl627 | $spl635)),
  inference(superposition,[],[f15285,f72])).
fof(f15285,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl627 | $spl635)),
  inference(backward_demodulation,[],[f15272,f11702])).
fof(f20078,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl728),
  inference(cnf_transformation,[],[f20078_D])).
fof(f20078_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl728),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl728])])).
fof(f19727,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl93 | $spl268 | $spl635)),
  inference(superposition,[],[f19475,f15272])).
fof(f20101,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | $spl756),
  inference(cnf_transformation,[],[f20101_D])).
fof(f20101_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) <=> ~$spl756),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl756])])).
fof(f20029,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f20028,f74])).
fof(f20028,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20027,f15284])).
fof(f20027,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f19429,f15272])).
fof(f19429,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f18213])).
fof(f12438,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl656),
  inference(cnf_transformation,[],[f12438_D])).
fof(f12438_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f20032,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl82 | $spl93 | $spl635)),
  inference(forward_demodulation,[],[f19542,f74])).
fof(f19542,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl82 | $spl93 | $spl635)),
  inference(forward_demodulation,[],[f19357,f73])).
fof(f19357,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl82 | $spl93 | $spl635)),
  inference(superposition,[],[f18213,f15272])).
fof(f20100,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl754),
  inference(cnf_transformation,[],[f20100_D])).
fof(f20100_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl754),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl754])])).
fof(f19321,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl40 | $spl82 | $spl93)),
  inference(superposition,[],[f18213,f185])).
fof(f20098,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | $spl752),
  inference(cnf_transformation,[],[f20098_D])).
fof(f20098_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) <=> ~$spl752),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl752])])).
fof(f20038,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20037,f15284])).
fof(f20037,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f18407,f15272])).
fof(f18407,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f18189])).
fof(f18189,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)))))))) ) | ($spl82 | $spl93)),
  inference(subsumption_resolution,[],[f18055,f997])).
fof(f18055,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9))) | s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)))))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f17695,f17941])).
fof(f18502,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl82 | $spl93 | $spl635)),
  inference(forward_demodulation,[],[f18305,f73])).
fof(f18305,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl82 | $spl93 | $spl635)),
  inference(superposition,[],[f18189,f15272])).
fof(f20096,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | $spl750),
  inference(cnf_transformation,[],[f20096_D])).
fof(f20096_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) <=> ~$spl750),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl750])])).
fof(f20040,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20039,f15284])).
fof(f20039,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f18066,f15272])).
fof(f18066,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f17941])).
fof(f18162,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl635)),
  inference(forward_demodulation,[],[f17975,f73])).
fof(f17975,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl93 | $spl635)),
  inference(superposition,[],[f17941,f15272])).
fof(f20094,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl748),
  inference(cnf_transformation,[],[f20094_D])).
fof(f20094_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl748),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl748])])).
fof(f20042,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20041,f15284])).
fof(f20041,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f17736,f15272])).
fof(f17736,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl93 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f14928])).
fof(f17722,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl93 | $spl635)),
  inference(superposition,[],[f14928,f15272])).
fof(f14940,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl93 | $spl627)),
  inference(superposition,[],[f11702,f14928])).
fof(f20044,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(subsumption_resolution,[],[f20043,f15284])).
fof(f20043,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(forward_demodulation,[],[f17226,f15272])).
fof(f17226,plain,(
  ( ! [X29] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X29),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(superposition,[],[f15538,f14159])).
fof(f17277,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl635 | $spl654)),
  inference(forward_demodulation,[],[f17162,f73])).
fof(f17162,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl67 | $spl635 | $spl654)),
  inference(superposition,[],[f14159,f15272])).
fof(f20046,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20045,f15284])).
fof(f20045,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl627 | $spl635)),
  inference(forward_demodulation,[],[f15668,f15272])).
fof(f15668,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl627 | $spl635)),
  inference(superposition,[],[f15538,f72])).
fof(f20089,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl742),
  inference(cnf_transformation,[],[f20089_D])).
fof(f20089_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f20048,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(subsumption_resolution,[],[f20047,f15284])).
fof(f20047,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(forward_demodulation,[],[f15665,f15272])).
fof(f15665,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl627 | $spl635 | $spl654)),
  inference(superposition,[],[f15538,f14119])).
fof(f14119,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)))) ) | ($spl67 | $spl654)),
  inference(superposition,[],[f14103,f72])).
fof(f20087,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | $spl740),
  inference(cnf_transformation,[],[f20087_D])).
fof(f20087_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f20050,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20049,f15284])).
fof(f20049,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f15663,f15272])).
fof(f15663,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f4034])).
fof(f20053,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f20052,f74])).
fof(f20052,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20051,f15284])).
fof(f20051,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f15662,f15272])).
fof(f15662,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f3865])).
fof(f20055,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20054,f15284])).
fof(f20054,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f15660,f15272])).
fof(f15660,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f1007])).
fof(f20081,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl732),
  inference(cnf_transformation,[],[f20081_D])).
fof(f20081_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl732),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl732])])).
fof(f20057,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20056,f15284])).
fof(f20056,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl627 | $spl635)),
  inference(forward_demodulation,[],[f15659,f15272])).
fof(f15659,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl627 | $spl635)),
  inference(superposition,[],[f15538,f997])).
fof(f20079,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl730),
  inference(cnf_transformation,[],[f20079_D])).
fof(f20079_D,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) <=> ~$spl730),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl730])])).
fof(f20059,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl627 | $spl635)),
  inference(subsumption_resolution,[],[f20058,f15284])).
fof(f20058,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl627 | $spl635)),
  inference(forward_demodulation,[],[f15658,f15272])).
fof(f15658,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl627 | $spl635)),
  inference(superposition,[],[f15538,f817])).
fof(f15300,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl635),
  inference(superposition,[],[f72,f15272])).
fof(f15357,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl635 | $spl654)),
  inference(forward_demodulation,[],[f15297,f73])).
fof(f15297,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl635 | $spl654)),
  inference(superposition,[],[f14119,f15272])).
fof(f15349,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl635)),
  inference(forward_demodulation,[],[f15295,f73])).
fof(f15295,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl635)),
  inference(superposition,[],[f4034,f15272])).
fof(f20060,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl268 | $spl635)),
  inference(forward_demodulation,[],[f15343,f74])).
fof(f15343,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl635)),
  inference(forward_demodulation,[],[f15294,f73])).
fof(f15294,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl635)),
  inference(superposition,[],[f3865,f15272])).
fof(f20084,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | $spl736),
  inference(cnf_transformation,[],[f20084_D])).
fof(f20084_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) <=> ~$spl736),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl736])])).
fof(f15338,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl635)),
  inference(forward_demodulation,[],[f15293,f73])).
fof(f15293,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl635)),
  inference(superposition,[],[f3708,f15272])).
fof(f15334,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl635)),
  inference(forward_demodulation,[],[f15292,f73])).
fof(f15292,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl635)),
  inference(superposition,[],[f1007,f15272])).
fof(f15291,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl635)),
  inference(superposition,[],[f997,f15272])).
fof(f15328,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl635),
  inference(forward_demodulation,[],[f15290,f73])).
fof(f15290,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl635),
  inference(superposition,[],[f817,f15272])).
fof(f14694,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl627),
  inference(superposition,[],[f11702,f72])).
fof(f14693,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl67 | $spl627 | $spl654)),
  inference(superposition,[],[f11702,f14119])).
fof(f14691,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl627)),
  inference(superposition,[],[f11702,f4034])).
fof(f20061,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl627)),
  inference(forward_demodulation,[],[f14690,f74])).
fof(f14690,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl627)),
  inference(superposition,[],[f11702,f3865])).
fof(f14689,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl627)),
  inference(superposition,[],[f11702,f3708])).
fof(f14688,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl627)),
  inference(superposition,[],[f11702,f1007])).
fof(f14687,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl627)),
  inference(superposition,[],[f11702,f997])).
fof(f14686,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl627),
  inference(superposition,[],[f11702,f817])).
fof(f11513,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl594),
  inference(cnf_transformation,[],[f11513_D])).
fof(f11513_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl594),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl594])])).
fof(f13789,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl40 | $spl268)),
  inference(superposition,[],[f3865,f185])).
fof(f20062,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl635)),
  inference(forward_demodulation,[],[f12287,f15272])).
fof(f12287,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(superposition,[],[f11528,f817])).
fof(f20063,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl635)),
  inference(forward_demodulation,[],[f11546,f15272])).
fof(f11546,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(superposition,[],[f11528,f817])).
fof(f20064,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl635)),
  inference(forward_demodulation,[],[f11554,f15272])).
fof(f11554,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(forward_demodulation,[],[f11539,f71])).
fof(f11539,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(superposition,[],[f11528,f72])).
fof(f20076,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) | $spl726),
  inference(cnf_transformation,[],[f20076_D])).
fof(f20076_D,plain,(
  s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v')))) <=> ~$spl726),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl726])])).
fof(f20003,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))) ) | ($spl82 | $spl550)),
  inference(superposition,[],[f819,f11397])).
fof(f20001,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhSem.v'),'const.list.NIL_0') = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.NIL_0','type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.NIL_0','type.exhSem.v'))))) ) | ($spl82 | $spl550)),
  inference(superposition,[],[f11397,f819])).
fof(f20065,plain,(
  $false | ($spl23 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f1138,f11397])).
fof(f1138,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl23 | $spl82)),
  inference(forward_demodulation,[],[f130,f484])).
fof(f20022,plain,(
  $false | ($spl19 | $spl58 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f1219,f11397])).
fof(f1219,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl19 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f314,f484])).
fof(f314,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl19 | $spl58)),
  inference(backward_demodulation,[],[f278,f117])).
fof(f20021,plain,(
  $false | ($spl19 | $spl58 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f1221,f11397])).
fof(f1221,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl19 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f1220,f484])).
fof(f1220,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl19 | $spl58)),
  inference(forward_demodulation,[],[f117,f278])).
fof(f20020,plain,(
  $false | ($spl23 | $spl48 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f4407,f11397])).
fof(f4407,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl23 | $spl48 | $spl82)),
  inference(forward_demodulation,[],[f700,f484])).
fof(f700,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl23 | $spl48)),
  inference(forward_demodulation,[],[f130,f245])).
fof(f20019,plain,(
  $false | ($spl25 | $spl82 | $spl550)),
  inference(subsumption_resolution,[],[f1238,f11397])).
fof(f1238,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl25 | $spl82)),
  inference(forward_demodulation,[],[f149,f484])).
fof(f20018,plain,(
  $false | ($spl48 | $spl82 | $spl95 | $spl191 | $spl550)),
  inference(subsumption_resolution,[],[f20012,f2603])).
fof(f20012,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl48 | $spl82 | $spl95 | $spl550)),
  inference(trivial_inequality_removal,[],[f20008])).
fof(f20008,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl48 | $spl82 | $spl95 | $spl550)),
  inference(superposition,[],[f5511,f11397])).
fof(f5511,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl48 | $spl95)),
  inference(forward_demodulation,[],[f977,f245])).
fof(f977,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl95),
  inference(superposition,[],[f776,f72])).
fof(f20015,plain,(
  $false | ($spl7 | $spl48 | $spl58 | $spl82 | $spl550)),
  inference(trivial_inequality_removal,[],[f20005])).
fof(f20005,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl7 | $spl48 | $spl58 | $spl82 | $spl550)),
  inference(superposition,[],[f4410,f11397])).
fof(f4410,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl7 | $spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f4409,f484])).
fof(f4409,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl7 | $spl48 | $spl58)),
  inference(forward_demodulation,[],[f284,f278])).
fof(f9103,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl514),
  inference(cnf_transformation,[],[f9103_D])).
fof(f9103_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl514),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl514])])).
fof(f9105,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl516),
  inference(cnf_transformation,[],[f9105_D])).
fof(f9105_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl516),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl516])])).
fof(f19793,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl370)),
  inference(superposition,[],[f6899,f19475])).
fof(f8106,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl428),
  inference(cnf_transformation,[],[f8106_D])).
fof(f8106_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f8108,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl430),
  inference(cnf_transformation,[],[f8108_D])).
fof(f8108_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f19785,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl102 | $spl268)),
  inference(superposition,[],[f1285,f19475])).
fof(f3300,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl260),
  inference(cnf_transformation,[],[f3300_D])).
fof(f3300_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f3302,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl262),
  inference(cnf_transformation,[],[f3302_D])).
fof(f3302_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f19783,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl122 | $spl268)),
  inference(superposition,[],[f1668,f19475])).
fof(f17021,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl702),
  inference(cnf_transformation,[],[f17021_D])).
fof(f17021_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl702),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl702])])).
fof(f17023,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl704),
  inference(cnf_transformation,[],[f17023_D])).
fof(f17023_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl704),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl704])])).
fof(f19781,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl664)),
  inference(superposition,[],[f13569,f19475])).
fof(f8436,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl436),
  inference(cnf_transformation,[],[f8436_D])).
fof(f8436_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f8438,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl438),
  inference(cnf_transformation,[],[f8438_D])).
fof(f8438_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f19778,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl362)),
  inference(superposition,[],[f6247,f19475])).
fof(f3439,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl264),
  inference(cnf_transformation,[],[f3439_D])).
fof(f3439_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f3441,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl266),
  inference(cnf_transformation,[],[f3441_D])).
fof(f3441_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f19777,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl174 | $spl268)),
  inference(superposition,[],[f2291,f19475])).
fof(f14092,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl692),
  inference(cnf_transformation,[],[f14092_D])).
fof(f14092_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f19764,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl654)),
  inference(superposition,[],[f12379,f19475])).
fof(f19737,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),X5) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X5,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X5,'type.exhLang.pat'))))) ) | ($spl82 | $spl93 | $spl268)),
  inference(superposition,[],[f69,f19475])).
fof(f19721,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl370)),
  inference(superposition,[],[f19475,f6899])).
fof(f19713,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl102 | $spl268)),
  inference(superposition,[],[f19475,f1285])).
fof(f19711,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl122 | $spl268)),
  inference(superposition,[],[f19475,f1668])).
fof(f19709,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl664)),
  inference(superposition,[],[f19475,f13569])).
fof(f19707,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl362)),
  inference(superposition,[],[f19475,f6247])).
fof(f19706,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl174 | $spl268)),
  inference(superposition,[],[f19475,f2291])).
fof(f19698,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl268 | $spl654)),
  inference(superposition,[],[f19475,f12379])).
fof(f9474,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl532),
  inference(cnf_transformation,[],[f9474_D])).
fof(f9474_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl532),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl532])])).
fof(f19340,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl370)),
  inference(superposition,[],[f18213,f6899])).
fof(f8571,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl440),
  inference(cnf_transformation,[],[f8571_D])).
fof(f8571_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f9472,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl530),
  inference(cnf_transformation,[],[f9472_D])).
fof(f9472_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl530),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl530])])).
fof(f19339,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl182)),
  inference(superposition,[],[f18213,f2570])).
fof(f9470,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl528),
  inference(cnf_transformation,[],[f9470_D])).
fof(f9470_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f19332,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl102)),
  inference(superposition,[],[f18213,f1285])).
fof(f9468,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl526),
  inference(cnf_transformation,[],[f9468_D])).
fof(f9468_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl526),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl526])])).
fof(f19330,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl122)),
  inference(superposition,[],[f18213,f1668])).
fof(f19538,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))))) | $spl724),
  inference(cnf_transformation,[],[f19538_D])).
fof(f19538_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))))) <=> ~$spl724),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl724])])).
fof(f19328,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl664)),
  inference(superposition,[],[f18213,f13569])).
fof(f9466,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl524),
  inference(cnf_transformation,[],[f9466_D])).
fof(f9466_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f19326,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl362)),
  inference(superposition,[],[f18213,f6247])).
fof(f9464,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl522),
  inference(cnf_transformation,[],[f9464_D])).
fof(f9464_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl522),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl522])])).
fof(f19325,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl174)),
  inference(superposition,[],[f18213,f2291])).
fof(f2710,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl216),
  inference(cnf_transformation,[],[f2710_D])).
fof(f2710_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f19536,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl722),
  inference(cnf_transformation,[],[f19536_D])).
fof(f19536_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl722),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl722])])).
fof(f19322,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl70 | $spl82 | $spl93)),
  inference(superposition,[],[f18213,f343])).
fof(f19534,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl720),
  inference(cnf_transformation,[],[f19534_D])).
fof(f19534_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl720),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl720])])).
fof(f19532,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl40 | $spl82 | $spl93)),
  inference(forward_demodulation,[],[f19531,f484])).
fof(f19531,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl40 | $spl82 | $spl93)),
  inference(forward_demodulation,[],[f19321,f12430])).
fof(f19528,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl718),
  inference(cnf_transformation,[],[f19528_D])).
fof(f19528_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl718),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl718])])).
fof(f19317,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl93 | $spl654)),
  inference(superposition,[],[f18213,f12379])).
fof(f7289,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | $spl374),
  inference(cnf_transformation,[],[f7289_D])).
fof(f7289_D,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f18608,plain,(
  ( ! [X19,X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))))) | s('type.list.list'('type.exhLang.pat'),X17) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X17,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X17,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f17739,f18189])).
fof(f4062,plain,(
  ( ! [X25] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))))) | s('type.list.list'('type.exhLang.pat'),X25) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X25,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X25,'type.exhLang.pat'))))) ) | $spl274),
  inference(cnf_transformation,[],[f4062_D])).
fof(f4062_D,plain,(
  ( ! [X25] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))))) | s('type.list.list'('type.exhLang.pat'),X25) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X25,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X25,'type.exhLang.pat'))))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f18462,plain,(
  ( ! [X26,X27,X25] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X26),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))))) | s('type.list.list'('type.exhLang.pat'),X25) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X25,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X25,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1036,f18189])).
fof(f18304,plain,(
  $false | ($spl73 | $spl127)),
  inference(subsumption_resolution,[],[f1699,f17651])).
fof(f17651,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl73),
  inference(trivial_inequality_removal,[],[f17650])).
fof(f17650,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl73),
  inference(superposition,[],[f345,f72])).
fof(f1699,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl127),
  inference(cnf_transformation,[],[f1699_D])).
fof(f1699_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f3727,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | $spl270),
  inference(cnf_transformation,[],[f3727_D])).
fof(f3727_D,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f18123,plain,(
  ( ! [X28,X26,X27] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X27),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X28))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X26))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X26))))))) | s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X26,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X26,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1036,f17941])).
fof(f17720,plain,(
  $false | ($spl82 | $spl84 | $spl93 | $spl118)),
  inference(subsumption_resolution,[],[f9150,f1115])).
fof(f9150,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84 | $spl118)),
  inference(superposition,[],[f9028,f1583])).
fof(f9028,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(forward_demodulation,[],[f486,f484])).
fof(f12783,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | $spl662),
  inference(cnf_transformation,[],[f12783_D])).
fof(f12783_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f14065,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl654)),
  inference(superposition,[],[f3865,f12379])).
fof(f16571,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl70 | $spl268)),
  inference(superposition,[],[f3865,f343])).
fof(f346,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl72),
  inference(cnf_transformation,[],[f346_D])).
fof(f346_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f17625,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl4 | $spl9 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f17624,f12254])).
fof(f17624,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl9 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f13626,f12430])).
fof(f13626,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl221 | $spl640)),
  inference(superposition,[],[f13617,f817])).
fof(f13617,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl221 | $spl640)),
  inference(forward_demodulation,[],[f13595,f73])).
fof(f13595,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl221 | $spl640)),
  inference(superposition,[],[f74,f13580])).
fof(f13580,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl221 | $spl640)),
  inference(subsumption_resolution,[],[f13533,f2741])).
fof(f2741,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl221),
  inference(cnf_transformation,[],[f2741_D])).
fof(f2741_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f13533,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl640),
  inference(superposition,[],[f12320,f72])).
fof(f11520,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl602),
  inference(cnf_transformation,[],[f11520_D])).
fof(f11520_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) <=> ~$spl602),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl602])])).
fof(f17620,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl82 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f13628,f12430])).
fof(f13628,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl221 | $spl640)),
  inference(superposition,[],[f13617,f1007])).
fof(f17586,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | $spl716),
  inference(cnf_transformation,[],[f17586_D])).
fof(f17586_D,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1)))) ) <=> ~$spl716),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl716])])).
fof(f17615,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl9 | $spl82 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f17614,f1006])).
fof(f17614,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))) ) | ($spl9 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f17613,f12468])).
fof(f17613,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl9 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f13630,f12430])).
fof(f13630,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl221 | $spl268 | $spl640)),
  inference(superposition,[],[f13617,f3865])).
fof(f17568,plain,(
  ( ! [X31] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl714),
  inference(cnf_transformation,[],[f17568_D])).
fof(f17568_D,plain,(
  ( ! [X31] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) <=> ~$spl714),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl714])])).
fof(f17596,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl4 | $spl9 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f17595,f12254])).
fof(f17595,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl9 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f14481,f12468])).
fof(f14481,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl221 | $spl640)),
  inference(superposition,[],[f13676,f817])).
fof(f13676,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl221 | $spl640)),
  inference(forward_demodulation,[],[f13675,f73])).
fof(f13675,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl221 | $spl640)),
  inference(forward_demodulation,[],[f13641,f74])).
fof(f13641,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl221 | $spl640)),
  inference(superposition,[],[f74,f13617])).
fof(f17591,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl82 | $spl221 | $spl640)),
  inference(forward_demodulation,[],[f14483,f12468])).
fof(f14483,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl82 | $spl221 | $spl640)),
  inference(superposition,[],[f13676,f1007])).
fof(f17585,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl9 | $spl82 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f17584,f1006])).
fof(f17584,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl9 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f17583,f12468])).
fof(f17583,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl9 | $spl221 | $spl268 | $spl640)),
  inference(forward_demodulation,[],[f14485,f12468])).
fof(f14485,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X7),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X8),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl221 | $spl268 | $spl640)),
  inference(superposition,[],[f13676,f3865])).
fof(f11505,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | $spl588),
  inference(cnf_transformation,[],[f11505_D])).
fof(f11505_D,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) <=> ~$spl588),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl588])])).
fof(f17567,plain,(
  ( ! [X31,X32] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X32),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X32),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl67 | $spl221 | $spl640 | $spl654)),
  inference(forward_demodulation,[],[f17228,f12468])).
fof(f17228,plain,(
  ( ! [X31,X32] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X31),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X32),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X32),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl67 | $spl221 | $spl640 | $spl654)),
  inference(superposition,[],[f13676,f14159])).
fof(f17566,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X33),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X33),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl9 | $spl67 | $spl221 | $spl640 | $spl654)),
  inference(forward_demodulation,[],[f17229,f12430])).
fof(f17229,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X33),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X33),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl67 | $spl221 | $spl640 | $spl654)),
  inference(superposition,[],[f13617,f14159])).
fof(f17558,plain,(
  $false | ($spl48 | $spl82 | $spl92 | $spl95 | $spl191)),
  inference(subsumption_resolution,[],[f17552,f2603])).
fof(f17552,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl48 | $spl82 | $spl92 | $spl95)),
  inference(trivial_inequality_removal,[],[f17548])).
fof(f17548,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl48 | $spl82 | $spl92 | $spl95)),
  inference(superposition,[],[f5511,f17464])).
fof(f17464,plain,(
  ( ! [X6,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl82 | $spl92)),
  inference(superposition,[],[f69,f1113])).
fof(f1113,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl92)),
  inference(forward_demodulation,[],[f774,f484])).
fof(f17555,plain,(
  $false | ($spl7 | $spl48 | $spl58 | $spl82 | $spl92)),
  inference(trivial_inequality_removal,[],[f17545])).
fof(f17545,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl7 | $spl48 | $spl58 | $spl82 | $spl92)),
  inference(superposition,[],[f4410,f17464])).
fof(f17507,plain,(
  $false | ($spl82 | $spl92 | $spl381)),
  inference(subsumption_resolution,[],[f7748,f1113])).
fof(f17503,plain,(
  $false | ($spl82 | $spl85 | $spl92 | $spl118)),
  inference(subsumption_resolution,[],[f10241,f1113])).
fof(f10241,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl85 | $spl118)),
  inference(superposition,[],[f9241,f1583])).
fof(f9241,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl85)),
  inference(forward_demodulation,[],[f485,f484])).
fof(f17436,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl712),
  inference(cnf_transformation,[],[f17436_D])).
fof(f17436_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl712),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl712])])).
fof(f7748,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl381),
  inference(cnf_transformation,[],[f7748_D])).
fof(f7748_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl381),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl381])])).
fof(f13368,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl72 | $spl82 | $spl85)),
  inference(superposition,[],[f9241,f13274])).
fof(f13274,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)))) ) | $spl72),
  inference(superposition,[],[f346,f72])).
fof(f11494,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl574),
  inference(cnf_transformation,[],[f11494_D])).
fof(f11494_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f14233,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl67 | $spl82 | $spl85 | $spl654)),
  inference(superposition,[],[f9241,f14119])).
fof(f17434,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | $spl710),
  inference(cnf_transformation,[],[f17434_D])).
fof(f17434_D,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f16759,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X21),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | ($spl72 | $spl82 | $spl85)),
  inference(superposition,[],[f9241,f13309])).
fof(f13309,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl72),
  inference(superposition,[],[f13301,f72])).
fof(f13301,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl72),
  inference(forward_demodulation,[],[f13280,f73])).
fof(f13280,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl72),
  inference(superposition,[],[f74,f346])).
fof(f11492,plain,(
  ( ! [X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | $spl572),
  inference(cnf_transformation,[],[f11492_D])).
fof(f11492_D,plain,(
  ( ! [X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) <=> ~$spl572),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl572])])).
fof(f17221,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X22),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X22),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | ($spl67 | $spl82 | $spl85 | $spl654)),
  inference(superposition,[],[f9241,f14159])).
fof(f17422,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))))) | s('type.list.list'('type.exhLang.pat'),X17) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X17,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X17,'type.exhLang.pat'))))) ) | $spl708),
  inference(cnf_transformation,[],[f17422_D])).
fof(f17422_D,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))))) | s('type.list.list'('type.exhLang.pat'),X17) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X17,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X17,'type.exhLang.pat'))))) ) <=> ~$spl708),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl708])])).
fof(f17329,plain,(
  ( ! [X19,X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))))) | s('type.list.list'('type.exhLang.pat'),X17) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X17,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X17,'type.exhLang.pat'))))) ) | ($spl72 | $spl82 | $spl93)),
  inference(superposition,[],[f13370,f15222])).
fof(f15222,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)))))))) ) | ($spl82 | $spl93)),
  inference(subsumption_resolution,[],[f15091,f997])).
fof(f15091,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),X9) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9))) | s('type.list.list'('type.exhLang.pat'),X9) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X9,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X9,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)))))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f11787,f14991])).
fof(f13370,plain,(
  ( ! [X12,X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),X10),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X12))) | s('type.list.list'('type.exhLang.pat'),X10) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X10)))) ) | $spl72),
  inference(superposition,[],[f69,f13274])).
fof(f17421,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) | $spl706),
  inference(cnf_transformation,[],[f17421_D])).
fof(f17421_D,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) <=> ~$spl706),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl706])])).
fof(f17327,plain,(
  ( ! [X12,X13,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X11))))))) | s('type.list.list'('type.exhLang.pat'),X11) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X11,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X11,'type.exhLang.pat'))))) ) | ($spl72 | $spl82 | $spl93)),
  inference(superposition,[],[f13370,f14991])).
fof(f17019,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl664),
  inference(forward_demodulation,[],[f16978,f73])).
fof(f16978,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl664),
  inference(superposition,[],[f13569,f72])).
fof(f16867,plain,(
  ( ! [X19,X17,X18] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X17))))))))) | s('type.list.list'('type.exhLang.pat'),X17) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X17,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X17,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f14951,f15222])).
fof(f14951,plain,(
  ( ! [X14,X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X14)))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f69,f14928])).
fof(f16537,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl701),
  inference(cnf_transformation,[],[f16537_D])).
fof(f16537_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl701),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl701])])).
fof(f16533,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl567),
  inference(superposition,[],[f10538,f72])).
fof(f16370,plain,(
  ( ! [X26,X24,X25] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X25),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X26))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X24))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X24))))))))) | s('type.list.list'('type.exhLang.pat'),X24) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X24,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X24,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1036,f15222])).
fof(f14596,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl694),
  inference(cnf_transformation,[],[f14596_D])).
fof(f14596_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl694),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl694])])).
fof(f14597,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl697),
  inference(cnf_transformation,[],[f14597_D])).
fof(f14597_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl697),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl697])])).
fof(f15283,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl635),
  inference(forward_demodulation,[],[f15259,f73])).
fof(f15259,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl635),
  inference(superposition,[],[f12145,f72])).
fof(f15151,plain,(
  ( ! [X26,X27,X25] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X26),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))) | s('type.list.list'('type.exhLang.pat'),X25) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X25,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X25,'type.exhLang.pat'))))) ) | ($spl82 | $spl93)),
  inference(superposition,[],[f1036,f14991])).
fof(f14651,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl191 | $spl636)),
  inference(subsumption_resolution,[],[f14650,f182])).
fof(f14650,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl191 | $spl636)),
  inference(forward_demodulation,[],[f14649,f12430])).
fof(f14649,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl191 | $spl636)),
  inference(subsumption_resolution,[],[f14618,f2603])).
fof(f14618,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl82 | $spl636)),
  inference(superposition,[],[f1007,f12148])).
fof(f14648,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl636)),
  inference(subsumption_resolution,[],[f14647,f182])).
fof(f14647,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl636)),
  inference(forward_demodulation,[],[f14617,f12430])).
fof(f14617,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl636)),
  inference(superposition,[],[f1006,f12148])).
fof(f14646,plain,(
  $false | ($spl67 | $spl591 | $spl636 | $spl654)),
  inference(subsumption_resolution,[],[f14614,f11506])).
fof(f14614,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl67 | $spl636 | $spl654)),
  inference(superposition,[],[f14149,f12148])).
fof(f14600,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))))) | $spl698),
  inference(cnf_transformation,[],[f14600_D])).
fof(f14600_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))))) <=> ~$spl698),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl698])])).
fof(f14568,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl634)),
  inference(superposition,[],[f3865,f12146])).
fof(f14598,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl696),
  inference(cnf_transformation,[],[f14598_D])).
fof(f14598_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl696])])).
fof(f14594,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl634),
  inference(forward_demodulation,[],[f14566,f73])).
fof(f14566,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl634),
  inference(superposition,[],[f12146,f72])).
fof(f14090,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl654),
  inference(forward_demodulation,[],[f14047,f73])).
fof(f14047,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl654),
  inference(superposition,[],[f12379,f72])).
fof(f14023,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl629),
  inference(superposition,[],[f11767,f72])).
fof(f14007,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl688),
  inference(cnf_transformation,[],[f14007_D])).
fof(f14007_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f14022,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl72 | $spl629)),
  inference(superposition,[],[f11767,f13274])).
fof(f14005,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | $spl686),
  inference(cnf_transformation,[],[f14005_D])).
fof(f14005_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))))) <=> ~$spl686),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl686])])).
fof(f14021,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl629)),
  inference(superposition,[],[f11767,f4034])).
fof(f14026,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl629)),
  inference(forward_demodulation,[],[f14020,f74])).
fof(f14020,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl629)),
  inference(superposition,[],[f11767,f3865])).
fof(f14019,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl629)),
  inference(superposition,[],[f11767,f3708])).
fof(f13999,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl680),
  inference(cnf_transformation,[],[f13999_D])).
fof(f13999_D,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) <=> ~$spl680),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl680])])).
fof(f14018,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl629)),
  inference(superposition,[],[f11767,f1007])).
fof(f13998,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | $spl678),
  inference(cnf_transformation,[],[f13998_D])).
fof(f13998_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) <=> ~$spl678),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl678])])).
fof(f14017,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl629)),
  inference(superposition,[],[f11767,f997])).
fof(f14016,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl629),
  inference(superposition,[],[f11767,f817])).
fof(f13994,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl675),
  inference(cnf_transformation,[],[f13994_D])).
fof(f13994_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl675),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl675])])).
fof(f14025,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl629),
  inference(forward_demodulation,[],[f14015,f73])).
fof(f14015,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl629),
  inference(superposition,[],[f11767,f72])).
fof(f11507,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl590),
  inference(cnf_transformation,[],[f11507_D])).
fof(f11507_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl590),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl590])])).
fof(f13965,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl628),
  inference(superposition,[],[f72,f11768])).
fof(f13964,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl72 | $spl628)),
  inference(superposition,[],[f13274,f11768])).
fof(f13963,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl628)),
  inference(superposition,[],[f4034,f11768])).
fof(f14010,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl628)),
  inference(forward_demodulation,[],[f13962,f74])).
fof(f13962,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl628)),
  inference(superposition,[],[f3865,f11768])).
fof(f13961,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl628)),
  inference(superposition,[],[f3708,f11768])).
fof(f13960,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl628)),
  inference(superposition,[],[f1007,f11768])).
fof(f13959,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl628)),
  inference(superposition,[],[f997,f11768])).
fof(f13958,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl628),
  inference(superposition,[],[f817,f11768])).
fof(f13956,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl628),
  inference(superposition,[],[f11768,f72])).
fof(f13955,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl72 | $spl628)),
  inference(superposition,[],[f11768,f13274])).
fof(f13954,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | ($spl272 | $spl628)),
  inference(superposition,[],[f11768,f4034])).
fof(f14002,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))))))))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))) ) | ($spl268 | $spl628)),
  inference(forward_demodulation,[],[f13953,f74])).
fof(f13953,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))))) ) | ($spl268 | $spl628)),
  inference(superposition,[],[f11768,f3865])).
fof(f13952,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl268 | $spl628)),
  inference(superposition,[],[f11768,f3708])).
fof(f13951,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl82 | $spl628)),
  inference(superposition,[],[f11768,f1007])).
fof(f13950,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl628)),
  inference(superposition,[],[f11768,f997])).
fof(f13949,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | $spl628),
  inference(superposition,[],[f11768,f817])).
fof(f13995,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl674),
  inference(cnf_transformation,[],[f13995_D])).
fof(f13995_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f13991,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl628),
  inference(forward_demodulation,[],[f13948,f73])).
fof(f13948,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl628),
  inference(superposition,[],[f11768,f72])).
fof(f13858,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl191 | $spl670)),
  inference(subsumption_resolution,[],[f13857,f182])).
fof(f13857,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl191 | $spl670)),
  inference(forward_demodulation,[],[f13856,f12430])).
fof(f13856,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl191 | $spl670)),
  inference(subsumption_resolution,[],[f13828,f2603])).
fof(f13828,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl82 | $spl670)),
  inference(superposition,[],[f1007,f13817])).
fof(f13855,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl670)),
  inference(subsumption_resolution,[],[f13854,f182])).
fof(f13854,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl670)),
  inference(forward_demodulation,[],[f13827,f12430])).
fof(f13827,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl670)),
  inference(superposition,[],[f1006,f13817])).
fof(f13817,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl670),
  inference(cnf_transformation,[],[f13817_D])).
fof(f13817_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl670),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl670])])).
fof(f13813,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl40),
  inference(forward_demodulation,[],[f13769,f73])).
fof(f13769,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl40),
  inference(superposition,[],[f185,f72])).
fof(f13543,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl640)),
  inference(superposition,[],[f3865,f12320])).
fof(f13571,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl666),
  inference(cnf_transformation,[],[f13571_D])).
fof(f13571_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f13567,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl640),
  inference(forward_demodulation,[],[f13525,f73])).
fof(f13525,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl640),
  inference(superposition,[],[f12320,f72])).
fof(f13271,plain,(
  $false | ($spl37 | $spl126 | $spl610)),
  inference(subsumption_resolution,[],[f13270,f179])).
fof(f13270,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl126 | $spl610)),
  inference(forward_demodulation,[],[f1700,f11637])).
fof(f13269,plain,(
  $false | ($spl37 | $spl73 | $spl610)),
  inference(subsumption_resolution,[],[f13268,f345])).
fof(f13268,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl37 | $spl610)),
  inference(subsumption_resolution,[],[f13221,f179])).
fof(f13221,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl610),
  inference(superposition,[],[f72,f11637])).
fof(f13257,plain,(
  $false | ($spl37 | $spl73 | $spl610)),
  inference(subsumption_resolution,[],[f13256,f345])).
fof(f13256,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl37 | $spl610)),
  inference(subsumption_resolution,[],[f13213,f179])).
fof(f13213,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl610),
  inference(superposition,[],[f11637,f72])).
fof(f13073,plain,(
  $false | ($spl9 | $spl39 | $spl220)),
  inference(subsumption_resolution,[],[f13072,f182])).
fof(f13072,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl220)),
  inference(forward_demodulation,[],[f13071,f12430])).
fof(f13071,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl39 | $spl220)),
  inference(subsumption_resolution,[],[f13018,f182])).
fof(f13018,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | $spl220),
  inference(superposition,[],[f12966,f72])).
fof(f12966,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | $spl220),
  inference(superposition,[],[f74,f2742])).
fof(f13070,plain,(
  $false | ($spl4 | $spl9 | $spl39 | $spl220)),
  inference(subsumption_resolution,[],[f13069,f182])).
fof(f13069,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl4 | $spl9 | $spl220)),
  inference(forward_demodulation,[],[f13017,f12430])).
fof(f13017,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl4 | $spl220)),
  inference(superposition,[],[f12966,f92])).
fof(f13068,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl220 | $spl272)),
  inference(subsumption_resolution,[],[f13067,f182])).
fof(f13067,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl82 | $spl220 | $spl272)),
  inference(forward_demodulation,[],[f13066,f484])).
fof(f13066,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl82 | $spl220 | $spl272)),
  inference(forward_demodulation,[],[f13065,f484])).
fof(f13065,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl39 | $spl220 | $spl272)),
  inference(forward_demodulation,[],[f13064,f12430])).
fof(f13064,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl39 | $spl220 | $spl272)),
  inference(subsumption_resolution,[],[f13063,f182])).
fof(f13063,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl220 | $spl272)),
  inference(forward_demodulation,[],[f13016,f12430])).
fof(f13016,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl220 | $spl272)),
  inference(superposition,[],[f12966,f4034])).
fof(f13058,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl220 | $spl268)),
  inference(subsumption_resolution,[],[f13057,f182])).
fof(f13057,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl82 | $spl220 | $spl268)),
  inference(forward_demodulation,[],[f13056,f484])).
fof(f13056,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl220 | $spl268)),
  inference(forward_demodulation,[],[f13055,f12430])).
fof(f13055,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl39 | $spl220 | $spl268)),
  inference(subsumption_resolution,[],[f13054,f182])).
fof(f13054,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl220 | $spl268)),
  inference(forward_demodulation,[],[f13014,f12430])).
fof(f13014,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl220 | $spl268)),
  inference(superposition,[],[f12966,f3708])).
fof(f13051,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl220)),
  inference(subsumption_resolution,[],[f13050,f182])).
fof(f13050,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl220)),
  inference(forward_demodulation,[],[f13047,f12430])).
fof(f13047,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl220)),
  inference(duplicate_literal_removal,[],[f13012])).
fof(f13012,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl220)),
  inference(superposition,[],[f12966,f997])).
fof(f12320,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl640),
  inference(cnf_transformation,[],[f12320_D])).
fof(f12320_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f13003,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl220 | $spl307)),
  inference(forward_demodulation,[],[f12982,f2742])).
fof(f12982,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl220 | $spl307)),
  inference(superposition,[],[f8262,f2742])).
fof(f13002,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl107 | $spl220)),
  inference(forward_demodulation,[],[f12981,f2742])).
fof(f12981,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl107 | $spl220)),
  inference(superposition,[],[f7814,f2742])).
fof(f13001,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl220 | $spl311)),
  inference(forward_demodulation,[],[f12980,f2742])).
fof(f12980,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl220 | $spl311)),
  inference(superposition,[],[f6432,f2742])).
fof(f13000,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl220 | $spl315)),
  inference(forward_demodulation,[],[f12979,f2742])).
fof(f12979,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl220 | $spl315)),
  inference(superposition,[],[f5514,f2742])).
fof(f12997,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl220 | $spl268)),
  inference(forward_demodulation,[],[f12977,f2742])).
fof(f12977,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl220 | $spl268)),
  inference(superposition,[],[f3865,f2742])).
fof(f12995,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl153 | $spl220)),
  inference(forward_demodulation,[],[f12975,f2742])).
fof(f12975,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl153 | $spl220)),
  inference(superposition,[],[f2043,f2742])).
fof(f12994,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl133 | $spl220)),
  inference(forward_demodulation,[],[f12974,f2742])).
fof(f12974,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl133 | $spl220)),
  inference(superposition,[],[f1913,f2742])).
fof(f2755,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | $spl228),
  inference(cnf_transformation,[],[f2755_D])).
fof(f2755_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f12992,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl82 | $spl220)),
  inference(forward_demodulation,[],[f12971,f2742])).
fof(f12971,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl220)),
  inference(superposition,[],[f1007,f2742])).
fof(f12991,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | $spl220),
  inference(forward_demodulation,[],[f12970,f2742])).
fof(f12970,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | $spl220),
  inference(superposition,[],[f817,f2742])).
fof(f12990,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl73 | $spl220)),
  inference(forward_demodulation,[],[f12969,f2742])).
fof(f12969,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl73 | $spl220)),
  inference(superposition,[],[f777,f2742])).
fof(f777,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl73),
  inference(superposition,[],[f345,f72])).
fof(f12944,plain,(
  $false | ($spl9 | $spl39 | $spl66 | $spl82)),
  inference(subsumption_resolution,[],[f12943,f182])).
fof(f12943,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl66 | $spl82)),
  inference(forward_demodulation,[],[f12942,f12430])).
fof(f12942,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl39 | $spl66 | $spl82)),
  inference(subsumption_resolution,[],[f12889,f182])).
fof(f12889,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl66 | $spl82)),
  inference(superposition,[],[f12790,f72])).
fof(f12790,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl66 | $spl82)),
  inference(superposition,[],[f74,f12350])).
fof(f12350,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82)),
  inference(superposition,[],[f1006,f338])).
fof(f12941,plain,(
  $false | ($spl4 | $spl9 | $spl39 | $spl66 | $spl82)),
  inference(subsumption_resolution,[],[f12940,f182])).
fof(f12940,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl4 | $spl9 | $spl66 | $spl82)),
  inference(forward_demodulation,[],[f12888,f12430])).
fof(f12888,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl4 | $spl66 | $spl82)),
  inference(superposition,[],[f12790,f92])).
fof(f12939,plain,(
  $false | ($spl9 | $spl39 | $spl66 | $spl82 | $spl272)),
  inference(subsumption_resolution,[],[f12938,f182])).
fof(f12938,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl272)),
  inference(forward_demodulation,[],[f12937,f484])).
fof(f12937,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl272)),
  inference(forward_demodulation,[],[f12936,f484])).
fof(f12936,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl272)),
  inference(forward_demodulation,[],[f12935,f12430])).
fof(f12935,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl272)),
  inference(subsumption_resolution,[],[f12934,f182])).
fof(f12934,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl66 | $spl82 | $spl272)),
  inference(forward_demodulation,[],[f12887,f12430])).
fof(f12887,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl66 | $spl82 | $spl272)),
  inference(superposition,[],[f12790,f4034])).
fof(f12929,plain,(
  $false | ($spl9 | $spl39 | $spl66 | $spl82 | $spl268)),
  inference(subsumption_resolution,[],[f12928,f182])).
fof(f12928,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f12927,f484])).
fof(f12927,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f12926,f12430])).
fof(f12926,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl39 | $spl66 | $spl82 | $spl268)),
  inference(subsumption_resolution,[],[f12925,f182])).
fof(f12925,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl66 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f12885,f12430])).
fof(f12885,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl66 | $spl82 | $spl268)),
  inference(superposition,[],[f12790,f3708])).
fof(f12922,plain,(
  $false | ($spl9 | $spl39 | $spl66 | $spl82)),
  inference(subsumption_resolution,[],[f12921,f182])).
fof(f12921,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl66 | $spl82)),
  inference(forward_demodulation,[],[f12918,f12430])).
fof(f12918,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl66 | $spl82)),
  inference(duplicate_literal_removal,[],[f12883])).
fof(f12883,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl66 | $spl82)),
  inference(superposition,[],[f12790,f997])).
fof(f12827,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl307)),
  inference(forward_demodulation,[],[f12806,f12350])).
fof(f12806,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl307)),
  inference(superposition,[],[f8262,f12350])).
fof(f12826,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl66 | $spl82 | $spl107)),
  inference(forward_demodulation,[],[f12805,f12350])).
fof(f12805,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl107)),
  inference(superposition,[],[f7814,f12350])).
fof(f12825,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl311)),
  inference(forward_demodulation,[],[f12804,f12350])).
fof(f12804,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl311)),
  inference(superposition,[],[f6432,f12350])).
fof(f12824,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl315)),
  inference(forward_demodulation,[],[f12803,f12350])).
fof(f12803,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl315)),
  inference(superposition,[],[f5514,f12350])).
fof(f12821,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f12801,f12350])).
fof(f12801,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl66 | $spl82 | $spl268)),
  inference(superposition,[],[f3865,f12350])).
fof(f12819,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl153)),
  inference(forward_demodulation,[],[f12799,f12350])).
fof(f12799,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl153)),
  inference(superposition,[],[f2043,f12350])).
fof(f12818,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl133)),
  inference(forward_demodulation,[],[f12798,f12350])).
fof(f12798,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl82 | $spl133)),
  inference(superposition,[],[f1913,f12350])).
fof(f12816,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl66 | $spl82)),
  inference(forward_demodulation,[],[f12795,f12350])).
fof(f12795,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl66 | $spl82)),
  inference(superposition,[],[f1007,f12350])).
fof(f12815,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl66 | $spl82)),
  inference(forward_demodulation,[],[f12794,f12350])).
fof(f12794,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl66 | $spl82)),
  inference(superposition,[],[f817,f12350])).
fof(f12814,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl82)),
  inference(forward_demodulation,[],[f12793,f12350])).
fof(f12793,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl66 | $spl73 | $spl82)),
  inference(superposition,[],[f777,f12350])).
fof(f12379,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl654),
  inference(cnf_transformation,[],[f12379_D])).
fof(f12379_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl654),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl654])])).
fof(f12781,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | ($spl66 | $spl268)),
  inference(forward_demodulation,[],[f12362,f338])).
fof(f12362,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl268)),
  inference(superposition,[],[f3708,f338])).
fof(f12780,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | $spl660),
  inference(cnf_transformation,[],[f12780_D])).
fof(f12780_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) <=> ~$spl660),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl660])])).
fof(f12778,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | ($spl66 | $spl272)),
  inference(forward_demodulation,[],[f12364,f338])).
fof(f12364,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl272)),
  inference(superposition,[],[f4034,f338])).
fof(f12761,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl218)),
  inference(subsumption_resolution,[],[f12760,f182])).
fof(f12760,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl82 | $spl218)),
  inference(forward_demodulation,[],[f12759,f12430])).
fof(f12759,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl39 | $spl82 | $spl218)),
  inference(subsumption_resolution,[],[f12706,f182])).
fof(f12706,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl82 | $spl218)),
  inference(superposition,[],[f12294,f72])).
fof(f12294,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl82 | $spl218)),
  inference(superposition,[],[f74,f2718])).
fof(f2718,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl218)),
  inference(superposition,[],[f1006,f2712])).
fof(f12758,plain,(
  $false | ($spl4 | $spl9 | $spl39 | $spl82 | $spl218)),
  inference(subsumption_resolution,[],[f12757,f182])).
fof(f12757,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl4 | $spl9 | $spl82 | $spl218)),
  inference(forward_demodulation,[],[f12705,f12430])).
fof(f12705,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl4 | $spl82 | $spl218)),
  inference(superposition,[],[f12294,f92])).
fof(f12756,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl218 | $spl272)),
  inference(subsumption_resolution,[],[f12755,f182])).
fof(f12755,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl272)),
  inference(forward_demodulation,[],[f12754,f484])).
fof(f12754,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl272)),
  inference(forward_demodulation,[],[f12753,f484])).
fof(f12753,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl272)),
  inference(forward_demodulation,[],[f12752,f12430])).
fof(f12752,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl272)),
  inference(subsumption_resolution,[],[f12751,f182])).
fof(f12751,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl9 | $spl82 | $spl218 | $spl272)),
  inference(forward_demodulation,[],[f12704,f12430])).
fof(f12704,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl82 | $spl218 | $spl272)),
  inference(superposition,[],[f12294,f4034])).
fof(f12746,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl218 | $spl268)),
  inference(subsumption_resolution,[],[f12745,f182])).
fof(f12745,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl268)),
  inference(forward_demodulation,[],[f12744,f484])).
fof(f12744,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl268)),
  inference(forward_demodulation,[],[f12743,f12430])).
fof(f12743,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl39 | $spl82 | $spl218 | $spl268)),
  inference(subsumption_resolution,[],[f12742,f182])).
fof(f12742,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl9 | $spl82 | $spl218 | $spl268)),
  inference(forward_demodulation,[],[f12702,f12430])).
fof(f12702,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl82 | $spl218 | $spl268)),
  inference(superposition,[],[f12294,f3708])).
fof(f12739,plain,(
  $false | ($spl9 | $spl39 | $spl82 | $spl218)),
  inference(subsumption_resolution,[],[f12738,f182])).
fof(f12738,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | ($spl9 | $spl82 | $spl218)),
  inference(forward_demodulation,[],[f12735,f12430])).
fof(f12735,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl218)),
  inference(duplicate_literal_removal,[],[f12700])).
fof(f12700,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl82 | $spl218)),
  inference(superposition,[],[f12294,f997])).
fof(f12146,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl634),
  inference(cnf_transformation,[],[f12146_D])).
fof(f12146_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl634),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl634])])).
fof(f12148,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl636),
  inference(cnf_transformation,[],[f12148_D])).
fof(f12148_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f12647,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl626),
  inference(forward_demodulation,[],[f12607,f73])).
fof(f12607,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl626),
  inference(superposition,[],[f11703,f72])).
fof(f12488,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl659),
  inference(cnf_transformation,[],[f12488_D])).
fof(f12488_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl659),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl659])])).
fof(f12486,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl9),
  inference(forward_demodulation,[],[f12476,f73])).
fof(f12476,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl9),
  inference(superposition,[],[f12441,f72])).
fof(f12439,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl657),
  inference(cnf_transformation,[],[f12439_D])).
fof(f12439_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl657),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl657])])).
fof(f12437,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl9),
  inference(forward_demodulation,[],[f12421,f73])).
fof(f12421,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl9),
  inference(superposition,[],[f96,f72])).
fof(f12391,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl307)),
  inference(forward_demodulation,[],[f12368,f338])).
fof(f12368,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl307)),
  inference(superposition,[],[f8262,f338])).
fof(f12390,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl66 | $spl107)),
  inference(forward_demodulation,[],[f12367,f338])).
fof(f12367,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl107)),
  inference(superposition,[],[f7814,f338])).
fof(f12389,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl311)),
  inference(forward_demodulation,[],[f12366,f338])).
fof(f12366,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl311)),
  inference(superposition,[],[f6432,f338])).
fof(f12388,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl315)),
  inference(forward_demodulation,[],[f12365,f338])).
fof(f12365,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl315)),
  inference(superposition,[],[f5514,f338])).
fof(f12385,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl66 | $spl268)),
  inference(forward_demodulation,[],[f12363,f338])).
fof(f12363,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl66 | $spl268)),
  inference(superposition,[],[f3865,f338])).
fof(f12383,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl153)),
  inference(forward_demodulation,[],[f12361,f338])).
fof(f12361,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl153)),
  inference(superposition,[],[f2043,f338])).
fof(f12382,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl133)),
  inference(forward_demodulation,[],[f12360,f338])).
fof(f12360,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl133)),
  inference(superposition,[],[f1913,f338])).
fof(f12381,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl66 | $spl82)),
  inference(forward_demodulation,[],[f12357,f338])).
fof(f12357,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl66 | $spl82)),
  inference(superposition,[],[f1007,f338])).
fof(f12380,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl66),
  inference(forward_demodulation,[],[f12356,f338])).
fof(f12356,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl66),
  inference(superposition,[],[f817,f338])).
fof(f12377,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl66 | $spl73)),
  inference(forward_demodulation,[],[f12355,f338])).
fof(f12355,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl73)),
  inference(superposition,[],[f777,f338])).
fof(f12341,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl307)),
  inference(forward_demodulation,[],[f12310,f2718])).
fof(f12310,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl307)),
  inference(superposition,[],[f8262,f2718])).
fof(f12338,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl82 | $spl107 | $spl218)),
  inference(forward_demodulation,[],[f12309,f2718])).
fof(f12309,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl107 | $spl218)),
  inference(superposition,[],[f7814,f2718])).
fof(f12335,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl311)),
  inference(forward_demodulation,[],[f12308,f2718])).
fof(f12308,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl311)),
  inference(superposition,[],[f6432,f2718])).
fof(f12332,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl315)),
  inference(forward_demodulation,[],[f12307,f2718])).
fof(f12307,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl218 | $spl315)),
  inference(superposition,[],[f5514,f2718])).
fof(f12328,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))))) ) | ($spl82 | $spl218 | $spl268)),
  inference(forward_demodulation,[],[f12305,f2718])).
fof(f12305,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl218 | $spl268)),
  inference(superposition,[],[f3865,f2718])).
fof(f12326,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl153 | $spl218)),
  inference(forward_demodulation,[],[f12303,f2718])).
fof(f12303,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl153 | $spl218)),
  inference(superposition,[],[f2043,f2718])).
fof(f12325,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl82 | $spl133 | $spl218)),
  inference(forward_demodulation,[],[f12302,f2718])).
fof(f12302,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl133 | $spl218)),
  inference(superposition,[],[f1913,f2718])).
fof(f12323,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl82 | $spl218)),
  inference(forward_demodulation,[],[f12299,f2718])).
fof(f12299,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl218)),
  inference(superposition,[],[f1007,f2718])).
fof(f12321,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl82 | $spl218)),
  inference(forward_demodulation,[],[f12298,f2718])).
fof(f12298,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl218)),
  inference(superposition,[],[f817,f2718])).
fof(f12318,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl73 | $spl82 | $spl218)),
  inference(forward_demodulation,[],[f12297,f2718])).
fof(f12297,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl73 | $spl82 | $spl218)),
  inference(superposition,[],[f777,f2718])).
fof(f12253,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl4 | $spl268)),
  inference(superposition,[],[f3865,f92])).
fof(f12245,plain,(
  $false | ($spl37 | $spl596)),
  inference(subsumption_resolution,[],[f12221,f179])).
fof(f12221,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl596),
  inference(superposition,[],[f73,f11516])).
fof(f12243,plain,(
  $false | ($spl37 | $spl596)),
  inference(subsumption_resolution,[],[f12217,f179])).
fof(f12217,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl596),
  inference(superposition,[],[f11516,f73])).
fof(f12209,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl638),
  inference(cnf_transformation,[],[f12209_D])).
fof(f12209_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f2688,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl70),
  inference(superposition,[],[f72,f343])).
fof(f2681,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl70),
  inference(superposition,[],[f343,f72])).
fof(f12207,plain,(
  $false | ($spl9 | $spl36 | $spl39 | $spl82)),
  inference(subsumption_resolution,[],[f12206,f11599])).
fof(f11599,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82)),
  inference(superposition,[],[f1006,f180])).
fof(f12206,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl9 | $spl36 | $spl39 | $spl82)),
  inference(forward_demodulation,[],[f96,f11700])).
fof(f11700,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl39 | $spl82)),
  inference(forward_demodulation,[],[f11699,f11599])).
fof(f11699,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl39 | $spl82)),
  inference(subsumption_resolution,[],[f11669,f182])).
fof(f11669,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82)),
  inference(superposition,[],[f11599,f72])).
fof(f12144,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl36 | $spl39 | $spl82)),
  inference(forward_demodulation,[],[f12096,f73])).
fof(f12096,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl36 | $spl39 | $spl82)),
  inference(superposition,[],[f11700,f72])).
fof(f11987,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl632),
  inference(cnf_transformation,[],[f11987_D])).
fof(f11987_D,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) <=> ~$spl632),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl632])])).
fof(f11986,plain,(
  ( ! [X17,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) | $spl36),
  inference(forward_demodulation,[],[f11985,f11632])).
fof(f11632,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl36),
  inference(forward_demodulation,[],[f11603,f73])).
fof(f11603,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl36),
  inference(superposition,[],[f74,f180])).
fof(f11985,plain,(
  ( ! [X17,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl36),
  inference(forward_demodulation,[],[f11957,f69])).
fof(f11957,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))),'type.exhLang.pat'))))) ) | $spl36),
  inference(superposition,[],[f817,f11632])).
fof(f11910,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | $spl630),
  inference(cnf_transformation,[],[f11910_D])).
fof(f11910_D,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) <=> ~$spl630),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl630])])).
fof(f11909,plain,(
  ( ! [X17,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17)))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f11908,f11674])).
fof(f11674,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f74,f11599])).
fof(f11908,plain,(
  ( ! [X17,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f11884,f69])).
fof(f11884,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X18),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X17))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))),'type.exhLang.pat'))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f817,f11674])).
fof(f11768,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl628),
  inference(cnf_transformation,[],[f11768_D])).
fof(f11768_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f11784,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl307)),
  inference(forward_demodulation,[],[f11758,f11597])).
fof(f11597,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68)),
  inference(superposition,[],[f5320,f180])).
fof(f5320,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl66 | $spl68)),
  inference(forward_demodulation,[],[f5295,f73])).
fof(f5295,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl66 | $spl68)),
  inference(superposition,[],[f74,f751])).
fof(f751,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl66 | $spl68)),
  inference(forward_demodulation,[],[f338,f341])).
fof(f11758,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl307)),
  inference(superposition,[],[f8262,f11597])).
fof(f11783,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | ($spl36 | $spl66 | $spl68 | $spl107)),
  inference(forward_demodulation,[],[f11757,f11597])).
fof(f11757,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl107)),
  inference(superposition,[],[f7814,f11597])).
fof(f11782,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl311)),
  inference(forward_demodulation,[],[f11756,f11597])).
fof(f11756,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl311)),
  inference(superposition,[],[f6432,f11597])).
fof(f11780,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl66 | $spl68)),
  inference(forward_demodulation,[],[f11754,f11597])).
fof(f11754,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68)),
  inference(superposition,[],[f5584,f11597])).
fof(f5584,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl66 | $spl68)),
  inference(superposition,[],[f5320,f72])).
fof(f11779,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl315)),
  inference(forward_demodulation,[],[f11753,f11597])).
fof(f11753,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl315)),
  inference(superposition,[],[f5514,f11597])).
fof(f11504,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | $spl586),
  inference(cnf_transformation,[],[f11504_D])).
fof(f11504_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f11776,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl36 | $spl66 | $spl68 | $spl268)),
  inference(forward_demodulation,[],[f11751,f11597])).
fof(f11751,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68 | $spl268)),
  inference(superposition,[],[f3865,f11597])).
fof(f11648,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl617),
  inference(cnf_transformation,[],[f11648_D])).
fof(f11648_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl617),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl617])])).
fof(f11774,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl219)),
  inference(forward_demodulation,[],[f11749,f11597])).
fof(f11749,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl219)),
  inference(superposition,[],[f2848,f11597])).
fof(f2848,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl68 | $spl219)),
  inference(superposition,[],[f2846,f72])).
fof(f2846,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl68 | $spl219)),
  inference(forward_demodulation,[],[f2711,f341])).
fof(f11773,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl153)),
  inference(forward_demodulation,[],[f11748,f11597])).
fof(f11748,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl153)),
  inference(superposition,[],[f2043,f11597])).
fof(f11772,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl133)),
  inference(forward_demodulation,[],[f11747,f11597])).
fof(f11747,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl133)),
  inference(superposition,[],[f1913,f11597])).
fof(f11770,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl66 | $spl68 | $spl82)),
  inference(forward_demodulation,[],[f11744,f11597])).
fof(f11744,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68 | $spl82)),
  inference(superposition,[],[f1007,f11597])).
fof(f11519,plain,(
  ( ! [X2,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl600),
  inference(cnf_transformation,[],[f11519_D])).
fof(f11519_D,plain,(
  ( ! [X2,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) <=> ~$spl600),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl600])])).
fof(f11769,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl36 | $spl66 | $spl68)),
  inference(forward_demodulation,[],[f11743,f11597])).
fof(f11743,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68)),
  inference(superposition,[],[f817,f11597])).
fof(f11766,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl66 | $spl68 | $spl73)),
  inference(forward_demodulation,[],[f11742,f11597])).
fof(f11742,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl66 | $spl68 | $spl73)),
  inference(superposition,[],[f777,f11597])).
fof(f11703,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl626),
  inference(cnf_transformation,[],[f11703_D])).
fof(f11703_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl626),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl626])])).
fof(f11719,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82 | $spl307)),
  inference(forward_demodulation,[],[f11693,f11599])).
fof(f11693,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl307)),
  inference(superposition,[],[f8262,f11599])).
fof(f11718,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | ($spl36 | $spl82 | $spl107)),
  inference(forward_demodulation,[],[f11692,f11599])).
fof(f11692,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl107)),
  inference(superposition,[],[f7814,f11599])).
fof(f11717,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82 | $spl311)),
  inference(forward_demodulation,[],[f11691,f11599])).
fof(f11691,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl311)),
  inference(superposition,[],[f6432,f11599])).
fof(f11715,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl66 | $spl68 | $spl82)),
  inference(forward_demodulation,[],[f11689,f11599])).
fof(f11689,plain,(
  ( ! [X14] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68 | $spl82)),
  inference(superposition,[],[f5584,f11599])).
fof(f11714,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82 | $spl315)),
  inference(forward_demodulation,[],[f11688,f11599])).
fof(f11688,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl315)),
  inference(superposition,[],[f5514,f11599])).
fof(f11711,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl36 | $spl82 | $spl268)),
  inference(forward_demodulation,[],[f11686,f11599])).
fof(f11686,plain,(
  ( ! [X13] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl82 | $spl268)),
  inference(superposition,[],[f3865,f11599])).
fof(f11709,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl68 | $spl82 | $spl219)),
  inference(forward_demodulation,[],[f11684,f11599])).
fof(f11684,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl68 | $spl82 | $spl219)),
  inference(superposition,[],[f2848,f11599])).
fof(f11708,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82 | $spl153)),
  inference(forward_demodulation,[],[f11683,f11599])).
fof(f11683,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl153)),
  inference(superposition,[],[f2043,f11599])).
fof(f11707,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl82 | $spl133)),
  inference(forward_demodulation,[],[f11682,f11599])).
fof(f11682,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl82 | $spl133)),
  inference(superposition,[],[f1913,f11599])).
fof(f11705,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f11679,f11599])).
fof(f11679,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f1007,f11599])).
fof(f11704,plain,(
  ( ! [X8,X7] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f11678,f11599])).
fof(f11678,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f817,f11599])).
fof(f11701,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl73 | $spl82)),
  inference(forward_demodulation,[],[f11677,f11599])).
fof(f11677,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | ($spl36 | $spl73 | $spl82)),
  inference(superposition,[],[f777,f11599])).
fof(f11637,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl610),
  inference(cnf_transformation,[],[f11637_D])).
fof(f11637_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl610),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl610])])).
fof(f11662,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl307)),
  inference(forward_demodulation,[],[f11622,f180])).
fof(f11622,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl307)),
  inference(superposition,[],[f8262,f180])).
fof(f11659,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | ($spl36 | $spl107)),
  inference(forward_demodulation,[],[f11621,f180])).
fof(f11621,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl107)),
  inference(superposition,[],[f7814,f180])).
fof(f11656,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl311)),
  inference(forward_demodulation,[],[f11620,f180])).
fof(f11620,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl311)),
  inference(superposition,[],[f6432,f180])).
fof(f11655,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl66 | $spl68)),
  inference(forward_demodulation,[],[f11618,f180])).
fof(f11618,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X16),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl36 | $spl66 | $spl68)),
  inference(superposition,[],[f5584,f180])).
fof(f11652,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl315)),
  inference(forward_demodulation,[],[f11617,f180])).
fof(f11617,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl315)),
  inference(superposition,[],[f5514,f180])).
fof(f11509,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | $spl592),
  inference(cnf_transformation,[],[f11509_D])).
fof(f11509_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) <=> ~$spl592),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl592])])).
fof(f11651,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl36 | $spl272)),
  inference(forward_demodulation,[],[f11616,f180])).
fof(f11616,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl272)),
  inference(superposition,[],[f4034,f180])).
fof(f11650,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl36 | $spl268)),
  inference(forward_demodulation,[],[f11615,f180])).
fof(f11615,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK1))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl36 | $spl268)),
  inference(superposition,[],[f3865,f180])).
fof(f11649,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl36 | $spl268)),
  inference(forward_demodulation,[],[f11614,f180])).
fof(f11614,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl268)),
  inference(superposition,[],[f3708,f180])).
fof(f11646,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl68 | $spl219)),
  inference(forward_demodulation,[],[f11613,f180])).
fof(f11613,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl68 | $spl219)),
  inference(superposition,[],[f2848,f180])).
fof(f11643,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl153)),
  inference(forward_demodulation,[],[f11612,f180])).
fof(f11612,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl153)),
  inference(superposition,[],[f2043,f180])).
fof(f11640,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl133)),
  inference(forward_demodulation,[],[f11611,f180])).
fof(f11611,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl133)),
  inference(superposition,[],[f1913,f180])).
fof(f11639,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl36 | $spl82)),
  inference(forward_demodulation,[],[f11608,f180])).
fof(f11608,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK1))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl36 | $spl82)),
  inference(superposition,[],[f1007,f180])).
fof(f11638,plain,(
  ( ! [X10,X9] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) ) | $spl36),
  inference(forward_demodulation,[],[f11607,f180])).
fof(f11607,plain,(
  ( ! [X10,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl36),
  inference(superposition,[],[f817,f180])).
fof(f11633,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl36 | $spl73)),
  inference(forward_demodulation,[],[f11606,f180])).
fof(f11606,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl36 | $spl73)),
  inference(superposition,[],[f777,f180])).
fof(f180,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl36),
  inference(cnf_transformation,[],[f180_D])).
fof(f180_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f11551,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl68 | $spl82)),
  inference(forward_demodulation,[],[f11550,f73])).
fof(f11550,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl48 | $spl58 | $spl68 | $spl82)),
  inference(forward_demodulation,[],[f11549,f341])).
fof(f11549,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl48 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f11538,f484])).
fof(f11538,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl48 | $spl58)),
  inference(superposition,[],[f11528,f72])).
fof(f11521,plain,(
  ( ! [X6,X5] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v'))))) ) | $spl604),
  inference(cnf_transformation,[],[f11521_D])).
fof(f11521_D,plain,(
  ( ! [X6,X5] : (s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v'))))) ) <=> ~$spl604),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl604])])).
fof(f2103,plain,(
  ( ! [X2,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),X2))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),X2)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',X1),s('type.list.list'('type.exhSem.v'),X2)),'type.exhSem.v'))))) )),
  inference(superposition,[],[f819,f70])).
fof(f2106,plain,(
  ( ! [X6,X7,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6))) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5('const.list.CONS_2'(s('type.exhSem.v',X5),s('type.list.list'('type.exhSem.v'),X6)),'type.exhSem.v'))))) )),
  inference(superposition,[],[f70,f819])).
fof(f2805,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl68 | $spl82)),
  inference(forward_demodulation,[],[f2784,f73])).
fof(f2784,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl68 | $spl82)),
  inference(superposition,[],[f1007,f341])).
fof(f2809,plain,(
  ( ! [X2,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl68),
  inference(forward_demodulation,[],[f2785,f73])).
fof(f2785,plain,(
  ( ! [X2,X1] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),sK1),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl68),
  inference(superposition,[],[f817,f341])).
fof(f11518,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | $spl598),
  inference(cnf_transformation,[],[f11518_D])).
fof(f11518_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) <=> ~$spl598),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl598])])).
fof(f11516,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl596),
  inference(cnf_transformation,[],[f11516_D])).
fof(f11516_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl596),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl596])])).
fof(f2787,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl68 | $spl82)),
  inference(superposition,[],[f997,f341])).
fof(f183,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | $spl38),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2788,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | $spl68),
  inference(superposition,[],[f72,f341])).
fof(f3859,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl68 | $spl268)),
  inference(forward_demodulation,[],[f3774,f73])).
fof(f3774,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))) | ($spl68 | $spl268)),
  inference(superposition,[],[f3708,f341])).
fof(f4237,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl68 | $spl272)),
  inference(forward_demodulation,[],[f4125,f73])).
fof(f4125,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))))))) | ($spl68 | $spl272)),
  inference(superposition,[],[f4034,f341])).
fof(f5949,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl66 | $spl68)),
  inference(forward_demodulation,[],[f5907,f73])).
fof(f5907,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK1))) | ($spl66 | $spl68)),
  inference(superposition,[],[f5290,f341])).
fof(f5290,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)))) ) | ($spl66 | $spl68)),
  inference(superposition,[],[f751,f72])).
fof(f7610,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl66 | $spl68)),
  inference(forward_demodulation,[],[f7520,f73])).
fof(f7520,plain,(
  ( ! [X3] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),sK1)))))) ) | ($spl66 | $spl68)),
  inference(superposition,[],[f5584,f341])).
fof(f9881,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl68 | $spl268)),
  inference(forward_demodulation,[],[f9734,f73])).
fof(f9734,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),sK1)))))))) ) | ($spl68 | $spl268)),
  inference(superposition,[],[f3865,f341])).
fof(f11503,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl85)),
  inference(forward_demodulation,[],[f10242,f69])).
fof(f10242,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X1),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0)))) ) | ($spl82 | $spl85)),
  inference(superposition,[],[f9241,f817])).
fof(f11502,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl584),
  inference(cnf_transformation,[],[f11502_D])).
fof(f11502_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl584])])).
fof(f10243,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl82 | $spl85)),
  inference(superposition,[],[f9241,f997])).
fof(f11500,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | $spl582),
  inference(cnf_transformation,[],[f11500_D])).
fof(f11500_D,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) <=> ~$spl582),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl582])])).
fof(f10244,plain,(
  ( ! [X2] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X2),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | ($spl82 | $spl85)),
  inference(superposition,[],[f9241,f1007])).
fof(f11499,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | $spl580),
  inference(cnf_transformation,[],[f11499_D])).
fof(f11499_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) <=> ~$spl580),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl580])])).
fof(f10247,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | ($spl82 | $spl85 | $spl268)),
  inference(superposition,[],[f9241,f3708])).
fof(f11497,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))))) ) | $spl578),
  inference(cnf_transformation,[],[f11497_D])).
fof(f11497_D,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))))) ) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f10250,plain,(
  ( ! [X4] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))))) ) | ($spl82 | $spl85 | $spl268)),
  inference(superposition,[],[f9241,f3865])).
fof(f11496,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))))) | $spl576),
  inference(cnf_transformation,[],[f11496_D])).
fof(f11496_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))))) <=> ~$spl576),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl576])])).
fof(f10251,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))))) | ($spl82 | $spl85 | $spl272)),
  inference(superposition,[],[f9241,f4034])).
fof(f10252,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl66 | $spl68 | $spl82 | $spl85)),
  inference(superposition,[],[f9241,f5290])).
fof(f10253,plain,(
  ( ! [X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))))) ) | ($spl66 | $spl68 | $spl82 | $spl85)),
  inference(superposition,[],[f9241,f5584])).
fof(f11488,plain,(
  $false | ($spl35 | $spl68 | $spl384)),
  inference(subsumption_resolution,[],[f11437,f341])).
fof(f11437,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | ($spl35 | $spl68 | $spl384)),
  inference(superposition,[],[f375,f7754])).
fof(f375,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl35 | $spl68)),
  inference(backward_demodulation,[],[f341,f177])).
fof(f177,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl35),
  inference(cnf_transformation,[],[f177_D])).
fof(f177_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f11487,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl384)),
  inference(subsumption_resolution,[],[f11432,f484])).
fof(f11432,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl38 | $spl82 | $spl384)),
  inference(superposition,[],[f995,f7754])).
fof(f995,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82)),
  inference(backward_demodulation,[],[f484,f493])).
fof(f493,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38)),
  inference(forward_demodulation,[],[f96,f183])).
fof(f11486,plain,(
  $false | ($spl66 | $spl68 | $spl245 | $spl384)),
  inference(subsumption_resolution,[],[f11431,f751])).
fof(f11431,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl66 | $spl68 | $spl245 | $spl384)),
  inference(superposition,[],[f7109,f7754])).
fof(f7109,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl245)),
  inference(forward_demodulation,[],[f2778,f751])).
fof(f11485,plain,(
  $false | ($spl5 | $spl38 | $spl68 | $spl384)),
  inference(subsumption_resolution,[],[f11484,f748])).
fof(f748,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl5 | $spl38 | $spl68)),
  inference(forward_demodulation,[],[f747,f183])).
fof(f747,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl5 | $spl68)),
  inference(forward_demodulation,[],[f91,f341])).
fof(f91,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl5),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f11484,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl38 | $spl68 | $spl384)),
  inference(forward_demodulation,[],[f11425,f183])).
fof(f11425,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl68 | $spl384)),
  inference(superposition,[],[f7754,f341])).
fof(f11483,plain,(
  $false | ($spl191 | $spl384)),
  inference(trivial_inequality_removal,[],[f11433])).
fof(f11433,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | ($spl191 | $spl384)),
  inference(superposition,[],[f2603,f7754])).
fof(f11424,plain,(
  $false | ($spl38 | $spl48 | $spl58 | $spl191 | $spl550)),
  inference(subsumption_resolution,[],[f11422,f2603])).
fof(f11422,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl38 | $spl48 | $spl58 | $spl550)),
  inference(trivial_inequality_removal,[],[f11414])).
fof(f11414,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl38 | $spl48 | $spl58 | $spl550)),
  inference(superposition,[],[f4413,f10159])).
fof(f4413,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl38 | $spl48 | $spl58)),
  inference(backward_demodulation,[],[f245,f766])).
fof(f766,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl38 | $spl58)),
  inference(superposition,[],[f737,f72])).
fof(f737,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl58)),
  inference(forward_demodulation,[],[f200,f278])).
fof(f200,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl38),
  inference(backward_demodulation,[],[f183,f67])).
fof(f11423,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl570),
  inference(cnf_transformation,[],[f11423_D])).
fof(f11423_D,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) <=> ~$spl570),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl570])])).
fof(f11413,plain,(
  ( ! [X14,X15] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X15))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X14),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl550),
  inference(superposition,[],[f817,f10159])).
fof(f11412,plain,(
  ( ! [X14,X13] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X14))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X13),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl550),
  inference(superposition,[],[f10159,f817])).
fof(f11401,plain,(
  ( ! [X12,X13,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X12),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X13))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl550),
  inference(superposition,[],[f10159,f72])).
fof(f10530,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl562),
  inference(cnf_transformation,[],[f10530_D])).
fof(f10530_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl562),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl562])])).
fof(f10410,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl191 | $spl268 | $spl370)),
  inference(superposition,[],[f6899,f10151])).
fof(f10151,plain,(
  ( ! [X101,X100] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X101),s('type.list.list'('type.exhLang.pat'),X100))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X101),s('type.list.list'('type.exhLang.pat'),X100))) | s('type.list.list'('type.exhLang.pat'),X100) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X100,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X100,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl191 | $spl268)),
  inference(subsumption_resolution,[],[f9970,f2603])).
fof(f9970,plain,(
  ( ! [X101,X100] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X101),s('type.list.list'('type.exhLang.pat'),X100))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X101),s('type.list.list'('type.exhLang.pat'),X100))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X100) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X100,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X100,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl268)),
  inference(superposition,[],[f9831,f72])).
fof(f9831,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl268)),
  inference(duplicate_literal_removal,[],[f9738])).
fof(f9738,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X0),s('type.list.list'('type.exhLang.pat'),X1))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X1,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl268)),
  inference(superposition,[],[f3724,f3865])).
fof(f3724,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),X4))))))) | s('type.list.list'('type.exhLang.pat'),X4) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X4,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X4,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f3723,f73])).
fof(f3723,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),X4))))))) | s('type.list.list'('type.exhLang.pat'),X4) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X4,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X4,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f3662,f74])).
fof(f3662,plain,(
  ( ! [X4,X5] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X5),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X4))))))) | s('type.list.list'('type.exhLang.pat'),X4) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X4,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X4,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f74,f3572])).
fof(f3572,plain,(
  ( ! [X5] : (s('type.list.list'('type.exhLang.pat'),X5) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X5,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X5,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X5)))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(subsumption_resolution,[],[f3538,f997])).
fof(f3538,plain,(
  ( ! [X5] : (s('type.list.list'('type.exhLang.pat'),X5) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X5))) | s('type.list.list'('type.exhLang.pat'),X5) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X5,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X5,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X5)))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f3531])).
fof(f3531,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))) ) | ($spl9 | $spl38 | $spl82)),
  inference(subsumption_resolution,[],[f3512,f997])).
fof(f3512,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),X8) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f72])).
fof(f1024,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f995,f72])).
fof(f10528,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl560),
  inference(cnf_transformation,[],[f10528_D])).
fof(f10528_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl560),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl560])])).
fof(f10409,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl182 | $spl191 | $spl268)),
  inference(superposition,[],[f2570,f10151])).
fof(f10523,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl558),
  inference(cnf_transformation,[],[f10523_D])).
fof(f10523_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl558),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl558])])).
fof(f10402,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl102 | $spl191 | $spl268)),
  inference(superposition,[],[f1285,f10151])).
fof(f10521,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl556),
  inference(cnf_transformation,[],[f10521_D])).
fof(f10521_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl556),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl556])])).
fof(f10400,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl122 | $spl191 | $spl268)),
  inference(superposition,[],[f1668,f10151])).
fof(f10518,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl554),
  inference(cnf_transformation,[],[f10518_D])).
fof(f10518_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl554),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl554])])).
fof(f10397,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl191 | $spl268 | $spl362)),
  inference(superposition,[],[f6247,f10151])).
fof(f10516,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl552),
  inference(cnf_transformation,[],[f10516_D])).
fof(f10516_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl552),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl552])])).
fof(f10396,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl174 | $spl191 | $spl268)),
  inference(superposition,[],[f2291,f10151])).
fof(f10540,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl569),
  inference(cnf_transformation,[],[f10540_D])).
fof(f10540_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl569),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl569])])).
fof(f10395,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl85 | $spl191 | $spl268)),
  inference(superposition,[],[f9241,f10151])).
fof(f10538,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl567),
  inference(cnf_transformation,[],[f10538_D])).
fof(f10538_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl567),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl567])])).
fof(f10394,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl68 | $spl71 | $spl82 | $spl191 | $spl268)),
  inference(superposition,[],[f3153,f10151])).
fof(f3153,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl68 | $spl71)),
  inference(forward_demodulation,[],[f342,f341])).
fof(f342,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl71),
  inference(cnf_transformation,[],[f342_D])).
fof(f342_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f10536,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl565),
  inference(cnf_transformation,[],[f10536_D])).
fof(f10536_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl565),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl565])])).
fof(f10386,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl66 | $spl68 | $spl82 | $spl191 | $spl245 | $spl268)),
  inference(superposition,[],[f7109,f10151])).
fof(f10353,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl191 | $spl268 | $spl370)),
  inference(superposition,[],[f10151,f6899])).
fof(f10352,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl182 | $spl191 | $spl268)),
  inference(superposition,[],[f10151,f2570])).
fof(f10345,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl102 | $spl191 | $spl268)),
  inference(superposition,[],[f10151,f1285])).
fof(f10344,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl122 | $spl191 | $spl268)),
  inference(superposition,[],[f10151,f1668])).
fof(f10341,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl191 | $spl268 | $spl362)),
  inference(superposition,[],[f10151,f6247])).
fof(f10340,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl174 | $spl191 | $spl268)),
  inference(superposition,[],[f10151,f2291])).
fof(f9211,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl521),
  inference(cnf_transformation,[],[f9211_D])).
fof(f9211_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl521),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl521])])).
fof(f10255,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl85 | $spl268)),
  inference(superposition,[],[f9241,f9831])).
fof(f10259,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl85)),
  inference(forward_demodulation,[],[f10240,f73])).
fof(f10240,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl85)),
  inference(superposition,[],[f9241,f72])).
fof(f10054,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl268 | $spl370)),
  inference(superposition,[],[f6899,f9831])).
fof(f10046,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl102 | $spl268)),
  inference(superposition,[],[f1285,f9831])).
fof(f10044,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl122 | $spl268)),
  inference(superposition,[],[f1668,f9831])).
fof(f10041,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl268 | $spl362)),
  inference(superposition,[],[f6247,f9831])).
fof(f10040,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl174 | $spl268)),
  inference(superposition,[],[f2291,f9831])).
fof(f10031,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl66 | $spl68 | $spl82 | $spl245 | $spl268)),
  inference(superposition,[],[f7109,f9831])).
fof(f10015,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X6),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X4),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),X5) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X5,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X5,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl268)),
  inference(superposition,[],[f69,f9831])).
fof(f10002,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl268 | $spl370)),
  inference(superposition,[],[f9831,f6899])).
fof(f9994,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl102 | $spl268)),
  inference(superposition,[],[f9831,f1285])).
fof(f9993,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl122 | $spl268)),
  inference(superposition,[],[f9831,f1668])).
fof(f9990,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl268 | $spl362)),
  inference(superposition,[],[f9831,f6247])).
fof(f9989,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl174 | $spl268)),
  inference(superposition,[],[f9831,f2291])).
fof(f9890,plain,(
  ( ! [X45,X43,X44] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X45))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) | $spl268),
  inference(forward_demodulation,[],[f9753,f69])).
fof(f9753,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X45))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X46),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X45))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X43),s('type.list.list'('type.exhLang.pat'),X44)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X44) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X44,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X44,'type.exhLang.pat'))))) ) | $spl268),
  inference(superposition,[],[f817,f3865])).
fof(f9877,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl546),
  inference(cnf_transformation,[],[f9877_D])).
fof(f9877_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f9722,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl370)),
  inference(superposition,[],[f3865,f6899])).
fof(f8684,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl474),
  inference(cnf_transformation,[],[f8684_D])).
fof(f8684_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl474),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl474])])).
fof(f9721,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl182 | $spl268)),
  inference(superposition,[],[f3865,f2570])).
fof(f9875,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl544),
  inference(cnf_transformation,[],[f9875_D])).
fof(f9875_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl544),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl544])])).
fof(f9714,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl102 | $spl268)),
  inference(superposition,[],[f3865,f1285])).
fof(f9873,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl542),
  inference(cnf_transformation,[],[f9873_D])).
fof(f9873_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl542),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl542])])).
fof(f9713,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl122 | $spl268)),
  inference(superposition,[],[f3865,f1668])).
fof(f9871,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl540),
  inference(cnf_transformation,[],[f9871_D])).
fof(f9871_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f9710,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl268 | $spl362)),
  inference(superposition,[],[f3865,f6247])).
fof(f9869,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl538),
  inference(cnf_transformation,[],[f9869_D])).
fof(f9869_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f9709,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl174 | $spl268)),
  inference(superposition,[],[f3865,f2291])).
fof(f9634,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | $spl536),
  inference(cnf_transformation,[],[f9634_D])).
fof(f9634_D,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) <=> ~$spl536),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl536])])).
fof(f9559,plain,(
  ( ! [X24,X23,X22] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X24))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl66 | $spl68 | $spl82)),
  inference(superposition,[],[f5920,f3710])).
fof(f3710,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(subsumption_resolution,[],[f3628,f997])).
fof(f3628,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),X6) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f3572])).
fof(f5920,plain,(
  ( ! [X14,X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),X14),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) | s('type.list.list'('type.exhLang.pat'),X14) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X14)))) ) | ($spl66 | $spl68)),
  inference(superposition,[],[f69,f5290])).
fof(f9633,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | $spl534),
  inference(cnf_transformation,[],[f9633_D])).
fof(f9633_D,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f9557,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X17),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X18))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl66 | $spl68 | $spl82)),
  inference(superposition,[],[f5920,f3572])).
fof(f9321,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl370)),
  inference(superposition,[],[f3724,f6899])).
fof(f9320,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl182)),
  inference(superposition,[],[f3724,f2570])).
fof(f9313,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl102)),
  inference(superposition,[],[f3724,f1285])).
fof(f9312,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl122)),
  inference(superposition,[],[f3724,f1668])).
fof(f9309,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl362)),
  inference(superposition,[],[f3724,f6247])).
fof(f9308,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl174)),
  inference(superposition,[],[f3724,f2291])).
fof(f9238,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl84)),
  inference(subsumption_resolution,[],[f9206,f995])).
fof(f9206,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(duplicate_literal_removal,[],[f9173])).
fof(f9173,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(superposition,[],[f72,f9028])).
fof(f9226,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl84 | $spl118)),
  inference(subsumption_resolution,[],[f9162,f995])).
fof(f9162,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84 | $spl118)),
  inference(superposition,[],[f1583,f9028])).
fof(f9225,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl84)),
  inference(subsumption_resolution,[],[f9207,f995])).
fof(f9207,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(duplicate_literal_removal,[],[f9161])).
fof(f9161,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(superposition,[],[f9028,f72])).
fof(f9213,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl84 | $spl118)),
  inference(subsumption_resolution,[],[f9150,f995])).
fof(f9212,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl520),
  inference(cnf_transformation,[],[f9212_D])).
fof(f9212_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl520),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl520])])).
fof(f9208,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(forward_demodulation,[],[f9149,f73])).
fof(f9149,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl84)),
  inference(superposition,[],[f9028,f72])).
fof(f9101,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl370),
  inference(forward_demodulation,[],[f9066,f73])).
fof(f9066,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl370),
  inference(superposition,[],[f6899,f72])).
fof(f8987,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl512),
  inference(cnf_transformation,[],[f8987_D])).
fof(f8987_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl512),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl512])])).
fof(f8638,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl445),
  inference(cnf_transformation,[],[f8638_D])).
fof(f8638_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl445),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl445])])).
fof(f8985,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl443),
  inference(superposition,[],[f8572,f72])).
fof(f8572,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl443),
  inference(cnf_transformation,[],[f8572_D])).
fof(f8572_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl443),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl443])])).
fof(f8878,plain,(
  $false | ($spl3 | $spl38 | $spl58 | $spl82 | $spl190)),
  inference(trivial_inequality_removal,[],[f8868])).
fof(f8868,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl3 | $spl38 | $spl58 | $spl82 | $spl190)),
  inference(superposition,[],[f1223,f8713])).
fof(f8713,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl190),
  inference(superposition,[],[f69,f2604])).
fof(f1223,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl3 | $spl38 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f1222,f484])).
fof(f1222,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl3 | $spl38 | $spl58)),
  inference(forward_demodulation,[],[f199,f278])).
fof(f199,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | ($spl3 | $spl38)),
  inference(backward_demodulation,[],[f183,f90])).
fof(f8828,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl511),
  inference(cnf_transformation,[],[f8828_D])).
fof(f8828_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl511),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl511])])).
fof(f8793,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl494),
  inference(cnf_transformation,[],[f8793_D])).
fof(f8793_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl494),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl494])])).
fof(f8826,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl307)),
  inference(forward_demodulation,[],[f8783,f2577])).
fof(f2577,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl184)),
  inference(superposition,[],[f1006,f2572])).
fof(f8783,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl307)),
  inference(superposition,[],[f8262,f2577])).
fof(f8825,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl509),
  inference(cnf_transformation,[],[f8825_D])).
fof(f8825_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl509),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl509])])).
fof(f8823,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl105 | $spl184)),
  inference(forward_demodulation,[],[f8782,f2577])).
fof(f8782,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl105 | $spl184)),
  inference(superposition,[],[f7964,f2577])).
fof(f8822,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | $spl507),
  inference(cnf_transformation,[],[f8822_D])).
fof(f8822_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) <=> ~$spl507),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl507])])).
fof(f8820,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl82 | $spl107 | $spl184)),
  inference(forward_demodulation,[],[f8781,f2577])).
fof(f8781,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl107 | $spl184)),
  inference(superposition,[],[f7814,f2577])).
fof(f8819,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl505),
  inference(cnf_transformation,[],[f8819_D])).
fof(f8819_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl505),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl505])])).
fof(f8817,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl311)),
  inference(forward_demodulation,[],[f8780,f2577])).
fof(f8780,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl311)),
  inference(superposition,[],[f6432,f2577])).
fof(f8816,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | $spl502),
  inference(cnf_transformation,[],[f8816_D])).
fof(f8816_D,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) <=> ~$spl502),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl502])])).
fof(f8815,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl66 | $spl68 | $spl82 | $spl184)),
  inference(forward_demodulation,[],[f8779,f2577])).
fof(f8779,plain,(
  ( ! [X15] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl66 | $spl68 | $spl82 | $spl184)),
  inference(superposition,[],[f5584,f2577])).
fof(f8814,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl501),
  inference(cnf_transformation,[],[f8814_D])).
fof(f8814_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl501),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl501])])).
fof(f8812,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl315)),
  inference(forward_demodulation,[],[f8778,f2577])).
fof(f8778,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl184 | $spl315)),
  inference(superposition,[],[f5514,f2577])).
fof(f8808,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl499),
  inference(cnf_transformation,[],[f8808_D])).
fof(f8808_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl499),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl499])])).
fof(f8806,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl68 | $spl82 | $spl184 | $spl219)),
  inference(forward_demodulation,[],[f8771,f2577])).
fof(f8771,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl68 | $spl82 | $spl184 | $spl219)),
  inference(superposition,[],[f2848,f2577])).
fof(f8805,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl497),
  inference(cnf_transformation,[],[f8805_D])).
fof(f8805_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl497),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl497])])).
fof(f8803,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl82 | $spl184)),
  inference(forward_demodulation,[],[f8770,f2577])).
fof(f8770,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl82 | $spl184)),
  inference(superposition,[],[f2820,f2577])).
fof(f2820,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl5 | $spl38 | $spl68)),
  inference(superposition,[],[f748,f72])).
fof(f2635,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl213),
  inference(cnf_transformation,[],[f2635_D])).
fof(f2635_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl213),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl213])])).
fof(f8802,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl153 | $spl184)),
  inference(forward_demodulation,[],[f8769,f2577])).
fof(f8769,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl153 | $spl184)),
  inference(superposition,[],[f2043,f2577])).
fof(f2632,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl211),
  inference(cnf_transformation,[],[f2632_D])).
fof(f2632_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl211])])).
fof(f8801,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl133 | $spl184)),
  inference(forward_demodulation,[],[f8768,f2577])).
fof(f8768,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl133 | $spl184)),
  inference(superposition,[],[f1913,f2577])).
fof(f2620,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl203),
  inference(cnf_transformation,[],[f2620_D])).
fof(f2620_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl203),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl203])])).
fof(f8800,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl82 | $spl87 | $spl184)),
  inference(forward_demodulation,[],[f8766,f2577])).
fof(f8766,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl82 | $spl87 | $spl184)),
  inference(superposition,[],[f1320,f2577])).
fof(f2617,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | $spl200),
  inference(cnf_transformation,[],[f2617_D])).
fof(f2617_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f8796,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl82 | $spl184)),
  inference(forward_demodulation,[],[f8762,f2577])).
fof(f8762,plain,(
  ( ! [X9] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl184)),
  inference(superposition,[],[f1007,f2577])).
fof(f8795,plain,(
  ( ! [X7] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7)))) ) | ($spl82 | $spl170 | $spl184)),
  inference(forward_demodulation,[],[f8794,f2577])).
fof(f8794,plain,(
  ( ! [X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl170 | $spl184)),
  inference(forward_demodulation,[],[f8760,f2549])).
fof(f2549,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl170),
  inference(superposition,[],[f69,f2218])).
fof(f8760,plain,(
  ( ! [X8,X7] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X8),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X7))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'))))) ) | ($spl82 | $spl184)),
  inference(superposition,[],[f817,f2577])).
fof(f2613,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl197),
  inference(cnf_transformation,[],[f2613_D])).
fof(f2613_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl197),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl197])])).
fof(f8791,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl82 | $spl184)),
  inference(forward_demodulation,[],[f8759,f2577])).
fof(f8759,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl73 | $spl82 | $spl184)),
  inference(superposition,[],[f777,f2577])).
fof(f8639,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl444),
  inference(cnf_transformation,[],[f8639_D])).
fof(f8639_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f8641,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl446),
  inference(cnf_transformation,[],[f8641_D])).
fof(f8641_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f8711,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl442),
  inference(forward_demodulation,[],[f8633,f8573])).
fof(f8633,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl442),
  inference(superposition,[],[f72,f8573])).
fof(f8710,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl493),
  inference(cnf_transformation,[],[f8710_D])).
fof(f8710_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl493),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl493])])).
fof(f8708,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl307 | $spl442)),
  inference(forward_demodulation,[],[f8631,f8573])).
fof(f8631,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl307 | $spl442)),
  inference(superposition,[],[f8262,f8573])).
fof(f8707,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl491),
  inference(cnf_transformation,[],[f8707_D])).
fof(f8707_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl491),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl491])])).
fof(f8705,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl105 | $spl442)),
  inference(forward_demodulation,[],[f8630,f8573])).
fof(f8630,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl105 | $spl442)),
  inference(superposition,[],[f7964,f8573])).
fof(f8704,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | $spl489),
  inference(cnf_transformation,[],[f8704_D])).
fof(f8704_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) <=> ~$spl489),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl489])])).
fof(f8702,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | ($spl107 | $spl442)),
  inference(forward_demodulation,[],[f8629,f8573])).
fof(f8629,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl107 | $spl442)),
  inference(superposition,[],[f7814,f8573])).
fof(f8701,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl487),
  inference(cnf_transformation,[],[f8701_D])).
fof(f8701_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl487),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl487])])).
fof(f8699,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl311 | $spl442)),
  inference(forward_demodulation,[],[f8628,f8573])).
fof(f8628,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl311 | $spl442)),
  inference(superposition,[],[f6432,f8573])).
fof(f8698,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | $spl484),
  inference(cnf_transformation,[],[f8698_D])).
fof(f8698_D,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) <=> ~$spl484),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl484])])).
fof(f8697,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl66 | $spl68 | $spl442)),
  inference(forward_demodulation,[],[f8627,f8573])).
fof(f8627,plain,(
  ( ! [X17] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X17),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl66 | $spl68 | $spl442)),
  inference(superposition,[],[f5584,f8573])).
fof(f8696,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl483),
  inference(cnf_transformation,[],[f8696_D])).
fof(f8696_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl483),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl483])])).
fof(f8694,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl315 | $spl442)),
  inference(forward_demodulation,[],[f8626,f8573])).
fof(f8626,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl315 | $spl442)),
  inference(superposition,[],[f5514,f8573])).
fof(f8693,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl481),
  inference(cnf_transformation,[],[f8693_D])).
fof(f8693_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl481),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl481])])).
fof(f8691,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl48 | $spl58 | $spl442)),
  inference(forward_demodulation,[],[f8625,f8573])).
fof(f8625,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl48 | $spl58 | $spl442)),
  inference(superposition,[],[f4413,f8573])).
fof(f8690,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | $spl478),
  inference(cnf_transformation,[],[f8690_D])).
fof(f8690_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) <=> ~$spl478),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl478])])).
fof(f8688,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | ($spl272 | $spl442)),
  inference(forward_demodulation,[],[f8624,f8573])).
fof(f8624,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl272 | $spl442)),
  inference(superposition,[],[f4034,f8573])).
fof(f8687,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | $spl476),
  inference(cnf_transformation,[],[f8687_D])).
fof(f8687_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) <=> ~$spl476),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl476])])).
fof(f8685,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8623,f8573])).
fof(f8623,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(superposition,[],[f3710,f8573])).
fof(f8682,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | ($spl268 | $spl442)),
  inference(forward_demodulation,[],[f8622,f8573])).
fof(f8622,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl268 | $spl442)),
  inference(superposition,[],[f3708,f8573])).
fof(f8681,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | $spl472),
  inference(cnf_transformation,[],[f8681_D])).
fof(f8681_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl472),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl472])])).
fof(f8679,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8621,f8573])).
fof(f8621,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(superposition,[],[f3572,f8573])).
fof(f8678,plain,(
  ( ! [X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16)))) ) | $spl470),
  inference(cnf_transformation,[],[f8678_D])).
fof(f8678_D,plain,(
  ( ! [X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16)))) ) <=> ~$spl470),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl470])])).
fof(f8677,plain,(
  ( ! [X15,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16)))) ) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8676,f8573])).
fof(f8676,plain,(
  ( ! [X15,X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16)))) ) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8620,f1006])).
fof(f8620,plain,(
  ( ! [X15,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X15),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X16))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(superposition,[],[f3544,f8573])).
fof(f3544,plain,(
  ( ! [X10,X11,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),X9),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X11))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X9)))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f69,f3531])).
fof(f8675,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl469),
  inference(cnf_transformation,[],[f8675_D])).
fof(f8675_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl469),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl469])])).
fof(f8673,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl68 | $spl219 | $spl442)),
  inference(forward_demodulation,[],[f8619,f8573])).
fof(f8619,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl68 | $spl219 | $spl442)),
  inference(superposition,[],[f2848,f8573])).
fof(f8672,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl467),
  inference(cnf_transformation,[],[f8672_D])).
fof(f8672_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl467),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl467])])).
fof(f8670,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl442)),
  inference(forward_demodulation,[],[f8618,f8573])).
fof(f8618,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl442)),
  inference(superposition,[],[f2820,f8573])).
fof(f8669,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl465),
  inference(cnf_transformation,[],[f8669_D])).
fof(f8669_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl465),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl465])])).
fof(f8667,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl153 | $spl442)),
  inference(forward_demodulation,[],[f8617,f8573])).
fof(f8617,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl153 | $spl442)),
  inference(superposition,[],[f2043,f8573])).
fof(f8666,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl463),
  inference(cnf_transformation,[],[f8666_D])).
fof(f8666_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl463),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl463])])).
fof(f8664,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl133 | $spl442)),
  inference(forward_demodulation,[],[f8616,f8573])).
fof(f8616,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl133 | $spl442)),
  inference(superposition,[],[f1913,f8573])).
fof(f8663,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl461),
  inference(cnf_transformation,[],[f8663_D])).
fof(f8663_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl461),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl461])])).
fof(f8661,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl87 | $spl442)),
  inference(forward_demodulation,[],[f8614,f8573])).
fof(f8614,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl442)),
  inference(superposition,[],[f1320,f8573])).
fof(f8660,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl459),
  inference(cnf_transformation,[],[f8660_D])).
fof(f8660_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl459),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl459])])).
fof(f8658,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl3 | $spl38 | $spl58 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8613,f8573])).
fof(f8613,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl3 | $spl38 | $spl58 | $spl82 | $spl442)),
  inference(superposition,[],[f1229,f8573])).
fof(f1229,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),X0),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl3 | $spl38 | $spl58 | $spl82)),
  inference(superposition,[],[f1223,f72])).
fof(f8657,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl457),
  inference(cnf_transformation,[],[f8657_D])).
fof(f8657_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl457),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl457])])).
fof(f8655,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(forward_demodulation,[],[f8611,f8573])).
fof(f8611,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl442)),
  inference(superposition,[],[f1024,f8573])).
fof(f8654,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | $spl454),
  inference(cnf_transformation,[],[f8654_D])).
fof(f8654_D,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f8653,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl82 | $spl442)),
  inference(forward_demodulation,[],[f8610,f8573])).
fof(f8610,plain,(
  ( ! [X11] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X11),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl442)),
  inference(superposition,[],[f1007,f8573])).
fof(f8652,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl453),
  inference(cnf_transformation,[],[f8652_D])).
fof(f8652_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl453),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl453])])).
fof(f8650,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl442)),
  inference(forward_demodulation,[],[f8609,f8573])).
fof(f8609,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl442)),
  inference(superposition,[],[f985,f8573])).
fof(f985,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl38)),
  inference(superposition,[],[f493,f72])).
fof(f8649,plain,(
  ( ! [X10,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) ) | $spl450),
  inference(cnf_transformation,[],[f8649_D])).
fof(f8649_D,plain,(
  ( ! [X10,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) ) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f8648,plain,(
  ( ! [X10,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9)))) ) | $spl442),
  inference(forward_demodulation,[],[f8608,f8573])).
fof(f8608,plain,(
  ( ! [X10,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X9))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl442),
  inference(superposition,[],[f817,f8573])).
fof(f8647,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl449),
  inference(cnf_transformation,[],[f8647_D])).
fof(f8647_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl449),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl449])])).
fof(f8645,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl442)),
  inference(forward_demodulation,[],[f8607,f8573])).
fof(f8607,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl442)),
  inference(superposition,[],[f777,f8573])).
fof(f8637,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl442),
  inference(forward_demodulation,[],[f8597,f8573])).
fof(f8597,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl442),
  inference(superposition,[],[f8573,f72])).
fof(f8573,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl442),
  inference(cnf_transformation,[],[f8573_D])).
fof(f8573_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f8569,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl182),
  inference(forward_demodulation,[],[f8534,f73])).
fof(f8534,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl182),
  inference(superposition,[],[f2570,f72])).
fof(f8434,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl362),
  inference(forward_demodulation,[],[f8400,f73])).
fof(f8400,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl362),
  inference(superposition,[],[f6247,f72])).
fof(f6247,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl362),
  inference(cnf_transformation,[],[f6247_D])).
fof(f6247_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f6249,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl364),
  inference(cnf_transformation,[],[f6249_D])).
fof(f6249_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f8354,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl307),
  inference(forward_demodulation,[],[f8320,f73])).
fof(f8320,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl307),
  inference(superposition,[],[f8265,f72])).
fof(f8265,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl307),
  inference(trivial_inequality_removal,[],[f8264])).
fof(f8264,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl307),
  inference(superposition,[],[f5096,f72])).
fof(f8255,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | $spl434),
  inference(cnf_transformation,[],[f8255_D])).
fof(f8255_D,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f8180,plain,(
  ( ! [X24,X23,X22] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X24))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(superposition,[],[f6560,f3710])).
fof(f6560,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X17),s('type.list.list'('type.exhLang.pat'),X16),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X18))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X16)))) ) | $spl306),
  inference(superposition,[],[f69,f6350])).
fof(f6350,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)))) ) | $spl306),
  inference(superposition,[],[f5097,f72])).
fof(f8254,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | $spl432),
  inference(cnf_transformation,[],[f8254_D])).
fof(f8254_D,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f8178,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X17),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X18))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))))) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(superposition,[],[f6560,f3572])).
fof(f8104,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl102),
  inference(forward_demodulation,[],[f8070,f73])).
fof(f8070,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl102),
  inference(superposition,[],[f1285,f72])).
fof(f7961,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | $spl426),
  inference(cnf_transformation,[],[f7961_D])).
fof(f7961_D,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f7907,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl390),
  inference(cnf_transformation,[],[f7907_D])).
fof(f7907_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f7960,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | ($spl104 | $spl306)),
  inference(forward_demodulation,[],[f7893,f1287])).
fof(f7893,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X19),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl104 | $spl306)),
  inference(superposition,[],[f6473,f1287])).
fof(f6473,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X0))))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl306),
  inference(superposition,[],[f6384,f72])).
fof(f6384,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl306),
  inference(forward_demodulation,[],[f6356,f73])).
fof(f6356,plain,(
  ( ! [X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')))))) ) | $spl306),
  inference(superposition,[],[f74,f5097])).
fof(f7959,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl425),
  inference(cnf_transformation,[],[f7959_D])).
fof(f7959_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl425),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl425])])).
fof(f7957,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl311)),
  inference(forward_demodulation,[],[f7892,f1287])).
fof(f7892,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl311)),
  inference(superposition,[],[f6432,f1287])).
fof(f7956,plain,(
  ( ! [X18] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | $spl422),
  inference(cnf_transformation,[],[f7956_D])).
fof(f7956_D,plain,(
  ( ! [X18] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f7955,plain,(
  ( ! [X18] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | ($spl66 | $spl68 | $spl104)),
  inference(forward_demodulation,[],[f7891,f1287])).
fof(f7891,plain,(
  ( ! [X18] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X18),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl66 | $spl68 | $spl104)),
  inference(superposition,[],[f5584,f1287])).
fof(f7954,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl421),
  inference(cnf_transformation,[],[f7954_D])).
fof(f7954_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl421),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl421])])).
fof(f7952,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl315)),
  inference(forward_demodulation,[],[f7890,f1287])).
fof(f7890,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl315)),
  inference(superposition,[],[f5514,f1287])).
fof(f7951,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl419),
  inference(cnf_transformation,[],[f7951_D])).
fof(f7951_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl419),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl419])])).
fof(f7949,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl48 | $spl58 | $spl104)),
  inference(forward_demodulation,[],[f7889,f1287])).
fof(f7889,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl48 | $spl58 | $spl104)),
  inference(superposition,[],[f4413,f1287])).
fof(f7948,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | $spl416),
  inference(cnf_transformation,[],[f7948_D])).
fof(f7948_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f7946,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | ($spl104 | $spl272)),
  inference(forward_demodulation,[],[f7888,f1287])).
fof(f7888,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl272)),
  inference(superposition,[],[f4034,f1287])).
fof(f7945,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | $spl414),
  inference(cnf_transformation,[],[f7945_D])).
fof(f7945_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f7943,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(forward_demodulation,[],[f7887,f1287])).
fof(f7887,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(superposition,[],[f3710,f1287])).
fof(f7942,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl412),
  inference(cnf_transformation,[],[f7942_D])).
fof(f7942_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f7940,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl104 | $spl268)),
  inference(forward_demodulation,[],[f7886,f1287])).
fof(f7886,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl268)),
  inference(superposition,[],[f3708,f1287])).
fof(f7939,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | $spl410),
  inference(cnf_transformation,[],[f7939_D])).
fof(f7939_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f7937,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(forward_demodulation,[],[f7885,f1287])).
fof(f7885,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(superposition,[],[f3572,f1287])).
fof(f7933,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl409),
  inference(cnf_transformation,[],[f7933_D])).
fof(f7933_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl409),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl409])])).
fof(f7931,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl68 | $spl104 | $spl219)),
  inference(forward_demodulation,[],[f7883,f1287])).
fof(f7883,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl68 | $spl104 | $spl219)),
  inference(superposition,[],[f2848,f1287])).
fof(f1301,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl115),
  inference(cnf_transformation,[],[f1301_D])).
fof(f1301_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f7930,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl104)),
  inference(forward_demodulation,[],[f7882,f1287])).
fof(f7882,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl104)),
  inference(superposition,[],[f2820,f1287])).
fof(f7929,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl407),
  inference(cnf_transformation,[],[f7929_D])).
fof(f7929_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl407),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl407])])).
fof(f7927,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl153)),
  inference(forward_demodulation,[],[f7881,f1287])).
fof(f7881,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl153)),
  inference(superposition,[],[f2043,f1287])).
fof(f7926,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl405),
  inference(cnf_transformation,[],[f7926_D])).
fof(f7926_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl405),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl405])])).
fof(f7924,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl133)),
  inference(forward_demodulation,[],[f7880,f1287])).
fof(f7880,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl104 | $spl133)),
  inference(superposition,[],[f1913,f1287])).
fof(f7923,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl403),
  inference(cnf_transformation,[],[f7923_D])).
fof(f7923_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl403),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl403])])).
fof(f7921,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl104)),
  inference(forward_demodulation,[],[f7878,f1287])).
fof(f7878,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl104)),
  inference(superposition,[],[f1320,f1287])).
fof(f7920,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl401),
  inference(cnf_transformation,[],[f7920_D])).
fof(f7920_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl401),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl401])])).
fof(f7918,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl3 | $spl38 | $spl58 | $spl82 | $spl104)),
  inference(forward_demodulation,[],[f7877,f1287])).
fof(f7877,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl3 | $spl38 | $spl58 | $spl82 | $spl104)),
  inference(superposition,[],[f1229,f1287])).
fof(f7917,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl399),
  inference(cnf_transformation,[],[f7917_D])).
fof(f7917_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl399),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl399])])).
fof(f7915,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(forward_demodulation,[],[f7875,f1287])).
fof(f7875,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl104)),
  inference(superposition,[],[f1024,f1287])).
fof(f7914,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | $spl396),
  inference(cnf_transformation,[],[f7914_D])).
fof(f7914_D,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f7913,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))))) ) | ($spl82 | $spl104)),
  inference(forward_demodulation,[],[f7874,f1287])).
fof(f7874,plain,(
  ( ! [X12] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X12),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl104)),
  inference(superposition,[],[f1007,f1287])).
fof(f7912,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl395),
  inference(cnf_transformation,[],[f7912_D])).
fof(f7912_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl395),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl395])])).
fof(f7910,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl104)),
  inference(forward_demodulation,[],[f7873,f1287])).
fof(f7873,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl104)),
  inference(superposition,[],[f985,f1287])).
fof(f7909,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10)))) ) | $spl392),
  inference(cnf_transformation,[],[f7909_D])).
fof(f7909_D,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10)))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f7908,plain,(
  ( ! [X10,X11] : (s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10)))) ) | $spl104),
  inference(forward_demodulation,[],[f7872,f1287])).
fof(f7872,plain,(
  ( ! [X10,X11] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X11),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X10))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl104),
  inference(superposition,[],[f817,f1287])).
fof(f1298,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl113),
  inference(cnf_transformation,[],[f1298_D])).
fof(f1298_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f7905,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl104)),
  inference(forward_demodulation,[],[f7871,f1287])).
fof(f7871,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl104)),
  inference(superposition,[],[f777,f1287])).
fof(f1285,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl102),
  inference(cnf_transformation,[],[f1285_D])).
fof(f1285_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f1287,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl104),
  inference(cnf_transformation,[],[f1287_D])).
fof(f1287_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f7853,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl78),
  inference(forward_demodulation,[],[f7820,f73])).
fof(f7820,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl78),
  inference(superposition,[],[f479,f72])).
fof(f3514,plain,(
  ( ! [X24] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X24) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X24,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X24,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(duplicate_literal_removal,[],[f3504])).
fof(f3504,plain,(
  ( ! [X24] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X24) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X24,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X24,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X24) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X24,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X24,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f72])).
fof(f7769,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) | $spl388),
  inference(cnf_transformation,[],[f7769_D])).
fof(f7769_D,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f3669,plain,(
  ( ! [X21] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X21))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X21)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X21)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X21) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X21,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X21,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f3572])).
fof(f7767,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat'))))) ) | $spl386),
  inference(cnf_transformation,[],[f7767_D])).
fof(f7767_D,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat'))))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f3981,plain,(
  ( ! [X24] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X24))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X24)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X24)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X24) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X24,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X24,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1024,f3710])).
fof(f7768,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f6256,f484])).
fof(f6256,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f985,f3572])).
fof(f7766,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f6258,f484])).
fof(f6258,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X8)))))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X8) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X8,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X8,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f985,f3710])).
fof(f7753,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f6321,f484])).
fof(f6321,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | ($spl9 | $spl38)),
  inference(duplicate_literal_removal,[],[f6292])).
fof(f6292,plain,(
  ( ! [X33] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X33) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X33,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X33,'type.exhLang.pat'))))) ) | ($spl9 | $spl38)),
  inference(superposition,[],[f985,f72])).
fof(f7750,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl382),
  inference(cnf_transformation,[],[f7750_D])).
fof(f7750_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f7752,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(forward_demodulation,[],[f7751,f5097])).
fof(f7751,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(forward_demodulation,[],[f6361,f484])).
fof(f6361,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl306)),
  inference(superposition,[],[f985,f5097])).
fof(f7746,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(forward_demodulation,[],[f6363,f5097])).
fof(f6363,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl306)),
  inference(superposition,[],[f1024,f5097])).
fof(f7734,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22)))))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | $spl378),
  inference(cnf_transformation,[],[f7734_D])).
fof(f7734_D,plain,(
  ( ! [X22] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22)))))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f7655,plain,(
  ( ! [X24,X23,X22] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X24))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22)))))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(superposition,[],[f1456,f3710])).
fof(f1456,plain,(
  ( ! [X4,X2,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3),s('type.list.list'('type.exhLang.pat'),X2),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4))) | s('type.list.list'('type.exhLang.pat'),X2) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat'))) ) | $spl106),
  inference(superposition,[],[f69,f1410])).
fof(f1410,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))) ) | $spl106),
  inference(superposition,[],[f1290,f72])).
fof(f7733,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16)))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | $spl376),
  inference(cnf_transformation,[],[f7733_D])).
fof(f7733_D,plain,(
  ( ! [X16] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16)))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f7653,plain,(
  ( ! [X17,X18,X16] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X17),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X18))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16))))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X16)))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X16) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X16,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X16,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(superposition,[],[f1456,f3572])).
fof(f7213,plain,(
  ( ! [X24,X23,X22] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X24))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f3544,f3710])).
fof(f7129,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl245)),
  inference(forward_demodulation,[],[f7112,f73])).
fof(f7112,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl245)),
  inference(superposition,[],[f7109,f72])).
fof(f6899,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl370),
  inference(cnf_transformation,[],[f6899_D])).
fof(f6899_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f6901,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl372),
  inference(cnf_transformation,[],[f6901_D])).
fof(f6901_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f6897,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl358),
  inference(forward_demodulation,[],[f6865,f73])).
fof(f6865,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl358),
  inference(superposition,[],[f6121,f72])).
fof(f6436,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl366),
  inference(cnf_transformation,[],[f6436_D])).
fof(f6436_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f6438,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) | $spl369),
  inference(cnf_transformation,[],[f6438_D])).
fof(f6438_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) <=> ~$spl369),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl369])])).
fof(f6434,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl311),
  inference(superposition,[],[f5130,f72])).
fof(f6245,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl307),
  inference(forward_demodulation,[],[f6212,f73])).
fof(f6212,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl307),
  inference(superposition,[],[f5366,f72])).
fof(f5366,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl307),
  inference(trivial_inequality_removal,[],[f5365])).
fof(f5365,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl307),
  inference(superposition,[],[f5096,f72])).
fof(f6121,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl358),
  inference(cnf_transformation,[],[f6121_D])).
fof(f6121_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f6123,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl360),
  inference(cnf_transformation,[],[f6123_D])).
fof(f6123_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f6119,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl354),
  inference(forward_demodulation,[],[f6087,f73])).
fof(f6087,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl354),
  inference(superposition,[],[f5901,f72])).
fof(f5901,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl354),
  inference(cnf_transformation,[],[f5901_D])).
fof(f5901_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f5903,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl356),
  inference(cnf_transformation,[],[f5903_D])).
fof(f5903_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f5899,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl312),
  inference(forward_demodulation,[],[f5868,f73])).
fof(f5868,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl312),
  inference(superposition,[],[f5200,f72])).
fof(f5548,plain,(
  $false | ($spl309 | $spl317)),
  inference(subsumption_resolution,[],[f5536,f5237])).
fof(f5536,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl309),
  inference(trivial_inequality_removal,[],[f5534])).
fof(f5534,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl309),
  inference(superposition,[],[f5128,f72])).
fof(f5128,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl309),
  inference(cnf_transformation,[],[f5128_D])).
fof(f5128_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl309),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl309])])).
fof(f5518,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl352),
  inference(cnf_transformation,[],[f5518_D])).
fof(f5518_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f5237,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl317),
  inference(cnf_transformation,[],[f5237_D])).
fof(f5237_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl317),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl317])])).
fof(f5516,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl315),
  inference(superposition,[],[f5201,f72])).
fof(f5129,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl308),
  inference(cnf_transformation,[],[f5129_D])).
fof(f5129_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f5130,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl311),
  inference(cnf_transformation,[],[f5130_D])).
fof(f5130_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl311),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl311])])).
fof(f5391,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl305),
  inference(forward_demodulation,[],[f5367,f73])).
fof(f5367,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl305),
  inference(superposition,[],[f5094,f72])).
fof(f5094,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl305),
  inference(cnf_transformation,[],[f5094_D])).
fof(f5094_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl305),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl305])])).
fof(f5095,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl304),
  inference(cnf_transformation,[],[f5095_D])).
fof(f5095_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f5096,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl307),
  inference(cnf_transformation,[],[f5096_D])).
fof(f5096_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl307),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl307])])).
fof(f5354,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl191),
  inference(forward_demodulation,[],[f5330,f73])).
fof(f5330,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl191),
  inference(superposition,[],[f2603,f72])).
fof(f5238,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl316),
  inference(cnf_transformation,[],[f5238_D])).
fof(f5238_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f5240,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl318),
  inference(cnf_transformation,[],[f5240_D])).
fof(f5240_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f5288,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl314),
  inference(forward_demodulation,[],[f5232,f5202])).
fof(f5232,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl314),
  inference(superposition,[],[f72,f5202])).
fof(f5287,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl351),
  inference(cnf_transformation,[],[f5287_D])).
fof(f5287_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl351),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl351])])).
fof(f5285,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl48 | $spl58 | $spl314)),
  inference(forward_demodulation,[],[f5230,f5202])).
fof(f5230,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl48 | $spl58 | $spl314)),
  inference(superposition,[],[f4413,f5202])).
fof(f5284,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | $spl348),
  inference(cnf_transformation,[],[f5284_D])).
fof(f5284_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f5282,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | ($spl272 | $spl314)),
  inference(forward_demodulation,[],[f5229,f5202])).
fof(f5229,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl272 | $spl314)),
  inference(superposition,[],[f4034,f5202])).
fof(f5281,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | $spl346),
  inference(cnf_transformation,[],[f5281_D])).
fof(f5281_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f5279,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(forward_demodulation,[],[f5228,f5202])).
fof(f5228,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(superposition,[],[f3710,f5202])).
fof(f5278,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | $spl344),
  inference(cnf_transformation,[],[f5278_D])).
fof(f5278_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f5276,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | ($spl268 | $spl314)),
  inference(forward_demodulation,[],[f5227,f5202])).
fof(f5227,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl268 | $spl314)),
  inference(superposition,[],[f3708,f5202])).
fof(f5275,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | $spl342),
  inference(cnf_transformation,[],[f5275_D])).
fof(f5275_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f5273,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(forward_demodulation,[],[f5226,f5202])).
fof(f5226,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(superposition,[],[f3572,f5202])).
fof(f5272,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))),'type.exhLang.pat')) | $spl340),
  inference(cnf_transformation,[],[f5272_D])).
fof(f5272_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))),'type.exhLang.pat')) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f5270,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))),'type.exhLang.pat')) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl314)),
  inference(forward_demodulation,[],[f5225,f5202])).
fof(f5225,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl314)),
  inference(superposition,[],[f3529,f5202])).
fof(f3529,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat'))) ) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(subsumption_resolution,[],[f3510,f997])).
fof(f3510,plain,(
  ( ! [X6] : (s('type.list.list'('type.exhLang.pat'),X6) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))) | s('type.list.list'('type.exhLang.pat'),X6) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X6,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X6,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6))) = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X6)))),'type.exhLang.pat'))) ) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(superposition,[],[f1024,f1410])).
fof(f5269,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl339),
  inference(cnf_transformation,[],[f5269_D])).
fof(f5269_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl339),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl339])])).
fof(f5267,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl314)),
  inference(forward_demodulation,[],[f5224,f5202])).
fof(f5224,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl314)),
  inference(superposition,[],[f2820,f5202])).
fof(f5266,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl337),
  inference(cnf_transformation,[],[f5266_D])).
fof(f5266_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl337),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl337])])).
fof(f5264,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl153 | $spl314)),
  inference(forward_demodulation,[],[f5223,f5202])).
fof(f5223,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl153 | $spl314)),
  inference(superposition,[],[f2043,f5202])).
fof(f5263,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl335),
  inference(cnf_transformation,[],[f5263_D])).
fof(f5263_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl335),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl335])])).
fof(f5261,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl133 | $spl314)),
  inference(forward_demodulation,[],[f5222,f5202])).
fof(f5222,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl133 | $spl314)),
  inference(superposition,[],[f1913,f5202])).
fof(f5260,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl333),
  inference(cnf_transformation,[],[f5260_D])).
fof(f5260_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl333),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl333])])).
fof(f5258,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl314)),
  inference(forward_demodulation,[],[f5220,f5202])).
fof(f5220,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl314)),
  inference(superposition,[],[f1435,f5202])).
fof(f1435,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl105 | $spl106)),
  inference(superposition,[],[f1434,f72])).
fof(f1434,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl105 | $spl106)),
  inference(forward_demodulation,[],[f1286,f1290])).
fof(f5257,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl331),
  inference(cnf_transformation,[],[f5257_D])).
fof(f5257_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl331),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl331])])).
fof(f5255,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl314)),
  inference(forward_demodulation,[],[f5219,f5202])).
fof(f5219,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl314)),
  inference(superposition,[],[f1426,f5202])).
fof(f1426,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(superposition,[],[f1409,f72])).
fof(f1409,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl38 | $spl82 | $spl106)),
  inference(backward_demodulation,[],[f1290,f995])).
fof(f5254,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl329),
  inference(cnf_transformation,[],[f5254_D])).
fof(f5254_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl329),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl329])])).
fof(f5252,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl87 | $spl314)),
  inference(forward_demodulation,[],[f5218,f5202])).
fof(f5218,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl314)),
  inference(superposition,[],[f1320,f5202])).
fof(f5251,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl327),
  inference(cnf_transformation,[],[f5251_D])).
fof(f5251_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl327),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl327])])).
fof(f5249,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(forward_demodulation,[],[f5216,f5202])).
fof(f5216,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl314)),
  inference(superposition,[],[f1024,f5202])).
fof(f5248,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))))) ) | $spl324),
  inference(cnf_transformation,[],[f5248_D])).
fof(f5248_D,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f5247,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl82 | $spl314)),
  inference(forward_demodulation,[],[f5215,f5202])).
fof(f5215,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl314)),
  inference(superposition,[],[f1007,f5202])).
fof(f5246,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl322),
  inference(cnf_transformation,[],[f5246_D])).
fof(f5246_D,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f5245,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl314),
  inference(forward_demodulation,[],[f5214,f5202])).
fof(f5214,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl314),
  inference(superposition,[],[f817,f5202])).
fof(f5244,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl321),
  inference(cnf_transformation,[],[f5244_D])).
fof(f5244_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl321),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl321])])).
fof(f5242,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl314)),
  inference(forward_demodulation,[],[f5213,f5202])).
fof(f5213,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl314)),
  inference(superposition,[],[f777,f5202])).
fof(f5236,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | $spl314),
  inference(forward_demodulation,[],[f5206,f5202])).
fof(f5206,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl314),
  inference(superposition,[],[f5202,f72])).
fof(f5200,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl312),
  inference(cnf_transformation,[],[f5200_D])).
fof(f5200_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f5202,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl314),
  inference(cnf_transformation,[],[f5202_D])).
fof(f5202_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f5198,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl308),
  inference(forward_demodulation,[],[f5170,f73])).
fof(f5170,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl308),
  inference(superposition,[],[f5129,f72])).
fof(f5131,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl310),
  inference(cnf_transformation,[],[f5131_D])).
fof(f5131_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f5127,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl304),
  inference(forward_demodulation,[],[f5099,f73])).
fof(f5099,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl304),
  inference(superposition,[],[f5095,f72])).
fof(f5097,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl306),
  inference(cnf_transformation,[],[f5097_D])).
fof(f5097_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f5093,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl190),
  inference(forward_demodulation,[],[f5067,f73])).
fof(f5067,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.NIL_0','type.exhLang.pat'),'type.exhLang.pat')))) | $spl190),
  inference(superposition,[],[f2604,f72])).
fof(f5061,plain,(
  $false | ($spl3 | $spl38 | $spl58 | $spl66 | $spl68 | $spl82 | $spl244)),
  inference(trivial_inequality_removal,[],[f5055])).
fof(f5055,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl3 | $spl38 | $spl58 | $spl66 | $spl68 | $spl82 | $spl244)),
  inference(superposition,[],[f1223,f4954])).
fof(f4954,plain,(
  ( ! [X4,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X4)))) ) | ($spl66 | $spl68 | $spl244)),
  inference(superposition,[],[f69,f4926])).
fof(f4926,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl244)),
  inference(forward_demodulation,[],[f2779,f751])).
fof(f4292,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl278),
  inference(cnf_transformation,[],[f4292_D])).
fof(f4292_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f5019,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl302),
  inference(cnf_transformation,[],[f5019_D])).
fof(f5019_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f5017,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl48 | $spl50)),
  inference(forward_demodulation,[],[f4988,f73])).
fof(f4988,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl48 | $spl50)),
  inference(superposition,[],[f4412,f72])).
fof(f4412,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl48 | $spl50)),
  inference(backward_demodulation,[],[f245,f247])).
fof(f4985,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl300),
  inference(cnf_transformation,[],[f4985_D])).
fof(f4985_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f4981,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl244)),
  inference(forward_demodulation,[],[f4929,f73])).
fof(f4929,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl66 | $spl68 | $spl244)),
  inference(superposition,[],[f4926,f72])).
fof(f245,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl48),
  inference(cnf_transformation,[],[f245_D])).
fof(f245_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4405,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl296),
  inference(cnf_transformation,[],[f4405_D])).
fof(f4405_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f4406,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | ($spl46 | $spl286)),
  inference(forward_demodulation,[],[f796,f4343])).
fof(f4343,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl286),
  inference(superposition,[],[f4333,f73])).
fof(f796,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl46),
  inference(superposition,[],[f242,f72])).
fof(f4403,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | ($spl46 | $spl286)),
  inference(forward_demodulation,[],[f802,f4343])).
fof(f802,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl46),
  inference(superposition,[],[f72,f242])).
fof(f4399,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl294),
  inference(cnf_transformation,[],[f4399_D])).
fof(f4399_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f4400,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl180),
  inference(forward_demodulation,[],[f2400,f2393])).
fof(f2400,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl180),
  inference(superposition,[],[f2393,f72])).
fof(f4397,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl180),
  inference(forward_demodulation,[],[f2415,f2393])).
fof(f2415,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl180),
  inference(superposition,[],[f72,f2393])).
fof(f4395,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl292),
  inference(cnf_transformation,[],[f4395_D])).
fof(f4395_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f4396,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl50),
  inference(forward_demodulation,[],[f4266,f247])).
fof(f4266,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(superposition,[],[f247,f72])).
fof(f4393,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl50),
  inference(forward_demodulation,[],[f4284,f247])).
fof(f4284,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(superposition,[],[f72,f247])).
fof(f4391,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl290),
  inference(cnf_transformation,[],[f4391_D])).
fof(f4391_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f4392,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl276),
  inference(forward_demodulation,[],[f4304,f4289])).
fof(f4304,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl276),
  inference(superposition,[],[f4289,f72])).
fof(f4389,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl276),
  inference(forward_demodulation,[],[f4322,f4289])).
fof(f4322,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl276),
  inference(superposition,[],[f72,f4289])).
fof(f4386,plain,(
  $false | ($spl46 | $spl49 | $spl286)),
  inference(subsumption_resolution,[],[f4363,f244])).
fof(f4363,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | ($spl46 | $spl286)),
  inference(backward_demodulation,[],[f4343,f242])).
fof(f4333,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl286),
  inference(cnf_transformation,[],[f4333_D])).
fof(f4333_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f4335,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl288),
  inference(cnf_transformation,[],[f4335_D])).
fof(f4335_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f4306,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl276),
  inference(superposition,[],[f72,f4289])).
fof(f4303,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl276),
  inference(superposition,[],[f4289,f72])).
fof(f4328,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl282),
  inference(cnf_transformation,[],[f4328_D])).
fof(f4328_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f4330,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl284),
  inference(cnf_transformation,[],[f4330_D])).
fof(f4330_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f4326,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl276),
  inference(forward_demodulation,[],[f4301,f73])).
fof(f4301,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl276),
  inference(superposition,[],[f4289,f72])).
fof(f4294,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl280),
  inference(cnf_transformation,[],[f4294_D])).
fof(f4294_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f4290,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(forward_demodulation,[],[f4263,f73])).
fof(f4263,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(superposition,[],[f247,f72])).
fof(f240,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl44),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4289,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl276),
  inference(cnf_transformation,[],[f4289_D])).
fof(f4289_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f4262,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(superposition,[],[f247,f72])).
fof(f3982,plain,(
  ( ! [X26,X27,X25] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X26),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X27))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X25))))))))) | s('type.list.list'('type.exhLang.pat'),X25) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X25,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X25,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1036,f3710])).
fof(f4034,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X30))))))) | s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X30,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X30,'type.exhLang.pat'))))) ) | $spl272),
  inference(cnf_transformation,[],[f4034_D])).
fof(f4034_D,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X30))))))) | s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X30,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X30,'type.exhLang.pat'))))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f3918,plain,(
  ( ! [X30] : (s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X30))))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X30) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X30,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X30,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f3710,f72])).
fof(f3670,plain,(
  ( ! [X24,X23,X22] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X23),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X24))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X22))))))) | s('type.list.list'('type.exhLang.pat'),X22) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X22,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X22,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f1036,f3572])).
fof(f3708,plain,(
  ( ! [X26] : (s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X26))))) | s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X26,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X26,'type.exhLang.pat'))))) ) | $spl268),
  inference(cnf_transformation,[],[f3708_D])).
fof(f3708_D,plain,(
  ( ! [X26] : (s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X26))))) | s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X26,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X26,'type.exhLang.pat'))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f3617,plain,(
  ( ! [X26] : (s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X26))))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X26) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X26,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X26,'type.exhLang.pat'))))) ) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f3572,f72])).
fof(f3437,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl174),
  inference(forward_demodulation,[],[f3415,f73])).
fof(f3415,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl174),
  inference(superposition,[],[f2291,f72])).
fof(f3298,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl122),
  inference(forward_demodulation,[],[f3277,f73])).
fof(f3277,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl122),
  inference(superposition,[],[f1668,f72])).
fof(f3187,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl248),
  inference(cnf_transformation,[],[f3187_D])).
fof(f3187_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f3274,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl258),
  inference(cnf_transformation,[],[f3274_D])).
fof(f3274_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f3272,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl54 | $spl252)),
  inference(forward_demodulation,[],[f3251,f73])).
fof(f3251,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl54 | $spl252)),
  inference(superposition,[],[f3199,f72])).
fof(f3199,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl54 | $spl252)),
  inference(backward_demodulation,[],[f3192,f273])).
fof(f3240,plain,(
  $false | ($spl12 | $spl58 | $spl75 | $spl252)),
  inference(subsumption_resolution,[],[f3222,f364])).
fof(f3222,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl12 | $spl58 | $spl252)),
  inference(superposition,[],[f73,f3200])).
fof(f3200,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl12 | $spl58 | $spl252)),
  inference(backward_demodulation,[],[f3192,f490])).
fof(f490,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl12 | $spl58)),
  inference(forward_demodulation,[],[f101,f278])).
fof(f3239,plain,(
  $false | ($spl12 | $spl58 | $spl75 | $spl252)),
  inference(subsumption_resolution,[],[f3221,f364])).
fof(f3221,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl12 | $spl58 | $spl252)),
  inference(superposition,[],[f3200,f73])).
fof(f3192,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) | $spl252),
  inference(cnf_transformation,[],[f3192_D])).
fof(f3192_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f3194,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl254),
  inference(cnf_transformation,[],[f3194_D])).
fof(f3194_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f3198,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) | $spl54),
  inference(forward_demodulation,[],[f3181,f273])).
fof(f3181,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl54),
  inference(superposition,[],[f72,f273])).
fof(f3197,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl257),
  inference(cnf_transformation,[],[f3197_D])).
fof(f3197_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl257),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl257])])).
fof(f3195,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl38 | $spl54 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f3179,f273])).
fof(f3179,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl38 | $spl54 | $spl58 | $spl82)),
  inference(superposition,[],[f2853,f273])).
fof(f2853,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))))) ) | ($spl38 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f2852,f71])).
fof(f2852,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))))) ) | ($spl38 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f771,f484])).
fof(f771,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X0) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(X0,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))))) ) | ($spl38 | $spl58)),
  inference(superposition,[],[f737,f72])).
fof(f3190,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) | $spl54),
  inference(forward_demodulation,[],[f3167,f273])).
fof(f3167,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl54),
  inference(superposition,[],[f273,f72])).
fof(f3189,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl250),
  inference(cnf_transformation,[],[f3189_D])).
fof(f3189_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f3185,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl54),
  inference(forward_demodulation,[],[f3166,f73])).
fof(f3166,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl54),
  inference(superposition,[],[f273,f72])).
fof(f1668,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl122),
  inference(cnf_transformation,[],[f1668_D])).
fof(f1668_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f1670,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl124),
  inference(cnf_transformation,[],[f1670_D])).
fof(f1670_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f3100,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(forward_demodulation,[],[f3065,f73])).
fof(f3065,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(superposition,[],[f739,f72])).
fof(f739,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(forward_demodulation,[],[f738,f73])).
fof(f738,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(forward_demodulation,[],[f193,f341])).
fof(f2941,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),X19) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X19))) | s('type.list.list'('type.exhLang.pat'),X19) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X19,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X19,'type.exhLang.pat'))))) ) | $spl246),
  inference(cnf_transformation,[],[f2941_D])).
fof(f2941_D,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),X19) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X19))) | s('type.list.list'('type.exhLang.pat'),X19) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X19,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X19,'type.exhLang.pat'))))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f2934,plain,(
  ( ! [X19] : (s('type.list.list'('type.exhLang.pat'),X19) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X19))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),X19) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X19,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X19,'type.exhLang.pat'))))) ) | ($spl67 | $spl68)),
  inference(superposition,[],[f2783,f72])).
fof(f2783,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl67 | $spl68)),
  inference(backward_demodulation,[],[f341,f1758])).
fof(f1758,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl67),
  inference(superposition,[],[f337,f72])).
fof(f2779,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl244),
  inference(cnf_transformation,[],[f2779_D])).
fof(f2779_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f340,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | $spl69),
  inference(cnf_transformation,[],[f340_D])).
fof(f340_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f1760,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl67),
  inference(superposition,[],[f337,f72])).
fof(f2777,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl242),
  inference(cnf_transformation,[],[f2777_D])).
fof(f2777_D,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f2169,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0)),'type.exhLang.pat'))))) ) | $spl67),
  inference(superposition,[],[f1758,f72])).
fof(f2748,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl224),
  inference(cnf_transformation,[],[f2748_D])).
fof(f2748_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f2771,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl153 | $spl218)),
  inference(forward_demodulation,[],[f2733,f2712])).
fof(f2733,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl153 | $spl218)),
  inference(superposition,[],[f2043,f2712])).
fof(f2768,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl133 | $spl218)),
  inference(forward_demodulation,[],[f2732,f2712])).
fof(f2732,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl133 | $spl218)),
  inference(superposition,[],[f1913,f2712])).
fof(f2767,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl237),
  inference(cnf_transformation,[],[f2767_D])).
fof(f2767_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f2765,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl67 | $spl218)),
  inference(forward_demodulation,[],[f2731,f2712])).
fof(f2731,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl67 | $spl218)),
  inference(superposition,[],[f1758,f2712])).
fof(f2764,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl235),
  inference(cnf_transformation,[],[f2764_D])).
fof(f2764_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl235),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl235])])).
fof(f2762,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl218)),
  inference(forward_demodulation,[],[f2729,f2712])).
fof(f2729,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl218)),
  inference(superposition,[],[f1435,f2712])).
fof(f2761,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl233),
  inference(cnf_transformation,[],[f2761_D])).
fof(f2761_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f2759,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl218)),
  inference(forward_demodulation,[],[f2728,f2712])).
fof(f2728,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl218)),
  inference(superposition,[],[f1426,f2712])).
fof(f2756,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl87 | $spl218)),
  inference(forward_demodulation,[],[f2727,f2712])).
fof(f2727,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl218)),
  inference(superposition,[],[f1320,f2712])).
fof(f2754,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))))) ) | ($spl82 | $spl218)),
  inference(forward_demodulation,[],[f2726,f2712])).
fof(f2726,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl218)),
  inference(superposition,[],[f1007,f2712])).
fof(f2753,plain,(
  ( ! [X8] : (s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | ($spl34 | $spl218)),
  inference(forward_demodulation,[],[f2752,f2712])).
fof(f2752,plain,(
  ( ! [X8] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl34 | $spl218)),
  inference(forward_demodulation,[],[f2725,f1763])).
fof(f1763,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | $spl34),
  inference(superposition,[],[f69,f178])).
fof(f2725,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl218),
  inference(superposition,[],[f817,f2712])).
fof(f2749,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl73 | $spl218)),
  inference(forward_demodulation,[],[f2724,f2712])).
fof(f2724,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl218)),
  inference(superposition,[],[f777,f2712])).
fof(f2746,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl223),
  inference(cnf_transformation,[],[f2746_D])).
fof(f2746_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl223])])).
fof(f2744,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl58 | $spl218)),
  inference(forward_demodulation,[],[f2723,f2712])).
fof(f2723,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl58 | $spl218)),
  inference(superposition,[],[f766,f2712])).
fof(f2742,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl220),
  inference(cnf_transformation,[],[f2742_D])).
fof(f2742_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f2719,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl82 | $spl218)),
  inference(superposition,[],[f1007,f2712])).
fof(f2712,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl218),
  inference(cnf_transformation,[],[f2712_D])).
fof(f2712_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f2708,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl70),
  inference(forward_demodulation,[],[f2675,f73])).
fof(f2675,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl70),
  inference(superposition,[],[f343,f72])).
fof(f2641,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl214),
  inference(cnf_transformation,[],[f2641_D])).
fof(f2641_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f2599,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl187),
  inference(cnf_transformation,[],[f2599_D])).
fof(f2599_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f2639,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl185),
  inference(superposition,[],[f2571,f72])).
fof(f2571,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl185),
  inference(cnf_transformation,[],[f2571_D])).
fof(f2571_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl185),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl185])])).
fof(f2600,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl186),
  inference(cnf_transformation,[],[f2600_D])).
fof(f2600_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f2602,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl188),
  inference(cnf_transformation,[],[f2602_D])).
fof(f2602_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f2636,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl184),
  inference(forward_demodulation,[],[f2594,f2572])).
fof(f2594,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl184),
  inference(superposition,[],[f72,f2572])).
fof(f2633,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl153 | $spl184)),
  inference(forward_demodulation,[],[f2592,f2572])).
fof(f2592,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl153 | $spl184)),
  inference(superposition,[],[f2043,f2572])).
fof(f2630,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl133 | $spl184)),
  inference(forward_demodulation,[],[f2591,f2572])).
fof(f2591,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl133 | $spl184)),
  inference(superposition,[],[f1913,f2572])).
fof(f2629,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl209),
  inference(cnf_transformation,[],[f2629_D])).
fof(f2629_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl209),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl209])])).
fof(f2627,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl67 | $spl184)),
  inference(forward_demodulation,[],[f2590,f2572])).
fof(f2590,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl67 | $spl184)),
  inference(superposition,[],[f1758,f2572])).
fof(f2626,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl207),
  inference(cnf_transformation,[],[f2626_D])).
fof(f2626_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl207),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl207])])).
fof(f2624,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl184)),
  inference(forward_demodulation,[],[f2588,f2572])).
fof(f2588,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl105 | $spl106 | $spl184)),
  inference(superposition,[],[f1435,f2572])).
fof(f2623,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl205),
  inference(cnf_transformation,[],[f2623_D])).
fof(f2623_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f2621,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl184)),
  inference(forward_demodulation,[],[f2587,f2572])).
fof(f2587,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl184)),
  inference(superposition,[],[f1426,f2572])).
fof(f2618,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl87 | $spl184)),
  inference(forward_demodulation,[],[f2586,f2572])).
fof(f2586,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl184)),
  inference(superposition,[],[f1320,f2572])).
fof(f2616,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))))))) ) | ($spl82 | $spl184)),
  inference(forward_demodulation,[],[f2585,f2572])).
fof(f2585,plain,(
  ( ! [X10] : (s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',X10),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl82 | $spl184)),
  inference(superposition,[],[f1007,f2572])).
fof(f2615,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl198),
  inference(cnf_transformation,[],[f2615_D])).
fof(f2615_D,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f2614,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl184),
  inference(forward_demodulation,[],[f2584,f2572])).
fof(f2584,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl184),
  inference(superposition,[],[f817,f2572])).
fof(f2611,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl184)),
  inference(forward_demodulation,[],[f2583,f2572])).
fof(f2583,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl184)),
  inference(superposition,[],[f777,f2572])).
fof(f2610,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl195),
  inference(cnf_transformation,[],[f2610_D])).
fof(f2610_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl195),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl195])])).
fof(f2608,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl58 | $spl184)),
  inference(forward_demodulation,[],[f2582,f2572])).
fof(f2582,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl58 | $spl184)),
  inference(superposition,[],[f766,f2572])).
fof(f2606,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl192),
  inference(cnf_transformation,[],[f2606_D])).
fof(f2606_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f2578,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.NIL_0','type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.NIL_0','type.exhLang.pat')))) | ($spl82 | $spl184)),
  inference(superposition,[],[f1007,f2572])).
fof(f2598,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl184),
  inference(forward_demodulation,[],[f2575,f2572])).
fof(f2575,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl184),
  inference(superposition,[],[f2572,f72])).
fof(f2570,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl182),
  inference(cnf_transformation,[],[f2570_D])).
fof(f2570_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f2572,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl184),
  inference(cnf_transformation,[],[f2572_D])).
fof(f2572_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f2568,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl170),
  inference(forward_demodulation,[],[f2547,f73])).
fof(f2547,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl170),
  inference(superposition,[],[f2218,f72])).
fof(f2391,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl178),
  inference(cnf_transformation,[],[f2391_D])).
fof(f2391_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f2393,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl180),
  inference(cnf_transformation,[],[f2393_D])).
fof(f2393_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f2389,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl46 | $spl49)),
  inference(forward_demodulation,[],[f2367,f73])).
fof(f2367,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl46 | $spl49)),
  inference(superposition,[],[f807,f72])).
fof(f807,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl46 | $spl49)),
  inference(forward_demodulation,[],[f806,f242])).
fof(f806,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl46 | $spl49)),
  inference(subsumption_resolution,[],[f796,f244])).
fof(f2291,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl174),
  inference(cnf_transformation,[],[f2291_D])).
fof(f2291_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f2293,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl176),
  inference(cnf_transformation,[],[f2293_D])).
fof(f2293_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f2289,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl73),
  inference(forward_demodulation,[],[f2271,f73])).
fof(f2271,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl73),
  inference(superposition,[],[f780,f72])).
fof(f780,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl73),
  inference(trivial_inequality_removal,[],[f779])).
fof(f779,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl73),
  inference(superposition,[],[f345,f72])).
fof(f2218,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl170),
  inference(cnf_transformation,[],[f2218_D])).
fof(f2218_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f2220,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl172),
  inference(cnf_transformation,[],[f2220_D])).
fof(f2220_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f2216,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl150),
  inference(forward_demodulation,[],[f2199,f73])).
fof(f2199,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl150),
  inference(superposition,[],[f2000,f72])).
fof(f2047,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl168),
  inference(cnf_transformation,[],[f2047_D])).
fof(f2047_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f2023,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl155),
  inference(cnf_transformation,[],[f2023_D])).
fof(f2023_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f2045,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl153),
  inference(superposition,[],[f2001,f72])).
fof(f2024,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl154),
  inference(cnf_transformation,[],[f2024_D])).
fof(f2024_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f2026,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl156),
  inference(cnf_transformation,[],[f2026_D])).
fof(f2026_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f2042,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl152),
  inference(forward_demodulation,[],[f2018,f2002])).
fof(f2018,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl152),
  inference(superposition,[],[f72,f2002])).
fof(f2041,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl167),
  inference(cnf_transformation,[],[f2041_D])).
fof(f2041_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f2039,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl152)),
  inference(forward_demodulation,[],[f2015,f2002])).
fof(f2015,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl152)),
  inference(superposition,[],[f1426,f2002])).
fof(f2038,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl165),
  inference(cnf_transformation,[],[f2038_D])).
fof(f2038_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl165])])).
fof(f2036,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl87 | $spl152)),
  inference(forward_demodulation,[],[f2014,f2002])).
fof(f2014,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl152)),
  inference(superposition,[],[f1320,f2002])).
fof(f2035,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl162),
  inference(cnf_transformation,[],[f2035_D])).
fof(f2035_D,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f2034,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl152),
  inference(forward_demodulation,[],[f2013,f2002])).
fof(f2013,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl152),
  inference(superposition,[],[f817,f2002])).
fof(f2033,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl161),
  inference(cnf_transformation,[],[f2033_D])).
fof(f2033_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl161),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl161])])).
fof(f2031,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl152)),
  inference(forward_demodulation,[],[f2012,f2002])).
fof(f2012,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl152)),
  inference(superposition,[],[f777,f2002])).
fof(f2030,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl159),
  inference(cnf_transformation,[],[f2030_D])).
fof(f2030_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f2028,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl58 | $spl152)),
  inference(forward_demodulation,[],[f2011,f2002])).
fof(f2011,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl58 | $spl152)),
  inference(superposition,[],[f766,f2002])).
fof(f2022,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | $spl152),
  inference(forward_demodulation,[],[f2005,f2002])).
fof(f2005,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl152),
  inference(superposition,[],[f2002,f72])).
fof(f2000,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl150),
  inference(cnf_transformation,[],[f2000_D])).
fof(f2000_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f2002,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl152),
  inference(cnf_transformation,[],[f2002_D])).
fof(f2002_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f1998,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl130),
  inference(forward_demodulation,[],[f1982,f73])).
fof(f1982,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl130),
  inference(superposition,[],[f1795,f72])).
fof(f1953,plain,(
  $false | ($spl95 | $spl128)),
  inference(trivial_inequality_removal,[],[f1945])).
fof(f1945,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl95 | $spl128)),
  inference(superposition,[],[f776,f1701])).
fof(f1952,plain,(
  $false | ($spl3 | $spl38 | $spl58 | $spl82 | $spl128)),
  inference(trivial_inequality_removal,[],[f1946])).
fof(f1946,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl3 | $spl38 | $spl58 | $spl82 | $spl128)),
  inference(superposition,[],[f1223,f1701])).
fof(f1917,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl148),
  inference(cnf_transformation,[],[f1917_D])).
fof(f1917_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f1893,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | $spl135),
  inference(cnf_transformation,[],[f1893_D])).
fof(f1893_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl135),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl135])])).
fof(f1915,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl133),
  inference(superposition,[],[f1796,f72])).
fof(f1894,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | $spl134),
  inference(cnf_transformation,[],[f1894_D])).
fof(f1894_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f1896,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl136),
  inference(cnf_transformation,[],[f1896_D])).
fof(f1896_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f1912,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | $spl132),
  inference(forward_demodulation,[],[f1888,f1797])).
fof(f1888,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl132),
  inference(superposition,[],[f72,f1797])).
fof(f1911,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl147),
  inference(cnf_transformation,[],[f1911_D])).
fof(f1911_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f1909,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl132)),
  inference(forward_demodulation,[],[f1885,f1797])).
fof(f1885,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82 | $spl106 | $spl132)),
  inference(superposition,[],[f1426,f1797])).
fof(f1908,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl145),
  inference(cnf_transformation,[],[f1908_D])).
fof(f1908_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl145),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl145])])).
fof(f1906,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl87 | $spl132)),
  inference(forward_demodulation,[],[f1884,f1797])).
fof(f1884,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl87 | $spl132)),
  inference(superposition,[],[f1320,f1797])).
fof(f1905,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl142),
  inference(cnf_transformation,[],[f1905_D])).
fof(f1905_D,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f1904,plain,(
  ( ! [X8,X9] : (s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8)))) ) | $spl132),
  inference(forward_demodulation,[],[f1883,f1797])).
fof(f1883,plain,(
  ( ! [X8,X9] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X8))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | $spl132),
  inference(superposition,[],[f817,f1797])).
fof(f1903,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl141),
  inference(cnf_transformation,[],[f1903_D])).
fof(f1903_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f1901,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl73 | $spl132)),
  inference(forward_demodulation,[],[f1882,f1797])).
fof(f1882,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl132)),
  inference(superposition,[],[f777,f1797])).
fof(f1900,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl139),
  inference(cnf_transformation,[],[f1900_D])).
fof(f1900_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl139),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl139])])).
fof(f1898,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl38 | $spl58 | $spl132)),
  inference(forward_demodulation,[],[f1881,f1797])).
fof(f1881,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl58 | $spl132)),
  inference(superposition,[],[f766,f1797])).
fof(f1892,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | $spl132),
  inference(forward_demodulation,[],[f1875,f1797])).
fof(f1875,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl132),
  inference(superposition,[],[f1797,f72])).
fof(f1795,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl130),
  inference(cnf_transformation,[],[f1795_D])).
fof(f1795_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f1797,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl132),
  inference(cnf_transformation,[],[f1797_D])).
fof(f1797_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f1793,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl64),
  inference(forward_demodulation,[],[f1778,f73])).
fof(f1778,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl64),
  inference(superposition,[],[f336,f72])).
fof(f1715,plain,(
  $false | ($spl11 | $spl58 | $spl120)),
  inference(trivial_inequality_removal,[],[f1711])).
fof(f1711,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl11 | $spl58 | $spl120)),
  inference(superposition,[],[f315,f1584])).
fof(f315,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl11 | $spl58)),
  inference(backward_demodulation,[],[f278,f99])).
fof(f1700,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl126),
  inference(cnf_transformation,[],[f1700_D])).
fof(f1700_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f1695,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl42 | $spl68)),
  inference(superposition,[],[f817,f1650])).
fof(f1650,plain,(
  ( ! [X2,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3)))) ) | ($spl42 | $spl68)),
  inference(superposition,[],[f69,f739])).
fof(f1694,plain,(
  ( ! [X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl42 | $spl68)),
  inference(superposition,[],[f1650,f817])).
fof(f1684,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))))) ) | ($spl42 | $spl68)),
  inference(superposition,[],[f1650,f72])).
fof(f1666,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(forward_demodulation,[],[f1638,f73])).
fof(f1638,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl42 | $spl68)),
  inference(superposition,[],[f739,f72])).
fof(f1583,plain,(
  ( ! [X2,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat'))))) ) | $spl118),
  inference(cnf_transformation,[],[f1583_D])).
fof(f1583_D,plain,(
  ( ! [X2,X1] : (s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat'))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f1553,plain,(
  ( ! [X4,X5,X3] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X5))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',X3),s('type.list.list'('type.exhLang.pat'),X4)),'type.exhLang.pat'))))) )),
  inference(superposition,[],[f69,f817])).
fof(f1548,plain,(
  ( ! [X2,X3,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X3))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',X1),s('type.list.list'('type.exhLang.pat'),X2)),'type.exhLang.pat'))))) )),
  inference(superposition,[],[f817,f69])).
fof(f1407,plain,(
  $false | ($spl79 | $spl107)),
  inference(subsumption_resolution,[],[f1406,f478])).
fof(f478,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl79),
  inference(cnf_transformation,[],[f478_D])).
fof(f478_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f1406,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl107),
  inference(trivial_inequality_removal,[],[f1405])).
fof(f1405,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl107),
  inference(superposition,[],[f1289,f72])).
fof(f1370,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl116),
  inference(cnf_transformation,[],[f1370_D])).
fof(f1370_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f1289,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | $spl107),
  inference(cnf_transformation,[],[f1289_D])).
fof(f1289_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f1365,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl79),
  inference(superposition,[],[f478,f72])).
fof(f1286,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl105),
  inference(cnf_transformation,[],[f1286_D])).
fof(f1286_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f1368,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl79),
  inference(forward_demodulation,[],[f1362,f73])).
fof(f1362,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl79),
  inference(superposition,[],[f478,f72])).
fof(f1290,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | $spl106),
  inference(cnf_transformation,[],[f1290_D])).
fof(f1290_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f1292,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl108),
  inference(cnf_transformation,[],[f1292_D])).
fof(f1292_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f1302,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | $spl78),
  inference(forward_demodulation,[],[f1279,f479])).
fof(f1279,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl78),
  inference(superposition,[],[f72,f479])).
fof(f1299,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl78)),
  inference(forward_demodulation,[],[f1275,f479])).
fof(f1275,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl5 | $spl38 | $spl68 | $spl78)),
  inference(superposition,[],[f756,f479])).
fof(f756,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl5 | $spl38 | $spl68)),
  inference(superposition,[],[f748,f72])).
fof(f1296,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl73 | $spl78)),
  inference(forward_demodulation,[],[f1274,f479])).
fof(f1274,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl73 | $spl78)),
  inference(superposition,[],[f777,f479])).
fof(f1295,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | $spl111),
  inference(cnf_transformation,[],[f1295_D])).
fof(f1295_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f1293,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl67 | $spl68 | $spl78)),
  inference(forward_demodulation,[],[f1273,f479])).
fof(f1273,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl67 | $spl68 | $spl78)),
  inference(superposition,[],[f931,f479])).
fof(f931,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl67 | $spl68)),
  inference(superposition,[],[f395,f72])).
fof(f395,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl67 | $spl68)),
  inference(forward_demodulation,[],[f337,f341])).
fof(f1288,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | $spl78),
  inference(forward_demodulation,[],[f1271,f479])).
fof(f1271,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl78),
  inference(superposition,[],[f479,f72])).
fof(f1283,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl78),
  inference(forward_demodulation,[],[f1270,f73])).
fof(f1270,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl78),
  inference(superposition,[],[f479,f72])).
fof(f1215,plain,(
  $false | ($spl2 | $spl11 | $spl38 | $spl58 | $spl82)),
  inference(subsumption_resolution,[],[f1209,f315])).
fof(f1209,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl2 | $spl38 | $spl58 | $spl82)),
  inference(superposition,[],[f71,f1199])).
fof(f1199,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl2 | $spl38 | $spl58 | $spl82)),
  inference(forward_demodulation,[],[f750,f484])).
fof(f750,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl2 | $spl38 | $spl58)),
  inference(forward_demodulation,[],[f749,f183])).
fof(f749,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl2 | $spl58)),
  inference(forward_demodulation,[],[f89,f278])).
fof(f89,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl2),
  inference(cnf_transformation,[],[f89_D])).
fof(f89_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1214,plain,(
  $false | ($spl2 | $spl11 | $spl38 | $spl58 | $spl82)),
  inference(subsumption_resolution,[],[f1208,f315])).
fof(f1208,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl2 | $spl38 | $spl58 | $spl82)),
  inference(superposition,[],[f1199,f71])).
fof(f1155,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | $spl98),
  inference(cnf_transformation,[],[f1155_D])).
fof(f1155_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f1157,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl100),
  inference(cnf_transformation,[],[f1157_D])).
fof(f1157_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f1158,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | $spl46),
  inference(forward_demodulation,[],[f1149,f1118])).
fof(f1118,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | $spl46),
  inference(superposition,[],[f808,f242])).
fof(f808,plain,(
  ( ! [X0] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),X0),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),X0),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')))))) ) | $spl46),
  inference(forward_demodulation,[],[f797,f73])).
fof(f797,plain,(
  ( ! [X0] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),X0),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),X0),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0')))))) ) | $spl46),
  inference(superposition,[],[f74,f242])).
fof(f1149,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl46),
  inference(superposition,[],[f72,f1118])).
fof(f1153,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | $spl46),
  inference(forward_demodulation,[],[f1143,f1118])).
fof(f1143,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2)),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl46),
  inference(superposition,[],[f1118,f72])).
fof(f1137,plain,(
  $false | ($spl14 | $spl38 | $spl82 | $spl95)),
  inference(subsumption_resolution,[],[f1136,f776])).
fof(f1136,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl14 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f732,f484])).
fof(f732,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl14 | $spl38)),
  inference(forward_demodulation,[],[f102,f183])).
fof(f102,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl14),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1114,plain,(
  $false | ($spl9 | $spl38 | $spl82 | $spl92)),
  inference(subsumption_resolution,[],[f1113,f995])).
fof(f479,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl78),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f593,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl87),
  inference(cnf_transformation,[],[f593_D])).
fof(f593_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f1030,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f1026,f73])).
fof(f1026,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38 | $spl82)),
  inference(superposition,[],[f995,f72])).
fof(f994,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl96),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f989,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl9 | $spl38)),
  inference(superposition,[],[f493,f72])).
fof(f992,plain,(
  $false | ($spl9 | $spl38 | $spl83)),
  inference(subsumption_resolution,[],[f990,f483])).
fof(f990,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl38)),
  inference(trivial_inequality_removal,[],[f988])).
fof(f988,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl9 | $spl38)),
  inference(superposition,[],[f493,f72])).
fof(f480,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl81),
  inference(cnf_transformation,[],[f480_D])).
fof(f480_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f991,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38)),
  inference(forward_demodulation,[],[f987,f73])).
fof(f987,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl9 | $spl38)),
  inference(superposition,[],[f493,f72])).
fof(f975,plain,(
  $false | ($spl11 | $spl58 | $spl94)),
  inference(subsumption_resolution,[],[f969,f315])).
fof(f969,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl94),
  inference(superposition,[],[f71,f775])).
fof(f775,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl94),
  inference(cnf_transformation,[],[f775_D])).
fof(f775_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f974,plain,(
  $false | ($spl11 | $spl58 | $spl94)),
  inference(subsumption_resolution,[],[f968,f315])).
fof(f968,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl94),
  inference(superposition,[],[f775,f71])).
fof(f927,plain,(
  $false | ($spl11 | $spl34 | $spl58 | $spl68)),
  inference(trivial_inequality_removal,[],[f923])).
fof(f923,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl11 | $spl34 | $spl58 | $spl68)),
  inference(superposition,[],[f315,f892])).
fof(f892,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl34 | $spl68)),
  inference(backward_demodulation,[],[f837,f71])).
fof(f837,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl34 | $spl68)),
  inference(superposition,[],[f69,f753])).
fof(f753,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl34 | $spl68)),
  inference(forward_demodulation,[],[f178,f341])).
fof(f915,plain,(
  $false | ($spl34 | $spl68 | $spl95)),
  inference(trivial_inequality_removal,[],[f911])).
fof(f911,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl34 | $spl68 | $spl95)),
  inference(superposition,[],[f776,f837])).
fof(f833,plain,(
  $false | ($spl11 | $spl16 | $spl58)),
  inference(subsumption_resolution,[],[f105,f315])).
fof(f781,plain,(
  $false | ($spl36 | $spl38 | $spl73)),
  inference(subsumption_resolution,[],[f347,f345])).
fof(f347,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl36 | $spl38)),
  inference(forward_demodulation,[],[f180,f183])).
fof(f776,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl95),
  inference(cnf_transformation,[],[f776_D])).
fof(f776_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f768,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl38 | $spl58)),
  inference(superposition,[],[f737,f72])).
fof(f88,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl0),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f149,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl25),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f765,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | ($spl38 | $spl58)),
  inference(superposition,[],[f737,f72])).
fof(f761,plain,(
  $false | ($spl5 | $spl38 | $spl68 | $spl72)),
  inference(subsumption_resolution,[],[f758,f346])).
fof(f758,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl5 | $spl38 | $spl68)),
  inference(superposition,[],[f748,f73])).
fof(f743,plain,(
  $false | ($spl37 | $spl38 | $spl72)),
  inference(subsumption_resolution,[],[f742,f183])).
fof(f742,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | ($spl37 | $spl72)),
  inference(forward_demodulation,[],[f179,f346])).
fof(f741,plain,(
  $false | ($spl37 | $spl38 | $spl72)),
  inference(subsumption_resolution,[],[f207,f346])).
fof(f207,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl37 | $spl38)),
  inference(forward_demodulation,[],[f179,f183])).
fof(f730,plain,(
  $false | ($spl3 | $spl8 | $spl38)),
  inference(subsumption_resolution,[],[f199,f667])).
fof(f667,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl8 | $spl38)),
  inference(superposition,[],[f69,f423])).
fof(f423,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(forward_demodulation,[],[f97,f183])).
fof(f729,plain,(
  $false | ($spl8 | $spl38)),
  inference(subsumption_resolution,[],[f200,f667])).
fof(f728,plain,(
  $false | ($spl7 | $spl8 | $spl38)),
  inference(subsumption_resolution,[],[f94,f667])).
fof(f727,plain,(
  $false | ($spl8 | $spl15 | $spl38)),
  inference(subsumption_resolution,[],[f198,f667])).
fof(f198,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl15 | $spl38)),
  inference(backward_demodulation,[],[f183,f103])).
fof(f726,plain,(
  $false | ($spl8 | $spl21 | $spl38)),
  inference(subsumption_resolution,[],[f697,f667])).
fof(f697,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl21 | $spl38)),
  inference(forward_demodulation,[],[f120,f183])).
fof(f725,plain,(
  $false | ($spl8 | $spl23 | $spl38)),
  inference(subsumption_resolution,[],[f130,f667])).
fof(f724,plain,(
  $false | ($spl8 | $spl19 | $spl38 | $spl58)),
  inference(subsumption_resolution,[],[f314,f667])).
fof(f723,plain,(
  $false | ($spl8 | $spl15 | $spl38 | $spl48)),
  inference(trivial_inequality_removal,[],[f719])).
fof(f719,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl8 | $spl15 | $spl38 | $spl48)),
  inference(superposition,[],[f640,f667])).
fof(f640,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl15 | $spl38 | $spl48)),
  inference(forward_demodulation,[],[f198,f245])).
fof(f685,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl91),
  inference(cnf_transformation,[],[f685_D])).
fof(f685_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f486,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl84),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f683,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl8 | $spl38 | $spl67 | $spl68)),
  inference(forward_demodulation,[],[f669,f423])).
fof(f669,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl8 | $spl38 | $spl67 | $spl68)),
  inference(superposition,[],[f396,f423])).
fof(f396,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | ($spl67 | $spl68)),
  inference(superposition,[],[f395,f72])).
fof(f682,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | $spl89),
  inference(cnf_transformation,[],[f682_D])).
fof(f682_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f680,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | ($spl8 | $spl38 | $spl83)),
  inference(forward_demodulation,[],[f668,f423])).
fof(f668,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl8 | $spl38 | $spl83)),
  inference(superposition,[],[f641,f423])).
fof(f641,plain,(
  ( ! [X0] : (s('type.list.list'('type.exhLang.pat'),X0) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),X0))) | s('type.list.list'('type.exhLang.pat'),X0) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(X0,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(X0,'type.exhLang.pat'))))) ) | $spl83),
  inference(superposition,[],[f483,f72])).
fof(f481,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl80),
  inference(cnf_transformation,[],[f481_D])).
fof(f481_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f677,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(forward_demodulation,[],[f665,f73])).
fof(f665,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(superposition,[],[f423,f72])).
fof(f639,plain,(
  $false | ($spl4 | $spl15 | $spl38 | $spl82)),
  inference(subsumption_resolution,[],[f638,f216])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl4 | $spl38)),
  inference(superposition,[],[f69,f208])).
fof(f208,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f92,f183])).
fof(f638,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | ($spl15 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f198,f484])).
fof(f594,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl86),
  inference(cnf_transformation,[],[f594_D])).
fof(f594_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f592,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f576,f73])).
fof(f576,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38 | $spl82)),
  inference(superposition,[],[f573,f72])).
fof(f573,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) | ($spl8 | $spl38 | $spl82)),
  inference(forward_demodulation,[],[f423,f484])).
fof(f492,plain,(
  $false | ($spl4 | $spl11 | $spl38)),
  inference(subsumption_resolution,[],[f99,f428])).
fof(f428,plain,(
  ( ! [X1] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') = s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),X1)))) ) | ($spl4 | $spl38)),
  inference(backward_demodulation,[],[f216,f71])).
fof(f491,plain,(
  $false | ($spl4 | $spl11 | $spl38 | $spl58)),
  inference(subsumption_resolution,[],[f315,f428])).
fof(f487,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl8 | $spl38)),
  inference(forward_demodulation,[],[f473,f423])).
fof(f473,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(superposition,[],[f72,f423])).
fof(f482,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | ($spl8 | $spl38)),
  inference(forward_demodulation,[],[f468,f423])).
fof(f468,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'))),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(superposition,[],[f423,f72])).
fof(f477,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(forward_demodulation,[],[f467,f73])).
fof(f467,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0')),'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl8 | $spl38)),
  inference(superposition,[],[f423,f72])).
fof(f458,plain,(
  $false | ($spl4 | $spl17 | $spl38)),
  inference(trivial_inequality_removal,[],[f454])).
fof(f454,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') | ($spl4 | $spl17 | $spl38)),
  inference(superposition,[],[f106,f428])).
fof(f374,plain,(
  $false | ($spl35 | $spl69)),
  inference(subsumption_resolution,[],[f373,f177])).
fof(f373,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl69),
  inference(trivial_inequality_removal,[],[f372])).
fof(f372,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl69),
  inference(superposition,[],[f340,f72])).
fof(f371,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl76),
  inference(cnf_transformation,[],[f371_D])).
fof(f371_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f367,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl35),
  inference(superposition,[],[f177,f72])).
fof(f336,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl64),
  inference(cnf_transformation,[],[f336_D])).
fof(f336_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f337,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl67),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f369,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl35),
  inference(forward_demodulation,[],[f365,f73])).
fof(f365,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl35),
  inference(superposition,[],[f177,f72])).
fof(f273,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl54),
  inference(cnf_transformation,[],[f273_D])).
fof(f273_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f364,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl75),
  inference(cnf_transformation,[],[f364_D])).
fof(f364_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f362,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl13 | $spl58)),
  inference(forward_demodulation,[],[f358,f73])).
fof(f358,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl13 | $spl58)),
  inference(superposition,[],[f313,f72])).
fof(f313,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | ($spl13 | $spl58)),
  inference(backward_demodulation,[],[f278,f100])).
fof(f100,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl13),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f225,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl4 | $spl38)),
  inference(forward_demodulation,[],[f213,f73])).
fof(f213,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | ($spl4 | $spl38)),
  inference(superposition,[],[f208,f72])).
fof(f341,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | $spl68),
  inference(cnf_transformation,[],[f341_D])).
fof(f341_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f343,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl70),
  inference(cnf_transformation,[],[f343_D])).
fof(f343_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f344,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | $spl34),
  inference(forward_demodulation,[],[f330,f178])).
fof(f330,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl34),
  inference(superposition,[],[f72,f178])).
fof(f339,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | $spl34),
  inference(forward_demodulation,[],[f325,f178])).
fof(f325,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl34),
  inference(superposition,[],[f178,f72])).
fof(f334,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl34),
  inference(forward_demodulation,[],[f324,f73])).
fof(f324,plain,(
  s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat'),'type.exhLang.pat')))) | $spl34),
  inference(superposition,[],[f178,f72])).
fof(f312,plain,(
  $false | ($spl13 | $spl59)),
  inference(subsumption_resolution,[],[f311,f100])).
fof(f311,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl59),
  inference(trivial_inequality_removal,[],[f310])).
fof(f310,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl59),
  inference(superposition,[],[f277,f72])).
fof(f309,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl62),
  inference(cnf_transformation,[],[f309_D])).
fof(f309_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f277,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | $spl59),
  inference(cnf_transformation,[],[f277_D])).
fof(f277_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f305,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl13),
  inference(superposition,[],[f100,f72])).
fof(f274,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl57),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f307,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl13),
  inference(forward_demodulation,[],[f303,f73])).
fof(f303,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl13),
  inference(superposition,[],[f100,f72])).
fof(f280,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl60),
  inference(cnf_transformation,[],[f280_D])).
fof(f280_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f281,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | $spl12),
  inference(forward_demodulation,[],[f267,f101])).
fof(f267,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl12),
  inference(superposition,[],[f72,f101])).
fof(f276,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | $spl12),
  inference(forward_demodulation,[],[f261,f101])).
fof(f261,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5('const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl12),
  inference(superposition,[],[f101,f72])).
fof(f271,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.SNOC_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl12),
  inference(forward_demodulation,[],[f260,f73])).
fof(f260,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl12),
  inference(superposition,[],[f101,f72])).
fof(f259,plain,(
  $false | ($spl1 | $spl49)),
  inference(subsumption_resolution,[],[f258,f87])).
fof(f87,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl1),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f258,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl49),
  inference(trivial_inequality_removal,[],[f257])).
fof(f257,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl49),
  inference(superposition,[],[f244,f72])).
fof(f256,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl52),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f244,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl49),
  inference(cnf_transformation,[],[f244_D])).
fof(f244_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f252,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl1),
  inference(superposition,[],[f87,f72])).
fof(f241,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl47),
  inference(cnf_transformation,[],[f241_D])).
fof(f241_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f254,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl1),
  inference(forward_demodulation,[],[f250,f73])).
fof(f250,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl1),
  inference(superposition,[],[f87,f72])).
fof(f247,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl50),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f248,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl0),
  inference(forward_demodulation,[],[f234,f88])).
fof(f234,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl0),
  inference(superposition,[],[f72,f88])).
fof(f243,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | $spl0),
  inference(forward_demodulation,[],[f228,f88])).
fof(f228,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0') = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5('const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl0),
  inference(superposition,[],[f88,f72])).
fof(f242,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | $spl46),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f238,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.SNOC_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl0),
  inference(forward_demodulation,[],[f227,f73])).
fof(f227,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')),'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl0),
  inference(superposition,[],[f88,f72])).
fof(f196,plain,(
  $false | ($spl5 | $spl39)),
  inference(subsumption_resolution,[],[f195,f91])).
fof(f195,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl39),
  inference(trivial_inequality_removal,[],[f194])).
fof(f194,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl39),
  inference(superposition,[],[f182,f72])).
fof(f193,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl42),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f189,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') != s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl5),
  inference(superposition,[],[f91,f72])).
fof(f179,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | $spl37),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f191,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl5),
  inference(forward_demodulation,[],[f187,f73])).
fof(f187,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) != s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl5),
  inference(superposition,[],[f91,f72])).
fof(f185,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl40),
  inference(cnf_transformation,[],[f185_D])).
fof(f185_D,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f186,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | $spl4),
  inference(forward_demodulation,[],[f172,f92])).
fof(f172,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl4),
  inference(superposition,[],[f72,f92])).
fof(f181,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | $spl4),
  inference(forward_demodulation,[],[f167,f92])).
fof(f167,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0') = s('type.list.list'('type.exhLang.pat'),sK1) | s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))),'type.exhLang.pat')))) | $spl4),
  inference(superposition,[],[f92,f72])).
fof(f176,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl4),
  inference(forward_demodulation,[],[f166,f73])).
fof(f166,plain,(
  s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK5(sK1,'type.exhLang.pat'),'type.exhLang.pat')))) | $spl4),
  inference(superposition,[],[f92,f72])).
fof(f101,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl12),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f165,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl32),
  inference(cnf_transformation,[],[f165_D])).
fof(f165_D,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f158,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))))) )),
  inference(superposition,[],[f84,f72])).
fof(f84,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) )),
  inference(superposition,[],[f67,f72])).
fof(f97,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) | $spl8),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f162,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl30),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f152,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v')))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))) )),
  inference(superposition,[],[f84,f72])).
fof(f161,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl28),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f151,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v')))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))) )),
  inference(superposition,[],[f84,f72])).
fof(f160,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) | $spl26),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v'))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f150,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),X0),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhSem.v'),X0) = s('type.list.list'('type.exhSem.v'),'const.list.CONS_2'(s('type.exhSem.v',sK4(X0,'type.exhSem.v')),s('type.list.list'('type.exhSem.v'),sK5(X0,'type.exhSem.v')))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))))) )),
  inference(superposition,[],[f84,f72])).
fof(f146,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl19),
  inference(superposition,[],[f117,f72])).
fof(f130,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl23),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f132,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl15),
  inference(superposition,[],[f103,f72])).
fof(f120,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl21),
  inference(cnf_transformation,[],[f120_D])).
fof(f120_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f131,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl15),
  inference(superposition,[],[f103,f72])).
fof(f127,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl7),
  inference(superposition,[],[f94,f72])).
fof(f121,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))))) | $spl7),
  inference(superposition,[],[f94,f72])).
fof(f115,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl3),
  inference(superposition,[],[f90,f72])).
fof(f111,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat')))) | $spl3),
  inference(superposition,[],[f90,f72])).
fof(f104,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))))) | $spl11),
  inference(superposition,[],[f99,f72])).
fof(f103,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | $spl15),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f86,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'),sK4(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK5(sK3,'type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')))))),
  inference(superposition,[],[f67,f72])).
fof(f99,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl11),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f95,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))),
  inference(forward_demodulation,[],[f83,f71])).
fof(f83,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5('const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1)),'type.exhLang.pat'))))),
  inference(superposition,[],[f67,f72])).
fof(f94,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl7),
  inference(cnf_transformation,[],[f94_D])).
fof(f94_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f82,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),'const.list.NIL_0'))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.exhLang.pat'),sK1) = s('type.list.list'('type.exhLang.pat'),'const.list.CONS_2'(s('type.exhLang.pat',sK4(sK1,'type.exhLang.pat')),s('type.list.list'('type.exhLang.pat'),sK5(sK1,'type.exhLang.pat'))))),
  inference(superposition,[],[f67,f72])).
fof(f90,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | $spl3),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f81,plain,(
  s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.semanticPrimitives.Match_type_error_0') != s('type.semanticPrimitives.match_result'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v'))),'const.exhSem.pmatch_list_4'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.NIL_0'),s('type.list.list'('type.exhLang.pat'),'const.list.SNOC_2'(s('type.exhLang.pat',sK0),s('type.list.list'('type.exhLang.pat'),sK1))),s('type.list.list'('type.exhSem.v'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.exhSem.v')),sK3))) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK2) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.list.CONS_2'(s('type.semanticPrimitives.store_v'('type.exhSem.v'),sK4(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v'))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK5(sK2,'type.semanticPrimitives.store_v'('type.exhSem.v')))))),
  inference(superposition,[],[f67,f72])).
% SZS output end Proof for thm.exhProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 748
% Passive clauses: 4398
% Generated clauses: 31077
% Final active clauses: 218
% Final passive clauses: 524
% Input formulas: 45
% Initial clauses: 13
% 
% Selected by SInE selection: 10
% SInE iterations: 1
% 
% Duplicate literals: 278
% Trivial inequalities: 539
% Fw subsumption resolutions: 938
% Fw demodulations: 5247
% Bw demodulations: 134
% 
% Simple tautologies: 55
% Forward subsumptions: 18509
% Fw demodulations to eq. taut.: 13
% Bw demodulations to eq. taut.: 6
% 
% Forward superposition: 11623
% Backward superposition: 10706
% Self superposition: 90
% Equality factoring: 1
% Equality resolution: 2
% 
% Split clauses: 949
% Split components: 1898
% SAT solver clauses: 1102
% SAT solver unit clauses: 1
% SAT solver binary clauses: 39
% 
% Sat splits: 949
% Sat splitting refutations: 152
% 
% Memory used [KB]: 19189
% Time elapsed: 1.411 s
% ------------------------------
% ------------------------------
% Success in time 13.187 s
